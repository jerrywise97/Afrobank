{"version":3,"sources":["services/index.js","utils/error.js","services/authentication/index.js","services/appstore/actions/actions.js","services/appstore/actions/index.js","components/forms/validation/index.js","globalcomponents/pin.js","globalcomponents/button.js","globalcomponents/input.js","components/forms/index.js","components/signin/signin.js","components/homepage/index.js","components/register/index.js","components/dashboard/sidebar.js","services/transactions/index.js","utils/date.js","utils/money.js","components/dashboard/dashboard.js","components/dashboard/wallet.js","services/notifications/index.js","modals/pinModal.js","components/dashboard/sendmoney.js","components/dashboard/profile.js","components/dashboard/settings.js","components/dashboard/index.js","components/sigout/signOut.js","components/forgotpassword/forgotPassword.js","pages/protectedroute.pages.js","pages/index.js","services/appstore/reducers/reducer.js","services/appstore/reducers/index.js","services/appstore/index.js","App.jsx","serviceWorker.js","index.jsx"],"names":["axios","create","baseURL","process","extractApiError","error","message","response","data","registerUser","payload","a","Axios","post","userLogin","payLoad","user_login","resp","isSignedIn","dispatch","type","loginSchema","yup","shape","email","required","password","transferSchema","recipient","amount","signUpSchema","firstName","surName","lastName","matches","gender","phoneNumber","forgotPasswordSchema","Pin","props","secret","inputStyle","fontWeight","color","height","border","marginLeft","borderBottom","margin","width","onChange","length","CustomBtn","styled","button","bg","Button","IconComponent","icon","className","text","StyleField","Input","CustomInputs","Label","label","children","ErrorText","p","Error","style","makeStyles","marginBottom","outline","classes","TextField","variant","LoginForm","initialValues","validationSchema","validateOnBlur","validateOnChange","onSubmit","e","handleSubmit","errors","handleChange","values","Form","name","value","autoComplete","fontSize","to","disabled","formLoading","ForgotPasswordForm","TransferForm","formSubmit","isValidBalance","balance","Box","component","sx","maxWidth","SignUpForm","regError","Text","btn","connect","useState","state","setState","history","push","Col","position","top","left","bottom","right","Row","lg","xs","md","sm","Facebook","Twitter","Instagram","backgroundColor","opacity","textDecoration","HomePage","Register","console","log","this","React","Component","Type","span","size","Sidelink","Styled","activeClassName","dashboardRoutes","path","Payment","AccountBalance","Person","SideBar","marginTop","map","idx","key","exact","ExitToApp","transfer","sender","pin","body","toString","transactionHistory","accountNumber","updateTransactionHistory","get","getBalance","daysOfTheWeek","months","getCurrentDate","date","Date","formatMoney","money","toFixed","sumAmount","transactions","reduce","b","AccountCard","div","img","Dashbody","Inputdiv","input","DashbodyCard","h5","balanceDisplay","user","toggleDisplay","display","toggleTransferModal","displayBal","balanceLoading","useSelector","pageBalance","signIn","toggleVisibility","useEffect","fetchData","currentDay","getHours","getTimeOfTheDay","Search","placeholder","Container","background","Autorenew","cursor","onClick","Visibility","VisibilityOff","allDebits","filter","transaction_type","totalDebits","calculateAllDebit","Table","overflowY","striped","responsive","borderless","slice","transaction","i","transaction_id","transaction_date","formatDay","currentDate","day","getDay","getDate","month","getMonth","year","getFullYear","getFormatedDate","formatTime","getMinutes","getFormatedTime","Wallet","fetchAllNotifications","deleteSingleNotification","id","PinModal","Modal","isOpen","isVisible","toggle","Clear","ModalBody","ArrowForward","defaultProps","Card","setFormLoading","setError","setBalance","setPin","pinModal","setPinModal","fetchBalance","maxheight","xl","Profile","Settings","NotificationDiv","Badge","Menu","DropdownMenu","Item","DropdownItem","Main","showNotification","setNotification","notifications","userNotification","setUsernotification","deleteNotification","getNotifications","Dashboard","SendMoney","Dropdown","prevState","DropdownToggle","NotificationsNone","_id","notification_text","localStorage","clear","signOut","ForgotPassword","role","aria-label","ProtectedRoute","rest","render","routes","public","Signin","SignOut","TransitionGroup","CSSTransition","timeout","basename","Homepage","intState","userReg","isRegistered","userPinReset","isPinReset","combineReducers","action","config","storage","whitelist","middleWare","thunk","persistedReducer","persistReducer","appStore","store","createStore","applyMiddleware","persiststore","persistStore","App","loading","persistor","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","document","getElementById","URL","href","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4d3917eb.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: process.env.REACT_APP_BASE_URL,\r\n});\r\n","const extractApiError = (error) => {\r\n    if (typeof error === 'object') {\r\n        if (error.message === 'Network Error') {\r\n            return error.message\r\n        } else {\r\n            return error.response.data.message\r\n        }\r\n    } else {\r\n        return error\r\n    }\r\n}\r\nexport { extractApiError }\r\n","import Axios from '../index'\r\nimport { extractApiError } from '../../utils/error'\r\n\r\nconst registerUser = async (payload) => {\r\n    try {\r\n        await Axios.post('/register', payload)\r\n    } catch (error) {\r\n        extractApiError(error)\r\n    }\r\n}\r\n\r\nconst userLogin = async (payLoad, user_login) => {\r\n    try {\r\n        const resp = await Axios.post('/login', payLoad)\r\n\r\n        user_login(resp.data.message, true)\r\n        return resp\r\n    } catch (error) {\r\n        throw extractApiError(error)\r\n    }\r\n}\r\n\r\nconst resetPin = async (pin) => {\r\n    const body = { pin }\r\n    try {\r\n        const resp = await Axios.post('/pinreset', body)\r\n        console.log(resp)\r\n    } catch (error) {\r\n        throw error\r\n    }\r\n}\r\n\r\nconst signOut = (userLogin) => {\r\n    try {\r\n        userLogin('', false)\r\n        localStorage.clear()\r\n    } catch (error) {\r\n        throw error\r\n    }\r\n}\r\nexport { userLogin, resetPin, registerUser, signOut }\r\n","import {\r\n    LOGIN,\r\n    pinReset,\r\n    register,\r\n    transactionHistory,\r\n    toggleBalanceDisplay,\r\n} from './index'\r\n\r\nconst user_login = (data, isSignedIn) => (dispatch) => {\r\n    dispatch({\r\n        type: LOGIN,\r\n        payload: data,\r\n        isSignedIn,\r\n    })\r\n}\r\n\r\nconst userRegister = (data, isRegistered) => (dispatch) => {\r\n    dispatch({\r\n        type: register,\r\n        payload: data,\r\n        isRegistered,\r\n    })\r\n}\r\n\r\nconst userPinReset = (data, isPinReset) => (dispatch) => {\r\n    dispatch({\r\n        type: pinReset,\r\n        payload: data,\r\n        isPinReset,\r\n    })\r\n}\r\n\r\nconst updateTransactionHistory = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: transactionHistory,\r\n        payload: data,\r\n    })\r\n}\r\n\r\nconst toggleDisplay = (display) => (dispatch) => {\r\n    dispatch({\r\n        type: toggleBalanceDisplay,\r\n        payload: display,\r\n    })\r\n}\r\n\r\nexport {\r\n    user_login,\r\n    userPinReset,\r\n    userRegister,\r\n    updateTransactionHistory,\r\n    toggleDisplay,\r\n}\r\n","const LOGIN = 'LOGIN'\r\nconst register = 'register'\r\nconst pinReset = 'pinReset'\r\nconst transfer = 'transfer'\r\nconst transactionHistory = 'transactionHistory'\r\nconst toggleBalanceDisplay = 'toggleBalanceDisplay'\r\n\r\nexport {\r\n    LOGIN,\r\n    register,\r\n    pinReset,\r\n    transfer,\r\n    transactionHistory,\r\n    toggleBalanceDisplay,\r\n}\r\n","import * as yup from 'yup'\r\n\r\nconst loginSchema = yup.object().shape({\r\n    email: yup.string().email().required('email is required'),\r\n    password: yup.string().required('password is required'),\r\n})\r\n\r\nconst transferSchema = yup.object().shape({\r\n    recipient: yup.number().required('recipient account number is required'),\r\n    amount: yup.number().required(),\r\n})\r\n\r\nconst signUpSchema = yup.object().shape({\r\n    firstName: yup.string().required(),\r\n    surName: yup.string().required(),\r\n    lastName: yup.string().required(),\r\n    email: yup.string().required().email(),\r\n    password: yup\r\n        .string()\r\n        .required('*password is required')\r\n        .matches(\r\n            /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})/,\r\n            'min length 8 Characters, One Uppercase, One Lowercase, One Number and One Special Character'\r\n        ),\r\n    gender: yup.string().required('*gender is required'),\r\n    phoneNumber: yup.string().required(),\r\n})\r\n\r\nconst forgotPasswordSchema = yup.object().shape({\r\n    email: yup.string().email().required('email is required'),\r\n})\r\n\r\nexport { loginSchema, transferSchema, signUpSchema, forgotPasswordSchema }\r\n","import React from 'react'\r\nimport PinInput from 'react-pin-input'\r\nimport propTypes from 'prop-types'\r\n\r\nconst Pin = (props) => {\r\n    return (\r\n        <PinInput\r\n            secret\r\n            type=\"numeric\"\r\n            inputStyle={{\r\n                fontWeight: 'bold',\r\n                color: 'black',\r\n                height: '40px',\r\n                border: 'none',\r\n                marginLeft: '25px',\r\n                borderBottom: '1px solid black',\r\n                margin: 'auto',\r\n                width: '60px',\r\n            }}\r\n            onChange={props.onChange}\r\n            length={4}\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n\r\nPin.propTypes = {\r\n    onChange: propTypes.func.isRequired,\r\n}\r\n\r\nexport default Pin\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nconst CustomBtn = styled.button`\r\n    border: none;\r\n    outline: none;\r\n    ${(props) => !!props.bg && `background: ${props.bg};`}\r\n    ${(props) => !!props.width && `width: ${props.width}px;`}\r\n    ${(props) => !!props.height && `height: ${props.height}px;`}\r\n    ${(props) => !!props.color && `color: ${props.color};`}\r\n`\r\n\r\nconst Button = (props) => {\r\n    const IconComponent = typeof props.icon === 'function' && props.icon\r\n    return (\r\n        <CustomBtn\r\n            className=\"d-flex justify-content-around align-items-center\"\r\n            {...props}\r\n        >\r\n            {!!props.text && props.text}\r\n            {!!props.icon && <IconComponent />}\r\n        </CustomBtn>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport { Input, Label } from 'reactstrap'\r\nimport styled from 'styled-components'\r\n\r\nconst StyleField = styled(Input)`\r\n    height: 54px;\r\n    transition: all ease 0.3s;\r\n`\r\n\r\nconst CustomInputs = (props) => {\r\n    return (\r\n        <>\r\n            <Label>{props.label}</Label>\r\n            {props.type === 'select' ? (\r\n                <StyleField {...props}>{props.children}</StyleField>\r\n            ) : (\r\n                <StyleField {...props} />\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CustomInputs\r\n","import { Formik } from 'formik'\r\nimport React from 'react'\r\nimport { TextField, Box, makeStyles } from '@material-ui/core'\r\nimport {\r\n    loginSchema,\r\n    transferSchema,\r\n    signUpSchema,\r\n    forgotPasswordSchema,\r\n} from './validation'\r\nimport styled from 'styled-components'\r\nimport Loader from 'react-loader-spinner'\r\nimport propTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form } from 'reactstrap'\r\nimport { Button as Btn, CustomInputs } from '../../globalcomponents'\r\n\r\nconst ErrorText = styled.p`\r\n    color: red;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n`\r\nconst Error = styled.p`\r\n    color: red;\r\n    font-weight: 600;\r\n    text-align: start;\r\n    font-size: 12px;\r\n`\r\n\r\nconst style = makeStyles(() => ({\r\n    Input: {\r\n        height: 40,\r\n        width: '100%',\r\n        marginBottom: 40,\r\n        outline: 'none',\r\n    },\r\n}))\r\n\r\nconst Input = (props) => {\r\n    const classes = style()\r\n    return <TextField className={classes.Input} variant=\"outlined\" {...props} />\r\n}\r\n\r\nconst Button = (props) => {\r\n    return <Btn bg=\"#065340\" color=\"white\" width={250} height={50} {...props} />\r\n}\r\nconst LoginForm = (props) => {\r\n    const initialValues = {\r\n        email: '',\r\n        password: '',\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={loginSchema}\r\n            validateOnBlur={false}\r\n            validateOnChange={true}\r\n            onSubmit={(e) => props.handleSubmit(e)}\r\n        >\r\n            {({ errors, handleChange, values, handleSubmit }) => {\r\n                return (\r\n                    <Form onSubmit={handleSubmit} style={{ width: '100%' }}>\r\n                        {!!props.error && (\r\n                            <p style={{ color: 'red' }}>{props.error}</p>\r\n                        )}\r\n                        <div>\r\n                            <CustomInputs\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                onChange={handleChange}\r\n                                value={values.email}\r\n                                label=\"Email\"\r\n                                autoComplete=\"false\"\r\n                                style={{\r\n                                    border: `1px solid ${\r\n                                        !!errors.email || !!props.error\r\n                                            ? 'red'\r\n                                            : 'green'\r\n                                    }`,\r\n                                }}\r\n                            />\r\n                            {!!errors.email && (\r\n                                <span style={{ color: 'red' }}>\r\n                                    {errors.email}\r\n                                </span>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"pt-3\">\r\n                            <CustomInputs\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                onChange={handleChange}\r\n                                label=\"Password\"\r\n                                value={values.password}\r\n                                style={{\r\n                                    border: `1px solid ${\r\n                                        !!errors.password || !!props.error\r\n                                            ? 'red'\r\n                                            : 'green'\r\n                                    }`,\r\n                                }}\r\n                                autoComplete=\"false\"\r\n                            />\r\n                            {!!errors.password && (\r\n                                <p style={{ color: 'red' }}>\r\n                                    {errors.password}\r\n                                </p>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-end align-items-center pt-3\">\r\n                            <Link\r\n                                style={{\r\n                                    color: 'grey',\r\n                                    fontWeight: 600,\r\n                                    fontSize: '18px',\r\n                                }}\r\n                                to=\"/forgotpassword\"\r\n                            >\r\n                                forgot password\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"d-flex flex-column justify-content-center align-items-center pt-4\">\r\n                            <Button\r\n                                className=\"mt-2 rounded-pill\"\r\n                                type=\"submit\"\r\n                                disabled={props.formLoading}\r\n                                text={\r\n                                    props.formLoading ? (\r\n                                        <Loader\r\n                                            type=\"ThreeDots\"\r\n                                            height={30}\r\n                                            width={30}\r\n                                            color=\"white\"\r\n                                        />\r\n                                    ) : (\r\n                                        'Sign In'\r\n                                    )\r\n                                }\r\n                            />\r\n                        </div>\r\n                    </Form>\r\n                )\r\n            }}\r\n        </Formik>\r\n    )\r\n}\r\n\r\nconst ForgotPasswordForm = (props) => {\r\n    const initialValues = {\r\n        email: '',\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={initialValues}\r\n            validateOnBlur={false}\r\n            validateOnChange={true}\r\n            validationSchema={forgotPasswordSchema}\r\n            onSubmit={props.handleSubmit}\r\n        >\r\n            {({ errors, handleChange, values, handleSubmit }) => {\r\n                return (\r\n                    <Form onSubmit={handleSubmit} style={{ width: '100%' }}>\r\n                        <CustomInputs\r\n                            onChange={handleChange}\r\n                            value={values.email}\r\n                            className=\"mb-2\"\r\n                            label=\"Email\"\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            style={{\r\n                                border: `1px solid ${\r\n                                    !!errors.email ? 'red' : 'green'\r\n                                }`,\r\n                            }}\r\n                        />\r\n                        {!!errors.email && (\r\n                            <ErrorText>{errors.email}</ErrorText>\r\n                        )}\r\n\r\n                        <div className=\"d-flex justify-content-end align-items-center pt-3\">\r\n                            <Link\r\n                                style={{\r\n                                    color: 'grey',\r\n                                    fontWeight: 600,\r\n                                    fontSize: '18px',\r\n                                }}\r\n                                to=\"/signin\"\r\n                            >\r\n                                remember now ?\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-center align-items-center mt-3\">\r\n                            <Button\r\n                                type=\"submit\"\r\n                                className=\"mt-2 rounded-pill\"\r\n                                text=\"Send\"\r\n                            />\r\n                        </div>\r\n                    </Form>\r\n                )\r\n            }}\r\n        </Formik>\r\n    )\r\n}\r\nconst TransferForm = (props) => {\r\n    const initialValues = {\r\n        recipient: '',\r\n        amount: '',\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            validateOnBlur={false}\r\n            validateOnChange={false}\r\n            initialValues={initialValues}\r\n            validationSchema={transferSchema}\r\n            onSubmit={props.formSubmit}\r\n        >\r\n            {({ errors, handleChange, handleSubmit, values }) => {\r\n                const isValidBalance = +values.amount > +props.balance\r\n                return (\r\n                    <Box\r\n                        component=\"form\"\r\n                        autoComplete=\"off\"\r\n                        sx={{\r\n                            width: 700,\r\n                            maxWidth: '100%',\r\n                        }}\r\n                        onSubmit={handleSubmit}\r\n                    >\r\n                        {!!props.error && <ErrorText>{props.error}</ErrorText>}\r\n                        <Input\r\n                            type=\"number\"\r\n                            name=\"recipient\"\r\n                            label=\"recipient\"\r\n                            onChange={handleChange}\r\n                        />{' '}\r\n                        {!!errors.recipient && (\r\n                            <Error>{errors.recipient}</Error>\r\n                        )}\r\n                        <Input\r\n                            type=\"number\"\r\n                            name=\"amount\"\r\n                            label=\"amount\"\r\n                            onChange={handleChange}\r\n                        />\r\n                        {!!errors.amount && <Error>{errors.amount}</Error>}\r\n                        <div className=\"d-flex justify-content-end align-items-center\">\r\n                            {isValidBalance && (\r\n                                <ErrorText>insufficient balance</ErrorText>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-center align-items-center\">\r\n                            <Button\r\n                                disabled={isValidBalance}\r\n                                type=\"submit\"\r\n                                color=\"white\"\r\n                                className=\"mt-3 mb-2 rounded-pill\"\r\n                            >\r\n                                {props.formLoading ? (\r\n                                    <Loader\r\n                                        type=\"ThreeDots\"\r\n                                        height={30}\r\n                                        width={30}\r\n                                        color=\"#00BFFF\"\r\n                                    />\r\n                                ) : (\r\n                                    'send'\r\n                                )}\r\n                            </Button>\r\n                        </div>\r\n                    </Box>\r\n                )\r\n            }}\r\n        </Formik>\r\n    )\r\n}\r\n\r\nconst SignUpForm = (props) => {\r\n    const initialValues = {\r\n        firstName: '',\r\n        surName: '',\r\n        lastName: '',\r\n        email: '',\r\n        gender: '',\r\n        password: '',\r\n        phoneNumber: '',\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            validationSchema={signUpSchema}\r\n            initialValues={initialValues}\r\n            validateOnBlur={false}\r\n            validateOnChange={false}\r\n            onSubmit={props.handleSubmit}\r\n        >\r\n            {({ errors, handleChange, handleSubmit, values }) => {\r\n                return (\r\n                    <Form onSubmit={handleSubmit} style={{ width: '100%' }}>\r\n                        {!!props.regError && (\r\n                            <ErrorText>{props.regError}</ErrorText>\r\n                        )}\r\n                        <div className=\"d-flex justify-content-between mb-2\">\r\n                            <div>\r\n                                <CustomInputs\r\n                                    label=\"First name\"\r\n                                    value={values.firstName}\r\n                                    type=\"text\"\r\n                                    name=\"firstName\"\r\n                                    onChange={handleChange}\r\n                                    style={{ width: '100%' }}\r\n                                />\r\n                                {!!errors.firstName && (\r\n                                    <ErrorText>{errors.firstName}</ErrorText>\r\n                                )}\r\n                            </div>\r\n                            <div>\r\n                                <CustomInputs\r\n                                    value={values.surName}\r\n                                    label=\"Surname\"\r\n                                    type=\"text\"\r\n                                    name=\"surName\"\r\n                                    onChange={handleChange}\r\n                                />\r\n                                {!!errors.surName && (\r\n                                    <ErrorText>{errors.surName}</ErrorText>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <CustomInputs\r\n                            value={values.lastName}\r\n                            label=\"Last name\"\r\n                            type=\"text\"\r\n                            name=\"lastName\"\r\n                            onChange={handleChange}\r\n                            className=\"mb-2\"\r\n                        />\r\n                        {!!errors.lastName && (\r\n                            <ErrorText>{errors.lastName}</ErrorText>\r\n                        )}\r\n\r\n                        <CustomInputs\r\n                            onChange={handleChange}\r\n                            value={values.email}\r\n                            className=\"mb-2\"\r\n                            label=\"Email\"\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                        />\r\n                        {!!errors.email && (\r\n                            <ErrorText>{errors.email}</ErrorText>\r\n                        )}\r\n                        <CustomInputs\r\n                            value={values.password}\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            onChange={handleChange}\r\n                            className=\"mb-2\"\r\n                        />\r\n                        {!!errors.password && (\r\n                            <ErrorText>{errors.password}</ErrorText>\r\n                        )}\r\n                        <CustomInputs\r\n                            type=\"text\"\r\n                            label=\"Phone number\"\r\n                            value={values.phoneNumber}\r\n                            onChange={handleChange}\r\n                            name=\"phoneNumber\"\r\n                            className=\"mb-2\"\r\n                        />\r\n                        {!!errors.phoneNumber && (\r\n                            <ErrorText>{errors.phoneNumber}</ErrorText>\r\n                        )}\r\n\r\n                        <CustomInputs\r\n                            label=\"Gender\"\r\n                            style={{\r\n                                width: '80%',\r\n                            }}\r\n                            type=\"select\"\r\n                            name=\"gender\"\r\n                            value={values.gender}\r\n                            onChange={handleChange}\r\n                            className=\"mb-2\"\r\n                        >\r\n                            <option value=\"\">select gender</option>\r\n                            <option value=\"male\">male</option>\r\n                            <option value=\"female\">female</option>\r\n                        </CustomInputs>\r\n                        {!!errors.gender && (\r\n                            <ErrorText>{errors.gender}</ErrorText>\r\n                        )}\r\n\r\n                        <div className=\"d-flex justify-content-center align-items-center mt-3\">\r\n                            <Button\r\n                                type=\"submit\"\r\n                                className=\"mt-2 rounded-pill\"\r\n                                text={\r\n                                    props.formLoading ? (\r\n                                        <Loader\r\n                                            type=\"ThreeDots\"\r\n                                            height={30}\r\n                                            width={30}\r\n                                            color=\"#00BFFF\"\r\n                                        />\r\n                                    ) : (\r\n                                        'create account'\r\n                                    )\r\n                                }\r\n                            />\r\n                        </div>\r\n                    </Form>\r\n                )\r\n            }}\r\n        </Formik>\r\n    )\r\n}\r\n\r\nLoginForm.propTypes = {\r\n    handleSubmit: propTypes.func.isRequired,\r\n    error: propTypes.string,\r\n    formLoading: propTypes.bool.isRequired,\r\n}\r\nTransferForm.propTypes = {\r\n    formSubmit: propTypes.func.isRequired,\r\n    error: propTypes.string.isRequired,\r\n    formLoading: propTypes.bool.isRequired,\r\n    balance: propTypes.any.isRequired,\r\n}\r\nexport { LoginForm, TransferForm, SignUpForm, ForgotPasswordForm }\r\n","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Col, Row, Button as btn } from 'reactstrap'\r\nimport { userLogin } from '../../services/authentication'\r\nimport { user_login } from '../../services/appstore/actions/actions'\r\nimport { LoginForm } from '../forms/index'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\nimport { Facebook, Instagram, Twitter } from '@material-ui/icons'\r\n\r\nexport const Text = styled.p`\r\n    font-size: 42px;\r\n    font-weight: 600;\r\n    color: #065340;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    letter-spacing: 0.02rem;\r\n`\r\nexport const Button = styled(btn)`\r\n    background-color: transparent;\r\n    border: 2px solid white;\r\n    width: 150px;\r\n    height: 50px;\r\n    color: white;\r\n`\r\n\r\nconst SignIn = (props) => {\r\n    const [state, setState] = useState({\r\n        error: '',\r\n        formLoading: false,\r\n    })\r\n\r\n    const handleSubmit = async (value) => {\r\n        setState({\r\n            formLoading: true,\r\n            error: '',\r\n        })\r\n        try {\r\n            await userLogin(value, props.user_login)\r\n            setState({\r\n                formLoading: false,\r\n            })\r\n            props.history.push('/dashboard')\r\n        } catch (error) {\r\n            setState({\r\n                error: error || 'An error occured',\r\n                formLoading: false,\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Col\r\n            // style={{ height: '100vh'\r\n            //  }}\r\n            style={{\r\n                height: '100%',\r\n                position: 'fixed',\r\n                top: 0,\r\n                left: 0,\r\n                bottom: 0,\r\n                right: 0,\r\n                // backgroundColor: '#065340',\r\n            }}\r\n        >\r\n            <Row style={{ height: '100%' }}>\r\n                <Col\r\n                    lg={8}\r\n                    className=\"d-flex justify-content-center align-items-center\"\r\n                >\r\n                    <Col lg={6} xs={12} md={7}>\r\n                        <Text className=\"text-center mobile_text\">\r\n                            Sign in to Account\r\n                        </Text>\r\n                        <Col\r\n                            lg={4}\r\n                            sm={12}\r\n                            md={6}\r\n                            className=\"m-auto pt-3 pb-4 hide\"\r\n                        >\r\n                            <Row className=\"d-flex justify-content-between align-items-center\">\r\n                                <Col lg={2} sm={3}>\r\n                                    <Facebook\r\n                                        style={{ color: '#065340' }}\r\n                                        fontSize=\"large\"\r\n                                    />\r\n                                </Col>\r\n                                <Col lg={2} sm={3}>\r\n                                    <Twitter\r\n                                        style={{ color: '#065340' }}\r\n                                        fontSize=\"large\"\r\n                                    />\r\n                                </Col>\r\n                                <Col lg={2} sm={3}>\r\n                                    <Instagram\r\n                                        style={{ color: '#065340' }}\r\n                                        fontSize=\"large\"\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                        <Text\r\n                            style={{ fontSize: '14px' }}\r\n                            className=\"text-center\"\r\n                        >\r\n                            or use your email account\r\n                        </Text>\r\n                        <LoginForm\r\n                            handleSubmit={handleSubmit}\r\n                            formLoading={state.formLoading}\r\n                            error={state.error}\r\n                        />\r\n                        <Col\r\n                            style={{\r\n                                position: 'absolute',\r\n                                top: '130%',\r\n                                bottom: 0,\r\n                            }}\r\n                        >\r\n                            <Text\r\n                                style={{ fontSize: '14px' }}\r\n                                className=\"text-center\"\r\n                            >\r\n                                policy . Terms & conditions\r\n                            </Text>\r\n                        </Col>\r\n                    </Col>\r\n                </Col>\r\n                <Col\r\n                    lg={4}\r\n                    style={{ backgroundColor: '#065340' }}\r\n                    className=\"hide d-flex justify-content-center align-items-center mobile_mt mobile_pb\"\r\n                >\r\n                    <Col lg={7} className=\"m-auto \">\r\n                        <Text\r\n                            style={{ color: 'white' }}\r\n                            className=\"text-center hide\"\r\n                        >\r\n                            Hello, Friend\r\n                        </Text>\r\n                        <Text\r\n                            style={{\r\n                                fontSize: '18px',\r\n                                color: 'white',\r\n                                opacity: 0.7,\r\n                                fontWeight: 500,\r\n                            }}\r\n                            className=\"text-center hide\"\r\n                        >\r\n                            Fill up personal information and start journey with\r\n                            us\r\n                        </Text>\r\n                        <div className=\"d-flex justify-content-center pt-4\">\r\n                            <Link\r\n                                style={{\r\n                                    color: 'white',\r\n                                    textDecoration: 'none',\r\n                                }}\r\n                                to=\"/register\"\r\n                            >\r\n                                <Button className=\"rounded-pill\">\r\n                                    Sign Up\r\n                                </Button>\r\n                            </Link>\r\n                        </div>\r\n                    </Col>\r\n                </Col>\r\n            </Row>\r\n\r\n            {/* <Col className=\"bg-dark\" style={{ height: '160px' }}></Col> */}\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default connect(null, { user_login })(SignIn)\r\n","import React from 'react'\r\nimport { Col, Row } from 'reactstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Text } from '../signin/signin'\r\n\r\nconst HomePage = () => {\r\n    return (\r\n        <Col\r\n            className=\"pt-3\"\r\n            style={{\r\n                height: '100%',\r\n                position: 'fixed',\r\n                top: 0,\r\n                left: 0,\r\n                bottom: 0,\r\n                right: 0,\r\n                backgroundColor: '#065340',\r\n            }}\r\n        >\r\n            <Row className=\"d-flex justify-content-between align-items-center\">\r\n                <Col lg={6} sm={6}>\r\n                    <p\r\n                        style={{\r\n                            color: 'whitesmoke',\r\n                            fontWeight: '600',\r\n                            fontSize: '18px',\r\n                        }}\r\n                    >\r\n                        Afrobank\r\n                    </p>\r\n                </Col>\r\n                <Col\r\n                    className=\"d-flex align-items-center justify-content-end\"\r\n                    lg={6}\r\n                    sm={3}\r\n                >\r\n                    <Link to=\"/signin\">\r\n                        <Button\r\n                            className=\"rounded-pill\"\r\n                            style={{\r\n                                backgroundColor: 'white',\r\n                                color: '#065340',\r\n                            }}\r\n                        >\r\n                            sign in\r\n                        </Button>\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n            <Col\r\n                style={{ height: '100%' }}\r\n                className=\"d-flex justify-content-between align-items-center\"\r\n            >\r\n                <Row>\r\n                    <Col lg={4} sm={12}>\r\n                        <div>\r\n                            <Text\r\n                                className=\"is-center\"\r\n                                style={{\r\n                                    color: 'white',\r\n                                }}\r\n                            >\r\n                                Afrobank is your life long partner\r\n                            </Text>\r\n                            <Text\r\n                                className=\"is-center\"\r\n                                style={{\r\n                                    color: 'white',\r\n                                    fontSize: '24px',\r\n                                    fontWeight: '500',\r\n                                    opacity: 0.6,\r\n                                }}\r\n                            >\r\n                                401k taxpayer retirement capitalization\r\n                                consulting prices interest rate established\r\n                                gains exchange traded funds financial health.\r\n                                Credit shares fluctuate.\r\n                            </Text>\r\n                            <Link className=\"mt-4\" to=\"/register\">\r\n                                <Button\r\n                                    className=\"rounded-pill mobile_width\"\r\n                                    style={{\r\n                                        backgroundColor: 'white',\r\n                                        color: '#065340',\r\n                                        width: '60%',\r\n                                        height: '55px',\r\n                                        fontSize: '20px',\r\n                                    }}\r\n                                >\r\n                                    Let's get you started\r\n                                </Button>\r\n                            </Link>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n\r\n            {/* <TransferModal /> */}\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default HomePage\r\n","import React from 'react'\r\nimport { Row, Col } from 'reactstrap'\r\nimport { SignUpForm } from '../forms'\r\nimport { registerUser } from '../../services/authentication'\r\nimport { Button, Text } from '../signin/signin'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Register extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            formLoading: false,\r\n            regError: '',\r\n        }\r\n    }\r\n\r\n    handleSubmit = async (values) => {\r\n        this.setState({ formLoading: true, regError: '' })\r\n        try {\r\n            await registerUser(values)\r\n            this.setState({ formLoading: false })\r\n            this.props.history.push('/signin')\r\n        } catch (error) {\r\n            console.log(error)\r\n            this.setState({\r\n                formLoading: false,\r\n                regError: error,\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Col\r\n                style={{\r\n                    height: '100vh',\r\n                    position: 'relative',\r\n                    top: 0,\r\n                    left: 0,\r\n                    bottom: 0,\r\n                    right: 0,\r\n                }}\r\n            >\r\n                <Row style={{ height: '100%' }}>\r\n                    <Col\r\n                        lg={8}\r\n                        className=\"d-flex justify-content-center align-items-center\"\r\n                    >\r\n                        <Col lg={6} xs={11} md={7}>\r\n                            <Text className=\"text-center\">\r\n                                Create an Account\r\n                            </Text>\r\n\r\n                            <SignUpForm\r\n                                handleSubmit={this.handleSubmit}\r\n                                formLoading={this.state.formLoading}\r\n                                regError={this.state.regError}\r\n                            />\r\n                        </Col>\r\n                    </Col>\r\n                    <Col\r\n                        lg={4}\r\n                        style={{ backgroundColor: '#065340' }}\r\n                        className=\"d-flex justify-content-center align-items-center mobile_mt mobile_pb\"\r\n                    >\r\n                        <Col lg={7} className=\"m-auto\">\r\n                            <Text\r\n                                style={{ color: 'white' }}\r\n                                className=\"text-center hide\"\r\n                            >\r\n                                Hello, Friend\r\n                            </Text>\r\n                            <Text\r\n                                style={{\r\n                                    fontSize: '18px',\r\n                                    color: 'white',\r\n                                    opacity: 0.7,\r\n                                    fontWeight: 500,\r\n                                }}\r\n                                className=\"text-center hide\"\r\n                            >\r\n                                Welcome back, we've missed you\r\n                            </Text>\r\n                            <div className=\"d-flex justify-content-center pt-4\">\r\n                                <Link\r\n                                    style={{\r\n                                        color: 'white',\r\n                                        textDecoration: 'none',\r\n                                    }}\r\n                                    to=\"/signin\"\r\n                                >\r\n                                    <Button className=\"rounded-pill\">\r\n                                        Sign In\r\n                                    </Button>\r\n                                </Link>\r\n                            </div>\r\n                        </Col>\r\n                    </Col>\r\n                </Row>\r\n\r\n                {/* <Col className=\"bg-dark\" style={{ height: '160px' }}></Col> */}\r\n            </Col>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Register\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport Styled from 'styled-components'\r\nimport {\r\n    Dashboard,\r\n    AccountBalance,\r\n    Settings,\r\n    Payment,\r\n    Person,\r\n    ExitToApp,\r\n} from '@material-ui/icons'\r\nimport styled from 'styled-components'\r\nimport { Col } from 'reactstrap'\r\n\r\nexport const Type = styled.span`\r\n    color: ${(props) => props.color};\r\n    font-size: ${(props) => props.size}px;\r\n`\r\nexport const activeClass = 'active'\r\nexport const Sidelink = Styled((props) => (\r\n    <NavLink {...props} activeClassName={activeClass} />\r\n))`\r\n  color: white;\r\n  font-wight: 500;\r\n  font-size: 15px;\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  padding-top: 15px;\r\n  padding-bottom: 15px;\r\n  padding-left: 10px;\r\n  border-radius: 10px;\r\n  transition: all ease 0.3s;\r\n  &:hover {\r\n    background: #4004af,\r\n    color: white;\r\n  }\r\n  &.${activeClass} {\r\n    background: #4004af;\r\n    color: white;\r\n  }\r\n`\r\n\r\nconst dashboardRoutes = [\r\n    {\r\n        path: '/dashboard',\r\n        name: 'Dashboard',\r\n        icon: <Dashboard />,\r\n    },\r\n    {\r\n        path: '/dashboard/analysis',\r\n        name: 'Send money',\r\n        icon: <Payment />,\r\n    },\r\n    {\r\n        path: '/dashboard/wallet',\r\n        name: 'Wallet',\r\n        icon: <AccountBalance />,\r\n    },\r\n    {\r\n        path: '/dashboard/profile',\r\n        name: 'Profile',\r\n        icon: <Person />,\r\n    },\r\n    {\r\n        path: '/dashboard/Settings',\r\n        name: 'Settings',\r\n        icon: <Settings />,\r\n    },\r\n]\r\nconst SideBar = () => {\r\n    return (\r\n        <Col className=\"p-0 m-0\" style={{ position: 'static', width: '100%' }}>\r\n            <Col className=\"pt-4\">\r\n                <Type size=\"25\" className=\"font-weight-bold\" color=\"white\">\r\n                    Afrobank\r\n                </Type>\r\n            </Col>\r\n            <Col className=\"hide\" style={{ marginTop: '55px' }}>\r\n                {dashboardRoutes.map((data, idx) => {\r\n                    return (\r\n                        <Sidelink\r\n                            key={idx}\r\n                            exact\r\n                            to={data.path}\r\n                            style={{ textDecoration: 'none' }}\r\n                        >\r\n                            <span className=\"icon-size\">{data.icon}</span>\r\n                            <span className=\"pl-3\">{data.name}</span>\r\n                        </Sidelink>\r\n                    )\r\n                })}\r\n                <div style={{ position: 'absolute', bottom: 25 }}>\r\n                    <Sidelink\r\n                        exact\r\n                        to=\"/signout\"\r\n                        style={{ textDecoration: 'none' }}\r\n                    >\r\n                        <ExitToApp />\r\n                        <span className=\"pl-3\">log out</span>\r\n                    </Sidelink>\r\n                </div>\r\n            </Col>\r\n\r\n            <div className=\"bottom_nav bg-dark m-0 \">\r\n                {dashboardRoutes.map((data, idx) => {\r\n                    return (\r\n                        <div key={idx}>\r\n                            <Sidelink\r\n                                exact\r\n                                to={data.path}\r\n                                style={{ textDecoration: 'none' }}\r\n                            >\r\n                                {data.icon}\r\n                                <span className=\"pl-3 hide\">{data.name}</span>\r\n                            </Sidelink>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default SideBar\r\n","import Axios from '../index'\r\nimport { extractApiError } from '../../utils/error'\r\n\r\nconst transfer = async (payload, sender, pin) => {\r\n    const { recipient, amount } = payload\r\n    const body = {\r\n        recipient: recipient.toString(),\r\n        amount,\r\n        sender: sender.toString(),\r\n    }\r\n    try {\r\n        const response = await Axios.post('/transfer', body)\r\n        return response.data.message\r\n    } catch (error) {\r\n        extractApiError(error)\r\n    }\r\n}\r\n\r\nconst transactionHistory = async (accountNumber, updateTransactionHistory) => {\r\n    try {\r\n        const resp = await Axios.get(`/history/${accountNumber}`)\r\n        updateTransactionHistory(resp.data.message)\r\n    } catch (error) {\r\n        extractApiError(error)\r\n    }\r\n}\r\n\r\nconst getBalance = async (accountNumber) => {\r\n    try {\r\n        const resp = await Axios.get(`/balance/${accountNumber}`)\r\n        return resp.data.message\r\n    } catch (error) {\r\n        extractApiError(error)\r\n    }\r\n}\r\n\r\nexport { transactionHistory, transfer, getBalance }\r\n","const daysOfTheWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat']\r\n\r\nconst months = [\r\n    'Jan',\r\n    'Feb',\r\n    'Mar',\r\n    'Apr',\r\n    'May',\r\n    'Jun',\r\n    'Jul',\r\n    'Aug',\r\n    'Sep',\r\n    'Oct',\r\n    'Nov',\r\n    'Dec',\r\n]\r\n\r\nconst getCurrentDate = (date) => {\r\n    return new Date(date)\r\n}\r\n\r\nconst getFormatedTime = (date) => {\r\n    const currentDate = getCurrentDate(date)\r\n    const getHours = currentDate.getHours()\r\n    const getMinutes =\r\n        currentDate.getMinutes().toString().length < 2\r\n            ? `0${currentDate.getMinutes()}`\r\n            : currentDate.getMinutes()\r\n    const getTimeOfTheDay = getHours < 12 ? 'am' : 'pm'\r\n    const time = `${getHours}:${getMinutes} ${getTimeOfTheDay}`\r\n    return time\r\n}\r\n\r\nconst getTimeOfTheDay = () => {\r\n    var timeOfTheDay\r\n    const currentDay = new Date().getHours()\r\n    if (currentDay < 12) {\r\n        timeOfTheDay = 'Good morning'\r\n    } else if (currentDay <= 15) {\r\n        timeOfTheDay = 'Good afternoon'\r\n    } else {\r\n        timeOfTheDay = 'Good evening'\r\n    }\r\n    return timeOfTheDay\r\n}\r\nconst getFormatedDate = (date) => {\r\n    const currentDate = getCurrentDate(date)\r\n    const day = currentDate.getDay()\r\n    const getDate = currentDate.getDate()\r\n    const month = currentDate.getMonth()\r\n    const year = currentDate.getFullYear()\r\n\r\n    const formatedDay = `${daysOfTheWeek[day]} ${getDate} ${months[month]}, ${year}`\r\n    return formatedDay\r\n}\r\nexport { getFormatedDate, getFormatedTime, getTimeOfTheDay }\r\n","const formatMoney = (amount) => {\r\n    const money = amount.toFixed(2)\r\n    return `₦ ${money}`\r\n}\r\nconst sumAmount = (transactions) => {\r\n    return transactions.reduce((a, b) => +a + +b.amount || 0, 0)\r\n}\r\n\r\nconst calculateAllDebit = (transactions = []) => {\r\n    const allDebits = transactions.filter(\r\n        (data) => data.transaction_type === 'debit'\r\n    )\r\n    const totalDebits = sumAmount(allDebits)\r\n\r\n    return formatMoney(totalDebits)\r\n}\r\n\r\nexport { formatMoney, calculateAllDebit }\r\n","import React, { useEffect, useState } from 'react'\r\nimport { connect, useSelector } from 'react-redux'\r\nimport { transactionHistory, getBalance } from '../../services/transactions'\r\nimport { Container, Col, Row, Table } from 'reactstrap'\r\nimport {\r\n    updateTransactionHistory,\r\n    toggleDisplay,\r\n} from '../../services/appstore/actions/actions'\r\nimport {\r\n    getFormatedDate,\r\n    calculateAllDebit,\r\n    formatMoney,\r\n    getFormatedTime,\r\n    getTimeOfTheDay,\r\n} from '../../utils'\r\nimport {\r\n    Autorenew,\r\n    Search,\r\n    Visibility,\r\n    VisibilityOff,\r\n} from '@material-ui/icons'\r\nimport styled from 'styled-components'\r\nimport Loader from 'react-loader-spinner'\r\n\r\nconst AccountCard = styled.div`\r\n    height: 150px;\r\n    width: 100%;\r\n    border-radius: 10px;\r\n    background: #0d3153;\r\n    background-image: url(${(props) => props.img});\r\n    transition: all ease 0.3s;\r\n`\r\n\r\nexport const Dashbody = styled.div`\r\n    overflow: hidden;\r\n    background: #0f0f0fe5;\r\n`\r\nconst Inputdiv = styled.div`\r\n    width: 230px;\r\n    background: #0f0f0f73;\r\n    height: 44px;\r\n    padding-right: 10px;\r\n    padding-left: 10px;\r\n    border-radius: 5px;\r\n`\r\nconst Input = styled.input`\r\n    border: none;\r\n    outline: none;\r\n    height: 100%;\r\n    background: transparent;\r\n    color: white;\r\n`\r\nconst DashbodyCard = styled.div`\r\n    width: 100%;\r\n    background: #000000;\r\n    border-radius: 10px;\r\n    height: 100%;\r\n    max-height: 530px;\r\n    overflow-y: scroll;\r\n    ::-webkit-scrollbar {\r\n        display: none;\r\n    }\r\n    -ms-overflow-style: none;\r\n    scrollbar-width: none;\r\n`\r\n\r\nexport const Type = styled.span`\r\n    color: ${(props) => props.color};\r\n    font-size: ${(props) => props.size}px;\r\n`\r\n\r\nconst Text = styled.h5`\r\n    color: white;\r\n    font-weight: 550;\r\n`\r\n\r\nconst Dashboard = (props) => {\r\n    const [state, setState] = useState({\r\n        toggleTransferModal: false,\r\n        balance: 0,\r\n        displayBal: true,\r\n        balanceLoading: false,\r\n    })\r\n    const data = useSelector((state) => state.user)\r\n\r\n    const style = {\r\n        cursor: 'pointer',\r\n    }\r\n\r\n    const pageBalance = async () => {\r\n        const { accountNumber } = data.signIn.payLoad\r\n        setState({\r\n            balanceLoading: true,\r\n        })\r\n        try {\r\n            const balance = await getBalance(accountNumber)\r\n            await transactionHistory(\r\n                accountNumber,\r\n                props.updateTransactionHistory\r\n            )\r\n            setState({\r\n                balance: balance,\r\n                balanceLoading: false,\r\n            })\r\n        } catch (error) {\r\n            setState({\r\n                balanceLoading: false,\r\n            })\r\n            throw error\r\n        }\r\n    }\r\n\r\n    const toggleVisibility = () => {\r\n        setState({ ...state, displayBal: !state.displayBal })\r\n        props.toggleDisplay(state.displayBal)\r\n    }\r\n\r\n    const renderTransactions = () => {\r\n        const { transactions } = data\r\n        return transactions.slice(0, 4).map((transaction, i) => {\r\n            const {\r\n                transaction_id,\r\n                amount,\r\n                transaction_date,\r\n                transaction_type,\r\n            } = transaction\r\n\r\n            const formatDay = getFormatedDate(transaction_date)\r\n            const formatTime = getFormatedTime(transaction_date)\r\n            return (\r\n                <tr key={i}>\r\n                    <td>{transaction_id}</td>\r\n                    <td\r\n                        style={{\r\n                            color: `${\r\n                                transaction_type === 'credit' ? 'green' : 'red'\r\n                            }`,\r\n                            fontWeight: 600,\r\n                        }}\r\n                    >\r\n                        {formatMoney(amount)}\r\n                    </td>\r\n                    <td\r\n                        style={{\r\n                            color: `${\r\n                                transaction_type === 'credit' ? 'green' : 'red'\r\n                            }`,\r\n                            fontWeight: 600,\r\n                        }}\r\n                    >\r\n                        {transaction_type}\r\n                    </td>\r\n                    <td>{`${formatDay} ${formatTime}`}</td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const { accountNumber } = data.signIn.payLoad\r\n            setState({\r\n                balanceLoading: true,\r\n            })\r\n            try {\r\n                await transactionHistory(\r\n                    accountNumber,\r\n                    props.updateTransactionHistory\r\n                )\r\n                const balance = await getBalance(accountNumber)\r\n                setState({\r\n                    balance: balance,\r\n                    balanceLoading: false,\r\n                })\r\n            } catch (error) {\r\n                throw error\r\n            }\r\n        }\r\n        fetchData()\r\n    }, [data.signIn.payLoad, props.updateTransactionHistory])\r\n\r\n    return (\r\n        <Col\r\n            className=\"p-0 m-0\"\r\n            style={{\r\n                height: '100vh',\r\n                position: 'relative',\r\n                top: 0,\r\n                left: 0,\r\n                bottom: 0,\r\n                right: 0,\r\n            }}\r\n        >\r\n            <Row>\r\n                <Col lg={12}>\r\n                    <Col>\r\n                        <Row className=\"d-flex justify-content-between pt-4 align-items-center\">\r\n                            <Col>\r\n                                <Type\r\n                                    size=\"25\"\r\n                                    className=\"font-weight-bold\"\r\n                                    color=\"white\"\r\n                                >\r\n                                    {`Hello ${\r\n                                        data.signIn.payLoad.firstName\r\n                                    }, ${getTimeOfTheDay()}.`}\r\n                                </Type>\r\n                            </Col>\r\n                            <Col className=\"hide  justify-content-end\">\r\n                                <Inputdiv className=\"d-flex justify-content-between align-items-center\">\r\n                                    <Search />\r\n                                    <Input placeholder=\"Find something\" />\r\n                                </Inputdiv>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <DashbodyCard className=\"pb-3 pt-3 mt-5\">\r\n                        <Container className=\"pr-4 pl-4\">\r\n                            <Row className=\"pt-3\">\r\n                                <Col lg={4}>\r\n                                    <AccountCard\r\n                                        style={{\r\n                                            background: '#4004af',\r\n                                            color: 'white',\r\n                                        }}\r\n                                    >\r\n                                        <Container>\r\n                                            <div className=\"d-flex justify-content-end pt-2 align-items-center\">\r\n                                                <Autorenew\r\n                                                    style={style}\r\n                                                    onClick={() =>\r\n                                                        pageBalance()\r\n                                                    }\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"d-flex justify-content-between\">\r\n                                                {props.balanceDisplay ? (\r\n                                                    <Visibility\r\n                                                        onClick={() =>\r\n                                                            toggleVisibility()\r\n                                                        }\r\n                                                        style={{\r\n                                                            position:\r\n                                                                'absolute',\r\n                                                            top: '70%',\r\n                                                        }}\r\n                                                    />\r\n                                                ) : (\r\n                                                    <VisibilityOff\r\n                                                        onClick={() =>\r\n                                                            toggleVisibility()\r\n                                                        }\r\n                                                        style={{\r\n                                                            position:\r\n                                                                'absolute',\r\n                                                            top: '70%',\r\n                                                        }}\r\n                                                    />\r\n                                                )}\r\n\r\n                                                <Type\r\n                                                    size=\"24\"\r\n                                                    style={{\r\n                                                        position: 'absolute',\r\n                                                        top: '65%',\r\n                                                        right: '10%',\r\n                                                        fontWeight: 600,\r\n                                                        color: `${\r\n                                                            state.balance < 100\r\n                                                                ? 'red'\r\n                                                                : 'white'\r\n                                                        }`,\r\n                                                    }}\r\n                                                >\r\n                                                    {state.balanceLoading ? (\r\n                                                        <Loader\r\n                                                            type=\"ThreeDots\"\r\n                                                            height={30}\r\n                                                            width={30}\r\n                                                            color=\"#ffff\"\r\n                                                        />\r\n                                                    ) : !props.balanceDisplay ? (\r\n                                                        formatMoney(\r\n                                                            state.balance\r\n                                                        )\r\n                                                    ) : (\r\n                                                        '****'\r\n                                                    )}\r\n                                                </Type>\r\n                                            </div>\r\n                                        </Container>\r\n                                    </AccountCard>\r\n                                </Col>\r\n                                <Col lg={4}>\r\n                                    <AccountCard\r\n                                        style={{\r\n                                            background: '#f707eb',\r\n                                            color: 'white',\r\n                                        }}\r\n                                        className=\"pt-2 mobile_mt \"\r\n                                    >\r\n                                        <Container>\r\n                                            <Type\r\n                                                size=\"15\"\r\n                                                className=\"mt-5 font-weight-bold\"\r\n                                            >\r\n                                                Account Details\r\n                                            </Type>\r\n                                            <br />\r\n                                            <Type\r\n                                                size=\"12\"\r\n                                                style={{\r\n                                                    position: 'absolute',\r\n                                                    top: '60%',\r\n                                                    fontWeight: 550,\r\n                                                }}\r\n                                            >\r\n                                                Name:{' '}\r\n                                                {`${data.signIn.payLoad.firstName} ${data.signIn.payLoad.lastName}`}\r\n                                            </Type>\r\n                                            <br />\r\n                                            <Type\r\n                                                size=\"15\"\r\n                                                style={{\r\n                                                    position: 'absolute',\r\n                                                    top: '75%',\r\n                                                    fontWeight: 550,\r\n                                                }}\r\n                                            >\r\n                                                Account Number:\r\n                                                {\r\n                                                    data.signIn.payLoad\r\n                                                        .accountNumber\r\n                                                }\r\n                                            </Type>\r\n                                        </Container>\r\n                                    </AccountCard>\r\n                                </Col>\r\n                                <Col lg={4}>\r\n                                    <AccountCard className=\"d-flex justify-content-center align-items-center mobile_mt\">\r\n                                        <Type color=\"white\">{`you've spent ${calculateAllDebit(\r\n                                            data.transactions\r\n                                        )} so far`}</Type>\r\n                                    </AccountCard>\r\n                                </Col>\r\n                            </Row>\r\n                            <div className=\"d-flex justify-content-between pt-4\">\r\n                                <Type size=\"18\" color=\"white\">\r\n                                    Transactions\r\n                                </Type>\r\n                                <Type color=\"green\">Show all</Type>\r\n                            </div>\r\n                            <div className=\"pt-3\">\r\n                                {!!data.transactions &&\r\n                                data.transactions.length > 0 ? (\r\n                                    <Table\r\n                                        style={{ overflowY: 'scroll' }}\r\n                                        striped\r\n                                        responsive\r\n                                        borderless\r\n                                    >\r\n                                        <thead style={{ color: 'whitesmoke' }}>\r\n                                            <tr>\r\n                                                <th>Transaction ID</th>\r\n                                                <th>Amount</th>\r\n                                                <th>Type</th>\r\n                                                <th>Date/Time</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody style={{ color: 'white' }}>\r\n                                            {renderTransactions()}\r\n                                        </tbody>\r\n                                    </Table>\r\n                                ) : (\r\n                                    <div className=\"d-flex justify-content-center align-items-center mt-5 mb-5\">\r\n                                        <Text className=\"is-center\">\r\n                                            You don't have any transactions\r\n                                        </Text>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </Container>\r\n                    </DashbodyCard>\r\n                </Col>\r\n            </Row>\r\n        </Col>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    balanceDisplay: state.user.balanceDisplay,\r\n})\r\nexport default connect(mapStateToProps, {\r\n    updateTransactionHistory,\r\n    toggleDisplay,\r\n})(Dashboard)\r\n","import React from 'react'\r\nimport { Row, Col } from 'reactstrap'\r\nimport styled from 'styled-components'\r\n\r\nexport const Type = styled.span`\r\n    color: ${(props) => props.color};\r\n    font-size: ${(props) => props.size}px;\r\n`\r\nconst Wallet = () => {\r\n    return (\r\n        <Col>\r\n            <Row>\r\n                <Col lg={12}>\r\n                    <div className=\"d-flex pt-4 align-items-center\">\r\n                        <Type\r\n                            size=\"25\"\r\n                            className=\"font-weight-bold\"\r\n                            color=\"white\"\r\n                        >\r\n                            Wallet\r\n                        </Type>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Col>\r\n    )\r\n}\r\nexport default Wallet\r\n","import Axios from '../index'\r\n\r\nconst fetchAllNotifications = async (accountNumber) => {\r\n    try {\r\n        const resp = await Axios.get(`/notifications/${accountNumber}`)\r\n        return resp.data.message\r\n    } catch (error) {\r\n        throw error\r\n    }\r\n}\r\n\r\nconst deleteSingleNotification = async (id) => {\r\n    try {\r\n        console.log(id)\r\n    } catch (error) {\r\n        throw error\r\n    }\r\n}\r\n\r\nexport { fetchAllNotifications, deleteSingleNotification }\r\n","import React from 'react'\r\nimport { Clear, ArrowForward } from '@material-ui/icons'\r\nimport { Modal, ModalBody } from 'reactstrap'\r\nimport propTypes from 'prop-types'\r\nimport { Pin, Button } from '../globalcomponents/index'\r\n\r\nconst PinModal = (props) => {\r\n    return (\r\n        <div>\r\n            <Modal isOpen={props.isVisible} toggle={props.toggleVisibility}>\r\n                <div className=\"ml-2 mr-2 mt-2 d-flex justify-content-end align-items-center\">\r\n                    <Button\r\n                        bg=\"none\"\r\n                        onClick={props.toggleVisibility}\r\n                        icon={() => <Clear style={{ color: 'red' }} />}\r\n                    />\r\n                </div>\r\n                <ModalBody>\r\n                    <div className=\"d-flex justify-content-center\">\r\n                        <Pin onChange={props.onChange} />\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-center pt-5 pb-3\">\r\n                        <Button\r\n                            onClick={props.onSubmit}\r\n                            className=\"rounded-pill\"\r\n                            bg=\"#0d3153\"\r\n                            color=\"white\"\r\n                            width={150}\r\n                            height={40}\r\n                            icon={() => <ArrowForward fontSize=\"small\" />}\r\n                        />\r\n                    </div>\r\n                </ModalBody>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nPinModal.propTypes = {\r\n    isVisible: propTypes.bool.isRequired,\r\n    toggleVisibility: propTypes.func.isRequired,\r\n    onSubmit: propTypes.func,\r\n}\r\n\r\nPinModal.defaultProps = {\r\n    onSubmit: () => {},\r\n    isVisible: false,\r\n    toggleVisibility: () => {},\r\n}\r\n\r\nexport default PinModal\r\n","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Row, Col, Card } from 'reactstrap'\r\nimport styled from 'styled-components'\r\nimport { getBalance, transfer } from '../../services/transactions/index'\r\nimport { TransferForm } from '../forms/index'\r\nimport { PinModal } from '../../modals'\r\n\r\nexport const Type = styled.span`\r\n    color: ${(props) => props.color};\r\n    font-size: ${(props) => props.size}px;\r\n`\r\nconst AccountCard = styled(Card)`\r\n    height: 100%;\r\n    min-height: 300px;\r\n    width: 100%;\r\n    margin-top: 100px;\r\n    margin-bottom: 50px;\r\n    border-radius: 10px;\r\n    transition: all ease 0.3s;\r\n`\r\n\r\nconst DashbodyCard = styled.div`\r\n    width: 100%;\r\n    background: #000000;\r\n    border-radius: 10px;\r\n    height: 100%;\r\n    min-height: 560px;\r\n    overflow-y: scroll;\r\n    ::-webkit-scrollbar {\r\n        display: none;\r\n    }\r\n    -ms-overflow-style: none;\r\n    scrollbar-width: none;\r\n`\r\nconst SendMoney = (props) => {\r\n    const [formLoading, setFormLoading] = useState(false)\r\n    const [error, setError] = useState('')\r\n    const [balance, setBalance] = useState(0)\r\n    const [pin, setPin] = useState('')\r\n    const [pinModal, setPinModal] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const { accountNumber } = props.payLoad\r\n        async function fetchBalance() {\r\n            setBalance(await getBalance(accountNumber))\r\n        }\r\n        fetchBalance()\r\n    }, [props.payLoad])\r\n\r\n    const handleSubmit = async (values) => {\r\n        const { accountNumber } = props.payLoad\r\n        setFormLoading(true)\r\n        setError('')\r\n        try {\r\n            await transfer(values, accountNumber, pin)\r\n            setFormLoading(false)\r\n        } catch (error) {\r\n            setError(error)\r\n            setFormLoading(false)\r\n        }\r\n    }\r\n\r\n    const toggleVisibility = () => {\r\n        setPinModal(!pinModal)\r\n    }\r\n\r\n    return (\r\n        <Col style={{ height: '100%', maxheight: '530px' }}>\r\n            <PinModal\r\n                isVisible={pinModal}\r\n                toggleVisibility={() => toggleVisibility()}\r\n                onChange={(e) => setPin(e)}\r\n                onSubmit={() => console.log(pin)}\r\n            />\r\n            <Row>\r\n                <Col lg={12}>\r\n                    <div className=\"d-flex pt-4 align-items-center\">\r\n                        <Type\r\n                            size=\"25\"\r\n                            className=\"font-weight-bold\"\r\n                            color=\"white\"\r\n                        >\r\n                            Send money\r\n                        </Type>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <DashbodyCard className=\"mt-5\">\r\n                <Col\r\n                    xl={6}\r\n                    className=\"d-flex justify-content-center align-items-center m-auto\"\r\n                >\r\n                    <AccountCard className=\"pr-3 pl-3 pt-3\">\r\n                        <TransferForm\r\n                            formSubmit={handleSubmit}\r\n                            formLoading={formLoading}\r\n                            error={error}\r\n                            balance={balance}\r\n                        />\r\n                    </AccountCard>\r\n                </Col>\r\n            </DashbodyCard>\r\n        </Col>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    payLoad: state.user.signIn.payLoad,\r\n    balanceDisplay: state.user.balanceDisplay,\r\n})\r\nexport default connect(mapStateToProps, {})(SendMoney)\r\n","import React from 'react'\r\nimport { Row, Col } from 'reactstrap'\r\nimport styled from 'styled-components'\r\n\r\nexport const Type = styled.span`\r\n    color: ${(props) => props.color};\r\n    font-size: ${(props) => props.size}px;\r\n`\r\nconst AccountCard = styled.div`\r\n    height: 150px;\r\n    width: 100%;\r\n    border-radius: 10px;\r\n\r\n    background: #0d3153;\r\n    transition: all ease 0.3s;\r\n`\r\n\r\nconst DashbodyCard = styled.div`\r\n    width: 100%;\r\n    background: #000000;\r\n    border-radius: 10px;\r\n    height: 100%;\r\n    max-height: 530px;\r\n    overflow-y: scroll;\r\n    ::-webkit-scrollbar {\r\n        display: none;\r\n    }\r\n    -ms-overflow-style: none;\r\n    scrollbar-width: none;\r\n`\r\nconst Profile = () => {\r\n    return (\r\n        // <div style={{ height: '100%', maxheight: '530px' }}>\r\n        <Col style={{ height: '100%', maxheight: '530px' }}>\r\n            <Row>\r\n                <Col lg={12}>\r\n                    <div className=\"d-flex pt-4 align-items-center\">\r\n                        <Type\r\n                            size=\"25\"\r\n                            className=\"font-weight-bold\"\r\n                            color=\"white\"\r\n                        >\r\n                            Profile\r\n                        </Type>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <DashbodyCard>\r\n                <Row>\r\n                    <Col xl={4}>\r\n                        <AccountCard>\r\n                            <p>hello</p>\r\n                        </AccountCard>\r\n                    </Col>\r\n                    <Col xl={4}>\r\n                        <AccountCard />\r\n                    </Col>\r\n                    <Col xl={4}>\r\n                        <AccountCard />\r\n                    </Col>\r\n                </Row>\r\n            </DashbodyCard>\r\n        </Col>\r\n        // </div>\r\n    )\r\n}\r\nexport default Profile\r\n","import React from 'react'\r\nimport { Row, Col } from 'reactstrap'\r\nimport styled from 'styled-components'\r\n\r\nexport const Type = styled.span`\r\n    color: ${(props) => props.color};\r\n    font-size: ${(props) => props.size}px;\r\n`\r\nconst AccountCard = styled.div`\r\n    height: 150px;\r\n    width: 100%;\r\n    border-radius: 10px;\r\n\r\n    background: #0d3153;\r\n    transition: all ease 0.3s;\r\n`\r\n\r\nconst DashbodyCard = styled.div`\r\n    width: 100%;\r\n    background: #000000;\r\n    border-radius: 10px;\r\n    height: 100%;\r\n    max-height: 530px;\r\n    overflow-y: scroll;\r\n    ::-webkit-scrollbar {\r\n        display: none;\r\n    }\r\n    -ms-overflow-style: none;\r\n    scrollbar-width: none;\r\n`\r\nconst Settings = () => {\r\n    return (\r\n        // <div style={{ height: '100%', maxheight: '530px' }}>\r\n        <Col style={{ height: '100%', maxheight: '530px' }}>\r\n            <Row>\r\n                <Col lg={12}>\r\n                    <div className=\"d-flex pt-4 align-items-center\">\r\n                        <Type\r\n                            size=\"25\"\r\n                            className=\"font-weight-bold\"\r\n                            color=\"white\"\r\n                        >\r\n                            Settings\r\n                        </Type>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <DashbodyCard>\r\n                <Row>\r\n                    <Col xl={4}>\r\n                        <AccountCard>\r\n                            <p>hello</p>\r\n                        </AccountCard>\r\n                    </Col>\r\n                    <Col xl={4}>\r\n                        <AccountCard />\r\n                    </Col>\r\n                    <Col xl={4}>\r\n                        <AccountCard />\r\n                    </Col>\r\n                </Row>\r\n            </DashbodyCard>\r\n        </Col>\r\n        // </div>\r\n    )\r\n}\r\nexport default Settings\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport styled from 'styled-components'\r\nimport SideBar from './sidebar'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport {\r\n    Row,\r\n    Col,\r\n    Container,\r\n    Dropdown,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n    DropdownToggle,\r\n} from 'reactstrap'\r\nimport Dashboard, { Dashbody } from './dashboard'\r\nimport { NotificationsNone } from '@material-ui/icons'\r\nimport Wallet from './wallet'\r\nimport {\r\n    fetchAllNotifications,\r\n    deleteSingleNotification,\r\n} from '../../services/notifications'\r\n\r\nimport SendMoney from './sendmoney'\r\nimport Profile from './profile'\r\nimport Settings from './settings'\r\n\r\nconst NotificationDiv = styled.div`\r\n    height: 44px;\r\n    width: 44px;\r\n    background: #0f0f0f73;\r\n    border-radius: 5px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    cursor: pointer;\r\n`\r\n\r\nconst Badge = styled.div`\r\n    height: 22px;\r\n    width: 22px;\r\n    background: red;\r\n    top: 0;\r\n    left: 30;\r\n    right: 0;\r\n    position: absolute;\r\n`\r\nconst Menu = styled(DropdownMenu)`\r\n    background: #000000;\r\n    width: 330px;\r\n    max-height: 200px;\r\n    overflow-y: scroll;\r\n    ::-webkit-scrollbar {\r\n        display: none;\r\n    }\r\n    -ms-overflow-style: none;\r\n    scrollbar-width: none;\r\n    overflow-x: hidden;\r\n    &:hover {\r\n        background: #000000;\r\n    }\r\n`\r\nconst Item = styled(DropdownItem)`\r\n    color: white;\r\n    width: 100%;\r\n    font-size: 14px;\r\n    &:hover {\r\n        background: #0f0f0fc7;\r\n        color: white;\r\n    }\r\n`\r\n\r\nconst Main = () => {\r\n    const [showNotification, setNotification] = useState(false)\r\n    const [userNotification, setUsernotification] = useState({\r\n        notifications: [],\r\n    })\r\n    const data = useSelector((state) => state.user.signIn.payLoad)\r\n\r\n    const toggleNotification = () => {\r\n        setNotification((prevState) => !prevState)\r\n    }\r\n\r\n    const deleteNotification = async (id) => {\r\n        await deleteSingleNotification(id)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const { accountNumber } = data\r\n        const getNotifications = async () => {\r\n            setUsernotification({\r\n                notifications: await fetchAllNotifications(accountNumber),\r\n            })\r\n        }\r\n        getNotifications()\r\n    })\r\n\r\n    return (\r\n        <Dashbody className=\"pb-4\">\r\n            <Col className=\"p-0 m-0\">\r\n                <Row>\r\n                    <Col xl={2}>\r\n                        <SideBar />\r\n                    </Col>\r\n\r\n                    <Switch>\r\n                        <Route exact path=\"/dashboard\" component={Dashboard} />\r\n                        <Route\r\n                            exact\r\n                            path=\"/dashboard/wallet\"\r\n                            component={Wallet}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/dashboard/analysis\"\r\n                            component={SendMoney}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/dashboard/profile\"\r\n                            component={Profile}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/dashboard/Settings\"\r\n                            component={Settings}\r\n                        />\r\n                    </Switch>\r\n                    <Col className=\"hide\" xl={1}>\r\n                        <Container>\r\n                            <div className=\"d-flex justify-content-between align-items-center pl-2 pr-3 pt-4\">\r\n                                <Dropdown\r\n                                    isOpen={showNotification}\r\n                                    toggle={toggleNotification}\r\n                                    className=\"p-0\"\r\n                                >\r\n                                    <DropdownToggle\r\n                                        style={{\r\n                                            background: 'none',\r\n                                            border: 'none',\r\n                                            outline: 'none',\r\n                                        }}\r\n                                        className=\"p-0 m-0\"\r\n                                    >\r\n                                        <NotificationDiv>\r\n                                            <Badge className=\"rounded-circle d-flex justify-content-center align-items-center\">\r\n                                                {\r\n                                                    userNotification\r\n                                                        .notifications.length\r\n                                                }\r\n                                            </Badge>\r\n                                            <NotificationsNone\r\n                                                fontSize=\"small\"\r\n                                                style={{ color: 'white' }}\r\n                                            />\r\n                                        </NotificationDiv>\r\n                                    </DropdownToggle>\r\n                                    <Menu right>\r\n                                        {!userNotification.notifications ? (\r\n                                            <Item\r\n                                                className=\"d-flex justify-content-center align-items-center\"\r\n                                                style={{ height: '40px' }}\r\n                                            >\r\n                                                You don't have any notification\r\n                                            </Item>\r\n                                        ) : (\r\n                                            userNotification.notifications.map(\r\n                                                (data, idx) => (\r\n                                                    <Item\r\n                                                        style={{\r\n                                                            borderBottom:\r\n                                                                '1px solid white',\r\n                                                            height: '50px',\r\n                                                        }}\r\n                                                        key={idx}\r\n                                                        onClick={() =>\r\n                                                            deleteNotification(\r\n                                                                data._id\r\n                                                            )\r\n                                                        }\r\n                                                    >\r\n                                                        {data.notification_text}\r\n                                                    </Item>\r\n                                                )\r\n                                            )\r\n                                        )}\r\n                                    </Menu>\r\n                                </Dropdown>\r\n                            </div>\r\n                        </Container>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n        </Dashbody>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import React, { useEffect } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../services/authentication'\r\nimport { user_login } from '../../services/appstore/actions/actions'\r\n\r\nconst SignOut = (props) => {\r\n    useEffect(() => {\r\n        const { user_login } = props\r\n        console.log(props)\r\n        try {\r\n            signOut(user_login)\r\n        } catch (error) {\r\n            throw error\r\n        }\r\n    }, [props])\r\n\r\n    return (\r\n        <div>\r\n            <Redirect to=\"/signin\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, { user_login })(SignOut)\r\n","import React from 'react'\r\nimport { Col } from 'reactstrap'\r\nimport { ForgotPasswordForm } from '../forms/index'\r\nimport { Text } from '../signin/signin'\r\n\r\nconst ForgotPassword = () => {\r\n    return (\r\n        <Col style={{ height: '100vh' }}>\r\n            <Col\r\n                style={{ height: '100%' }}\r\n                className=\"d-flex justify-content-center align-items-center\"\r\n            >\r\n                <Col lg={4} xs={12}>\r\n                    <Text className=\"text-center\">Forgot password</Text>\r\n                    <Text style={{ fontSize: '14px' }} className=\"text-center\">\r\n                        we heard you Forgot your password, not to worry you can\r\n                        create another one {''}\r\n                        <span\r\n                            style={{ fontSize: '16px' }}\r\n                            role=\"img\"\r\n                            aria-label=\"smiley\"\r\n                        >\r\n                            😔\r\n                        </span>\r\n                    </Text>\r\n                    <Text\r\n                        style={{ fontSize: '14px' }}\r\n                        className=\"text-center mb-3\"\r\n                    >\r\n                        please ensure your email is valid\r\n                    </Text>\r\n                    <ForgotPasswordForm />\r\n                </Col>\r\n            </Col>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default ForgotPassword\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\r\n    const isSignedIn = useSelector((state) => state.user.signIn.isSignedIn)\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) =>\r\n                isSignedIn ? (\r\n                    <Component {...props} />\r\n                ) : (\r\n                    <Redirect to=\"/signin\" />\r\n                )\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default ProtectedRoute\r\n","import React from 'react'\r\nimport {\r\n    Dashboard,\r\n    Homepage,\r\n    Register,\r\n    SignOut,\r\n    Signin,\r\n    ForgotPassword,\r\n} from './allpages'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\r\nimport ProtectedroutePages from './protectedroute.pages'\r\n\r\nconst routes = [\r\n    {\r\n        path: '/register',\r\n        component: Register,\r\n        public: true,\r\n    },\r\n    {\r\n        path: '/signin',\r\n        component: Signin,\r\n        public: true,\r\n    },\r\n    {\r\n        path: '/dashboard',\r\n        component: Dashboard,\r\n        public: false,\r\n    },\r\n    {\r\n        path: '/signout',\r\n        component: SignOut,\r\n        public: true,\r\n    },\r\n    {\r\n        path: '/forgotpassword',\r\n        component: ForgotPassword,\r\n        public: true,\r\n    },\r\n]\r\n\r\nconst Main = () => {\r\n    return (\r\n        <TransitionGroup>\r\n            <CSSTransition timeout={3000}>\r\n                <BrowserRouter basename=\"/Afrobank\">\r\n                    <Switch>\r\n                        {routes.map((data, i) =>\r\n                            data.public ? (\r\n                                <Route\r\n                                    key={i}\r\n                                    path={data.path}\r\n                                    component={data.component}\r\n                                />\r\n                            ) : (\r\n                                <ProtectedroutePages\r\n                                    key={i}\r\n                                    path={data.path}\r\n                                    component={data.component}\r\n                                />\r\n                            )\r\n                        )}\r\n                        <Route path=\"/\" component={Homepage} />\r\n                    </Switch>\r\n                </BrowserRouter>\r\n            </CSSTransition>\r\n        </TransitionGroup>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import {\r\n    LOGIN,\r\n    pinReset,\r\n    register,\r\n    transactionHistory,\r\n    toggleBalanceDisplay,\r\n} from '../actions'\r\n\r\nconst intState = {\r\n    signIn: {\r\n        isSignedIn: false,\r\n        payLoad: {},\r\n    },\r\n    userReg: {\r\n        isRegistered: false,\r\n        payLoad: {},\r\n    },\r\n    userPinReset: {\r\n        isPinReset: false,\r\n        payLoad: {},\r\n    },\r\n    balanceDisplay: false,\r\n    transactions: [],\r\n}\r\n\r\nconst reducer = (state = intState, action) => {\r\n    switch (action.type) {\r\n        case LOGIN:\r\n            return {\r\n                signIn: {\r\n                    ...state,\r\n                    isSignedIn: action.isSignedIn,\r\n                    payLoad: action.payload,\r\n                },\r\n            }\r\n        case register:\r\n            return {\r\n                userReg: {\r\n                    ...state,\r\n                    isRegistered: action.isRegistered,\r\n                    payLoad: action.payload,\r\n                },\r\n            }\r\n        case pinReset:\r\n            return {\r\n                userPinReset: {\r\n                    ...state,\r\n                    isPinReset: action.isPinReset,\r\n                    payLoad: action.payload,\r\n                },\r\n            }\r\n        case transactionHistory:\r\n            return {\r\n                ...state,\r\n                transactions: action.payload,\r\n            }\r\n        case toggleBalanceDisplay:\r\n            return {\r\n                ...state,\r\n                balanceDisplay: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport { reducer }\r\n","import { combineReducers } from 'redux'\r\nimport { reducer } from './reducer'\r\n\r\nexport default combineReducers({\r\n    user: reducer,\r\n})\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport combineReducers from './reducers'\r\n\r\nconst config = {\r\n    key: 'root',\r\n    storage,\r\n    whitelist: ['user'],\r\n}\r\n\r\nconst middleWare = [thunk]\r\nconst persistedReducer = persistReducer(config, combineReducers)\r\n\r\nconst appStore = () => {\r\n    const store = createStore(persistedReducer, applyMiddleware(...middleWare))\r\n    const persiststore = persistStore(store)\r\n    return { store, persiststore }\r\n}\r\n\r\nexport default appStore\r\n","import React from 'react'\r\nimport Main from './pages'\r\nimport { Provider } from 'react-redux'\r\nimport appStore from './services/appstore'\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './index.css'\r\n\r\nfunction App() {\r\n    return (\r\n        <Provider store={appStore().store}>\r\n            <PersistGate loading={null} persistor={appStore().persiststore}>\r\n                <Main />\r\n            </PersistGate>\r\n        </Provider>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <App />\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}