{"version":3,"sources":["services/index.js","utils/error.js","services/authentication/index.js","services/appstore/actions/actions.js","services/appstore/actions/index.js","components/forms/validation/index.js","globalcomponents/pin.js","globalcomponents/button.js","globalcomponents/input.js","components/forms/index.js","components/signin/privacy.js","components/signin/signin.js","components/homepage/index.js","components/register/index.js","components/dashboard/sidebar.js","services/appstore/reducers/reducer.js","services/appstore/reducers/index.js","services/appstore/index.js","services/transactions/index.js","utils/date.js","utils/money.js","components/dashboard/dashboard.js","components/dashboard/wallet.js","services/notifications/index.js","modals/pinModal.js","components/dashboard/sendmoney.js","components/dashboard/profile.js","components/dashboard/settings.js","components/dashboard/index.js","components/sigout/signOut.js","components/forgotpassword/forgotPassword.js","pages/protectedroute.pages.js","pages/index.js","App.jsx","serviceWorker.js","index.jsx"],"names":["axios","create","baseURL","process","extractApiError","error","message","response","data","registerUser","payload","a","Axios","post","userLogin","payLoad","user_login","resp","createPin","patch","console","log","isSignedIn","dispatch","type","loginSchema","yup","shape","email","required","password","transferSchema","recipient","amount","signUpSchema","firstName","lastName","matches","gender","phoneNumber","forgotPasswordSchema","Pin","props","secret","inputStyle","fontWeight","color","height","border","marginLeft","borderBottom","margin","width","onChange","length","CustomBtn","styled","button","bg","Button","IconComponent","icon","className","text","StyleField","Input","CustomInputs","Label","label","children","ErrorText","p","Error","LoginForm","initialValues","validationSchema","validateOnBlur","validateOnChange","onSubmit","e","handleSubmit","errors","handleChange","values","Form","style","name","value","autoComplete","fontSize","to","disabled","formLoading","ForgotPasswordForm","TransferForm","formSubmit","isValidBalance","balance","SignUpForm","regError","privacy","Component","Text","btn","connect","useState","state","setState","open","setOpen","toggle","history","push","Col","position","top","left","bottom","right","Row","lg","xs","md","sm","Facebook","Twitter","Instagram","cursor","onClick","backgroundColor","opacity","textDecoration","Modal","size","isOpen","centered","Container","Clear","ModalBody","HomePage","Register","this","React","Type","span","Sidelink","Styled","activeClassName","BottomNavLink","dashboardRoutes","path","Payment","AccountBalance","Person","SideBar","marginTop","map","idx","key","exact","ExitToApp","intState","signIn","userReg","isRegistered","userPinReset","isPinReset","balanceDisplay","transactions","combineReducers","user","action","config","storage","whitelist","middleWare","thunk","persistedReducer","persistReducer","appStore","store","createStore","applyMiddleware","persiststore","persistStore","transfer","sender","pin","body","toString","getState","transactionHistory","accountNumber","updateTransactionHistory","get","getBalance","daysOfTheWeek","months","getCurrentDate","date","Date","formatMoney","newAmount","money","toFixed","sumAmount","reduce","b","AccountCard","div","img","Dashbody","Inputdiv","input","DashbodyCard","h5","toggleDisplay","display","toggleTransferModal","displayBal","balanceLoading","useSelector","pageBalance","toggleVisibility","useEffect","fetchData","currentDay","getHours","getTimeOfTheDay","Search","placeholder","background","Autorenew","Visibility","VisibilityOff","accountBalance","allDebits","filter","transaction_type","totalDebits","calculateAllDebit","Table","overflowY","striped","responsive","borderless","slice","transaction","i","transaction_id","transaction_date","formatDay","currentDate","day","getDay","getDate","month","getMonth","year","getFullYear","getFormatedDate","formatTime","getMinutes","getFormatedTime","Wallet","deleteSingleNotification","id","PinModal","setCreatePin","confirmPin","setConfirmPin","isLoading","setIsloading","pinError","setPinError","handlePinCreate","createUserPin","isVisible","defaultProps","Card","setFormLoading","setError","setPin","pinModal","setPinModal","formikForm","useRef","current","xl","innerRef","Profile","Settings","NotificationDiv","Badge","Menu","DropdownMenu","Item","DropdownItem","Main","showNotification","setNotification","notifications","userNotification","deleteNotification","component","Dashboard","SendMoney","Dropdown","prevState","DropdownToggle","outline","NotificationsNone","_id","notification_text","localStorage","clear","signOut","ForgotPassword","role","aria-label","ProtectedRoute","rest","render","routes","public","Signin","SignOut","TransitionGroup","CSSTransition","timeout","basename","Homepage","App","loading","persistor","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","document","getElementById","URL","href","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d0fccce5.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: process.env.REACT_APP_BASE_URL,\r\n});\r\n","const extractApiError = (error) => {\r\n    if (typeof error === 'object') {\r\n        if (error.message === 'Network Error') {\r\n            return error.message\r\n        } else {\r\n            return error.response.data.message\r\n        }\r\n    } else {\r\n        return error\r\n    }\r\n}\r\nexport { extractApiError }\r\n","import Axios from '../index'\r\nimport { extractApiError } from '../../utils/error'\r\n\r\nconst registerUser = async (payload) => {\r\n    try {\r\n        await Axios.post('/register', payload)\r\n    } catch (error) {\r\n        extractApiError(error)\r\n    }\r\n}\r\n\r\nconst userLogin = async (payLoad, user_login) => {\r\n    try {\r\n        const resp = await Axios.post('/login', payLoad)\r\n\r\n        user_login(resp.data.message, true)\r\n        return resp\r\n    } catch (error) {\r\n        throw extractApiError(error)\r\n    }\r\n}\r\n\r\nconst resetPin = async (pin) => {\r\n    const body = { pin }\r\n    try {\r\n        const resp = await Axios.post('/pinreset', body)\r\n        console.log(resp)\r\n    } catch (error) {\r\n        throw error\r\n    }\r\n}\r\n\r\nconst signOut = (userLogin) => {\r\n    try {\r\n        userLogin('', false)\r\n        localStorage.clear()\r\n    } catch (error) {\r\n        throw error\r\n    }\r\n}\r\n\r\nconst createPin = async (payload) => {\r\n    try {\r\n        await Axios.patch('/createpin', payload)\r\n    } catch (error) {\r\n        console.log(error)\r\n        throw extractApiError(error)\r\n    }\r\n}\r\n\r\nconst fetchUser = async (accountNumber) => {\r\n    try {\r\n        const res = await Axios.post('/user', accountNumber)\r\n        console.log(res)\r\n    } catch (error) {\r\n        console.log(error)\r\n        throw extractApiError(error)\r\n    }\r\n}\r\n\r\nexport { userLogin, resetPin, registerUser, signOut, createPin, fetchUser }\r\n","import {\r\n    LOGIN,\r\n    pinReset,\r\n    register,\r\n    transactionHistory,\r\n    toggleBalanceDisplay,\r\n} from './index'\r\n\r\nconst user_login = (data, isSignedIn) => (dispatch) => {\r\n    dispatch({\r\n        type: LOGIN,\r\n        payload: data,\r\n        isSignedIn,\r\n    })\r\n}\r\n\r\nconst userRegister = (data, isRegistered) => (dispatch) => {\r\n    dispatch({\r\n        type: register,\r\n        payload: data,\r\n        isRegistered,\r\n    })\r\n}\r\n\r\nconst userPinReset = (data, isPinReset) => (dispatch) => {\r\n    dispatch({\r\n        type: pinReset,\r\n        payload: data,\r\n        isPinReset,\r\n    })\r\n}\r\n\r\nconst updateTransactionHistory = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: transactionHistory,\r\n        payload: data,\r\n    })\r\n}\r\n\r\nconst toggleDisplay = (display) => (dispatch) => {\r\n    dispatch({\r\n        type: toggleBalanceDisplay,\r\n        payload: display,\r\n    })\r\n}\r\n\r\nexport {\r\n    user_login,\r\n    userPinReset,\r\n    userRegister,\r\n    updateTransactionHistory,\r\n    toggleDisplay,\r\n}\r\n","const LOGIN = 'LOGIN'\r\nconst register = 'register'\r\nconst pinReset = 'pinReset'\r\nconst transfer = 'transfer'\r\nconst transactionHistory = 'transactionHistory'\r\nconst toggleBalanceDisplay = 'toggleBalanceDisplay'\r\n\r\nexport {\r\n    LOGIN,\r\n    register,\r\n    pinReset,\r\n    transfer,\r\n    transactionHistory,\r\n    toggleBalanceDisplay,\r\n}\r\n","import * as yup from 'yup'\r\n\r\nconst loginSchema = yup.object().shape({\r\n    email: yup.string().email().required('email is required'),\r\n    password: yup.string().required('password is required'),\r\n})\r\n\r\nconst transferSchema = yup.object().shape({\r\n    recipient: yup.number().required('recipient account number is required'),\r\n    amount: yup.number().required(),\r\n})\r\n\r\nconst signUpSchema = yup.object().shape({\r\n    firstName: yup.string().required('*first name is required'),\r\n    lastName: yup.string().required('*last name is required'),\r\n    email: yup.string().required().email(),\r\n    password: yup\r\n        .string()\r\n        .required('*password is required')\r\n        .matches(\r\n            /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})/,\r\n            'min length 8 Characters, One Uppercase, One Lowercase, One Number and One Special Character'\r\n        ),\r\n    gender: yup.string().required('*gender is required'),\r\n    phoneNumber: yup.string().required('*phone number is required'),\r\n})\r\n\r\nconst forgotPasswordSchema = yup.object().shape({\r\n    email: yup.string().email().required('email is required'),\r\n})\r\n\r\nexport { loginSchema, transferSchema, signUpSchema, forgotPasswordSchema }\r\n","import React from 'react'\r\nimport PinInput from 'react-pin-input'\r\nimport propTypes from 'prop-types'\r\n\r\nconst Pin = (props) => {\r\n    return (\r\n        <PinInput\r\n            secret\r\n            type=\"numeric\"\r\n            inputStyle={{\r\n                fontWeight: 'bold',\r\n                color: 'black',\r\n                height: '40px',\r\n                border: 'none',\r\n                marginLeft: '25px',\r\n                borderBottom: '1px solid black',\r\n                margin: 'auto',\r\n                width: '60px',\r\n            }}\r\n            onChange={props.onChange}\r\n            length={4}\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n\r\nPin.propTypes = {\r\n    onChange: propTypes.func.isRequired,\r\n}\r\n\r\nexport default Pin\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nconst CustomBtn = styled.button`\r\n    border: none;\r\n    outline: none;\r\n    ${(props) => !!props.bg && `background: ${props.bg};`}\r\n    ${(props) => !!props.width && `width: ${props.width}px;`}\r\n    ${(props) => !!props.height && `height: ${props.height}px;`}\r\n    ${(props) => !!props.color && `color: ${props.color};`}\r\n`\r\n\r\nconst Button = (props) => {\r\n    const IconComponent = typeof props.icon === 'function' && props.icon\r\n    return (\r\n        <CustomBtn\r\n            className=\"d-flex justify-content-around align-items-center\"\r\n            {...props}\r\n        >\r\n            {!!props.text && props.text}\r\n            {!!props.icon && <IconComponent />}\r\n        </CustomBtn>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport { Input, Label } from 'reactstrap'\r\nimport styled from 'styled-components'\r\n\r\nconst StyleField = styled(Input)`\r\n    height: 54px;\r\n    transition: all ease 0.3s;\r\n`\r\n\r\nconst CustomInputs = (props) => {\r\n    return (\r\n        <>\r\n            <Label>{props.label}</Label>\r\n            {props.type === 'select' ? (\r\n                <StyleField {...props}>{props.children}</StyleField>\r\n            ) : (\r\n                <StyleField {...props} />\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CustomInputs\r\n","import { Formik } from 'formik'\r\nimport React from 'react'\r\nimport {\r\n    loginSchema,\r\n    transferSchema,\r\n    signUpSchema,\r\n    forgotPasswordSchema,\r\n} from './validation'\r\nimport styled from 'styled-components'\r\nimport Loader from 'react-loader-spinner'\r\nimport propTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form } from 'reactstrap'\r\nimport { Button as Btn, CustomInputs } from '../../globalcomponents'\r\n\r\nconst ErrorText = styled.p`\r\n    color: red;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n`\r\nconst Error = styled.p`\r\n    color: red;\r\n    font-weight: 600;\r\n    text-align: start;\r\n    font-size: 12px;\r\n`\r\n\r\nconst Button = (props) => {\r\n    return <Btn bg=\"#065340\" color=\"white\" width={250} height={50} {...props} />\r\n}\r\nconst LoginForm = (props) => {\r\n    const initialValues = {\r\n        email: '',\r\n        password: '',\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={loginSchema}\r\n            validateOnBlur={false}\r\n            validateOnChange={true}\r\n            onSubmit={(e) => props.handleSubmit(e)}\r\n        >\r\n            {({ errors, handleChange, values, handleSubmit }) => {\r\n                return (\r\n                    <Form onSubmit={handleSubmit} style={{ width: '100%' }}>\r\n                        {!!props.error && (\r\n                            <p style={{ color: 'red' }}>{props.error}</p>\r\n                        )}\r\n                        <div>\r\n                            <CustomInputs\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                onChange={handleChange}\r\n                                value={values.email}\r\n                                label=\"Email\"\r\n                                autoComplete=\"false\"\r\n                                style={{\r\n                                    border: `1px solid ${\r\n                                        !!errors.email || !!props.error\r\n                                            ? 'red'\r\n                                            : 'green'\r\n                                    }`,\r\n                                }}\r\n                            />\r\n                            {!!errors.email && (\r\n                                <span style={{ color: 'red' }}>\r\n                                    {errors.email}\r\n                                </span>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"pt-3\">\r\n                            <CustomInputs\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                onChange={handleChange}\r\n                                label=\"Password\"\r\n                                value={values.password}\r\n                                style={{\r\n                                    border: `1px solid ${\r\n                                        !!errors.password || !!props.error\r\n                                            ? 'red'\r\n                                            : 'green'\r\n                                    }`,\r\n                                }}\r\n                                autoComplete=\"false\"\r\n                            />\r\n                            {!!errors.password && (\r\n                                <p style={{ color: 'red' }}>\r\n                                    {errors.password}\r\n                                </p>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-end align-items-center pt-3\">\r\n                            <Link\r\n                                style={{\r\n                                    color: 'grey',\r\n                                    fontWeight: 600,\r\n                                    fontSize: '18px',\r\n                                }}\r\n                                to=\"/forgotpassword\"\r\n                            >\r\n                                forgot password\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"d-flex flex-column justify-content-center align-items-center pt-4\">\r\n                            <Button\r\n                                className=\"mt-2 rounded-pill\"\r\n                                type=\"submit\"\r\n                                disabled={props.formLoading}\r\n                                text={\r\n                                    props.formLoading ? (\r\n                                        <Loader\r\n                                            type=\"ThreeDots\"\r\n                                            height={30}\r\n                                            width={30}\r\n                                            color=\"white\"\r\n                                        />\r\n                                    ) : (\r\n                                        'Sign In'\r\n                                    )\r\n                                }\r\n                            />\r\n                        </div>\r\n                    </Form>\r\n                )\r\n            }}\r\n        </Formik>\r\n    )\r\n}\r\n\r\nconst ForgotPasswordForm = (props) => {\r\n    const initialValues = {\r\n        email: '',\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={initialValues}\r\n            validateOnBlur={false}\r\n            validateOnChange={true}\r\n            validationSchema={forgotPasswordSchema}\r\n            onSubmit={props.handleSubmit}\r\n        >\r\n            {({ errors, handleChange, values, handleSubmit }) => {\r\n                return (\r\n                    <Form onSubmit={handleSubmit} style={{ width: '100%' }}>\r\n                        <CustomInputs\r\n                            onChange={handleChange}\r\n                            value={values.email}\r\n                            className=\"mb-2\"\r\n                            label=\"Email\"\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            style={{\r\n                                border: `1px solid ${\r\n                                    !!errors.email ? 'red' : 'green'\r\n                                }`,\r\n                            }}\r\n                        />\r\n                        {!!errors.email && (\r\n                            <ErrorText>{errors.email}</ErrorText>\r\n                        )}\r\n\r\n                        <div className=\"d-flex justify-content-end align-items-center pt-3\">\r\n                            <Link\r\n                                style={{\r\n                                    color: 'grey',\r\n                                    fontWeight: 600,\r\n                                    fontSize: '18px',\r\n                                }}\r\n                                to=\"/signin\"\r\n                            >\r\n                                remember now ?\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-center align-items-center mt-3\">\r\n                            <Button\r\n                                type=\"submit\"\r\n                                className=\"mt-2 rounded-pill\"\r\n                                text=\"Send\"\r\n                            />\r\n                        </div>\r\n                    </Form>\r\n                )\r\n            }}\r\n        </Formik>\r\n    )\r\n}\r\nconst TransferForm = (props) => {\r\n    const initialValues = {\r\n        recipient: '',\r\n        amount: '',\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            validateOnChange={true}\r\n            initialValues={initialValues}\r\n            validationSchema={transferSchema}\r\n            onSubmit={props.formSubmit}\r\n            {...props}\r\n        >\r\n            {({ errors, handleChange, handleSubmit, values }) => {\r\n                const isValidBalance = +values.amount > +props.balance\r\n                return (\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <CustomInputs\r\n                            type=\"number\"\r\n                            name=\"recipient\"\r\n                            label=\"recipient\"\r\n                            onChange={handleChange}\r\n                        />{' '}\r\n                        {!!errors.recipient && (\r\n                            <Error>{errors.recipient}</Error>\r\n                        )}\r\n                        <CustomInputs\r\n                            type=\"number\"\r\n                            name=\"amount\"\r\n                            label=\"amount\"\r\n                            onChange={handleChange}\r\n                        />\r\n                        {!!errors.amount && <Error>{errors.amount}</Error>}\r\n                        <div className=\"d-flex justify-content-end align-items-center\">\r\n                            {isValidBalance && (\r\n                                <ErrorText>insufficient balance</ErrorText>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-center align-items-center\">\r\n                            <Button\r\n                                disabled={isValidBalance}\r\n                                type=\"submit\"\r\n                                color=\"white\"\r\n                                className=\"mt-3 mb-2 rounded-pill\"\r\n                                text={'send'}\r\n                            />\r\n                        </div>\r\n                    </Form>\r\n                )\r\n            }}\r\n        </Formik>\r\n    )\r\n}\r\n\r\nconst SignUpForm = (props) => {\r\n    const initialValues = {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        gender: '',\r\n        password: '',\r\n        phoneNumber: '',\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            validationSchema={signUpSchema}\r\n            initialValues={initialValues}\r\n            validateOnBlur={false}\r\n            validateOnChange={false}\r\n            onSubmit={props.handleSubmit}\r\n        >\r\n            {({ errors, handleChange, handleSubmit, values }) => {\r\n                return (\r\n                    <Form onSubmit={handleSubmit} style={{ width: '100%' }}>\r\n                        {!!props.regError && (\r\n                            <ErrorText>{props.regError}</ErrorText>\r\n                        )}\r\n                        <CustomInputs\r\n                            label=\"First name\"\r\n                            value={values.firstName}\r\n                            type=\"text\"\r\n                            name=\"firstName\"\r\n                            onChange={handleChange}\r\n                            style={{ width: '100%' }}\r\n                            className=\"mb-2\"\r\n                        />\r\n                        {!!errors.firstName && (\r\n                            <ErrorText>{errors.firstName}</ErrorText>\r\n                        )}\r\n\r\n                        <CustomInputs\r\n                            value={values.lastName}\r\n                            label=\"Last name\"\r\n                            type=\"text\"\r\n                            name=\"lastName\"\r\n                            onChange={handleChange}\r\n                            className=\"mb-2\"\r\n                        />\r\n                        {!!errors.lastName && (\r\n                            <ErrorText>{errors.lastName}</ErrorText>\r\n                        )}\r\n\r\n                        <CustomInputs\r\n                            onChange={handleChange}\r\n                            value={values.email}\r\n                            className=\"mb-2\"\r\n                            label=\"Email\"\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                        />\r\n                        {!!errors.email && (\r\n                            <ErrorText>{errors.email}</ErrorText>\r\n                        )}\r\n                        <CustomInputs\r\n                            value={values.password}\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            onChange={handleChange}\r\n                            className=\"mb-2\"\r\n                        />\r\n                        {!!errors.password && (\r\n                            <ErrorText>{errors.password}</ErrorText>\r\n                        )}\r\n                        <CustomInputs\r\n                            type=\"text\"\r\n                            label=\"Phone number\"\r\n                            value={values.phoneNumber}\r\n                            onChange={handleChange}\r\n                            name=\"phoneNumber\"\r\n                            className=\"mb-2\"\r\n                        />\r\n                        {!!errors.phoneNumber && (\r\n                            <ErrorText>{errors.phoneNumber}</ErrorText>\r\n                        )}\r\n\r\n                        <CustomInputs\r\n                            label=\"Gender\"\r\n                            style={{\r\n                                width: '80%',\r\n                            }}\r\n                            type=\"select\"\r\n                            name=\"gender\"\r\n                            value={values.gender}\r\n                            onChange={handleChange}\r\n                            className=\"mb-2\"\r\n                        >\r\n                            <option value=\"\">select gender</option>\r\n                            <option value=\"male\">male</option>\r\n                            <option value=\"female\">female</option>\r\n                        </CustomInputs>\r\n                        {!!errors.gender && (\r\n                            <ErrorText>{errors.gender}</ErrorText>\r\n                        )}\r\n\r\n                        <div className=\"d-flex justify-content-center align-items-center mt-3\">\r\n                            <Button\r\n                                type=\"submit\"\r\n                                className=\"mt-2 rounded-pill\"\r\n                                text={\r\n                                    props.formLoading ? (\r\n                                        <Loader\r\n                                            type=\"ThreeDots\"\r\n                                            height={30}\r\n                                            width={30}\r\n                                            color=\"#00BFFF\"\r\n                                        />\r\n                                    ) : (\r\n                                        'create account'\r\n                                    )\r\n                                }\r\n                            />\r\n                        </div>\r\n                    </Form>\r\n                )\r\n            }}\r\n        </Formik>\r\n    )\r\n}\r\n\r\nLoginForm.propTypes = {\r\n    handleSubmit: propTypes.func.isRequired,\r\n    error: propTypes.string,\r\n    formLoading: propTypes.bool.isRequired,\r\n}\r\nTransferForm.propTypes = {\r\n    formSubmit: propTypes.func.isRequired,\r\n    balance: propTypes.any.isRequired,\r\n}\r\nexport { LoginForm, TransferForm, SignUpForm, ForgotPasswordForm }\r\n","import React, { Component } from 'react'\r\n\r\nexport default class privacy extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Privacy Policy</h1>\r\n                <p>Last updated: December 21, 2021</p>\r\n                <p>\r\n                    This Privacy Policy describes Our policies and procedures on\r\n                    the collection, use and disclosure of Your information when\r\n                    You use the Service and tells You about Your privacy rights\r\n                    and how the law protects You.\r\n                </p>\r\n\r\n                <h1>Interpretation and Definitions</h1>\r\n                <h2>Interpretation</h2>\r\n                <p>\r\n                    The words of which the initial letter is capitalized have\r\n                    meanings defined under the following conditions. The\r\n                    following definitions shall have the same meaning regardless\r\n                    of whether they appear in singular or in plural.\r\n                </p>\r\n                <h2>Definitions</h2>\r\n                <p>For the purposes of this Privacy Policy:</p>\r\n                <ul>\r\n                    <li>\r\n                        <p>\r\n                            <strong>Account</strong> means a unique account\r\n                            created for You to access our Service or parts of\r\n                            our Service.\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>\r\n                            <strong>Affiliate</strong> means an entity that\r\n                            controls, is controlled by or is under common\r\n                            control with a party, where &quot;control&quot;\r\n                            means ownership of 50% or more of the shares, equity\r\n                            interest or other securities entitled to vote for\r\n                            election of directors or other managing authority.\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>\r\n                            <strong>Application</strong> means the software\r\n                            program provided by the Company downloaded by You on\r\n                            any electronic device, named Afrobank\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>\r\n                            <strong>Company</strong> (referred to as either\r\n                            &quot;the Company&quot;, &quot;We&quot;,\r\n                            &quot;Us&quot; or &quot;Our&quot; in this Agreement)\r\n                            refers to Afrobank.\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>\r\n                            <strong>Country</strong> refers to: Nigeria\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>\r\n                            <strong>Device</strong> means any device that can\r\n                            access the Service such as a computer, a cellphone\r\n                            or a digital tablet.\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>\r\n                            <strong>Personal Data</strong> is any information\r\n                            that relates to an identified or identifiable\r\n                            individual.\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>\r\n                            <strong>Service</strong> refers to the Application.\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>\r\n                            <strong>Service Provider</strong> means any natural\r\n                            or legal person who processes the data on behalf of\r\n                            the Company. It refers to third-party companies or\r\n                            individuals employed by the Company to facilitate\r\n                            the Service, to provide the Service on behalf of the\r\n                            Company, to perform services related to the Service\r\n                            or to assist the Company in analyzing how the\r\n                            Service is used.\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>\r\n                            <strong>Usage Data</strong> refers to data collected\r\n                            automatically, either generated by the use of the\r\n                            Service or from the Service infrastructure itself\r\n                            (for example, the duration of a page visit).\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>\r\n                            <strong>You</strong> means the individual accessing\r\n                            or using the Service, or the company, or other legal\r\n                            entity on behalf of which such individual is\r\n                            accessing or using the Service, as applicable.\r\n                        </p>\r\n                    </li>\r\n                </ul>\r\n                <h1>Collecting and Using Your Personal Data</h1>\r\n                <h2>Types of Data Collected</h2>\r\n                <h3>Personal Data</h3>\r\n                <p>\r\n                    While using Our Service, We may ask You to provide Us with\r\n                    certain personally identifiable information that can be used\r\n                    to contact or identify You. Personally identifiable\r\n                    information may include, but is not limited to:\r\n                </p>\r\n                <ul>\r\n                    <li>\r\n                        <p>Email address</p>\r\n                    </li>\r\n                    <li>\r\n                        <p>First name and last name</p>\r\n                    </li>\r\n                    <li>\r\n                        <p>Phone number</p>\r\n                    </li>\r\n                    <li>\r\n                        <p>Usage Data</p>\r\n                    </li>\r\n                </ul>\r\n                <h3>Usage Data</h3>\r\n                <p>\r\n                    Usage Data is collected automatically when using the\r\n                    Service.\r\n                </p>\r\n                <p>\r\n                    Usage Data may include information such as Your Device's\r\n                    Internet Protocol address (e.g. IP address), browser type,\r\n                    browser version, the pages of our Service that You visit,\r\n                    the time and date of Your visit, the time spent on those\r\n                    pages, unique device identifiers and other diagnostic data.\r\n                </p>\r\n                <p>\r\n                    When You access the Service by or through a mobile device,\r\n                    We may collect certain information automatically, including,\r\n                    but not limited to, the type of mobile device You use, Your\r\n                    mobile device unique ID, the IP address of Your mobile\r\n                    device, Your mobile operating system, the type of mobile\r\n                    Internet browser You use, unique device identifiers and\r\n                    other diagnostic data.\r\n                </p>\r\n                <p>\r\n                    We may also collect information that Your browser sends\r\n                    whenever You visit our Service or when You access the\r\n                    Service by or through a mobile device.\r\n                </p>\r\n                <h2>Use of Your Personal Data</h2>\r\n                <p>\r\n                    The Company may use Personal Data for the following\r\n                    purposes:\r\n                </p>\r\n                <ul>\r\n                    <li>\r\n                        <p>\r\n                            <strong>To provide and maintain our Service</strong>\r\n                            , including to monitor the usage of our Service.\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>\r\n                            <strong>To manage Your Account:</strong> to manage\r\n                            Your registration as a user of the Service. The\r\n                            Personal Data You provide can give You access to\r\n                            different functionalities of the Service that are\r\n                            available to You as a registered user.\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>\r\n                            <strong>For the performance of a contract:</strong>{' '}\r\n                            the development, compliance and undertaking of the\r\n                            purchase contract for the products, items or\r\n                            services You have purchased or of any other contract\r\n                            with Us through the Service.\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>\r\n                            <strong>To contact You:</strong> To contact You by\r\n                            email, telephone calls, SMS, or other equivalent\r\n                            forms of electronic communication, such as a mobile\r\n                            application's push notifications regarding updates\r\n                            or informative communications related to the\r\n                            functionalities, products or contracted services,\r\n                            including the security updates, when necessary or\r\n                            reasonable for their implementation.\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>\r\n                            <strong>To provide You</strong> with news, special\r\n                            offers and general information about other goods,\r\n                            services and events which we offer that are similar\r\n                            to those that you have already purchased or enquired\r\n                            about unless You have opted not to receive such\r\n                            information.\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>\r\n                            <strong>To manage Your requests:</strong> To attend\r\n                            and manage Your requests to Us.\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>\r\n                            <strong>For business transfers:</strong> We may use\r\n                            Your information to evaluate or conduct a merger,\r\n                            divestiture, restructuring, reorganization,\r\n                            dissolution, or other sale or transfer of some or\r\n                            all of Our assets, whether as a going concern or as\r\n                            part of bankruptcy, liquidation, or similar\r\n                            proceeding, in which Personal Data held by Us about\r\n                            our Service users is among the assets transferred.\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>\r\n                            <strong>For other purposes</strong>: We may use Your\r\n                            information for other purposes, such as data\r\n                            analysis, identifying usage trends, determining the\r\n                            effectiveness of our promotional campaigns and to\r\n                            evaluate and improve our Service, products,\r\n                            services, marketing and your experience.\r\n                        </p>\r\n                    </li>\r\n                </ul>\r\n                <p>\r\n                    We may share Your personal information in the following\r\n                    situations:\r\n                </p>\r\n                <ul>\r\n                    <li>\r\n                        <strong>For business transfers:</strong> We may share or\r\n                        transfer Your personal information in connection with,\r\n                        or during negotiations of, any merger, sale of Company\r\n                        assets, financing, or acquisition of all or a portion of\r\n                        Our business to another company.\r\n                    </li>\r\n                    <li>\r\n                        <strong>With Affiliates:</strong> We may share Your\r\n                        information with Our affiliates, in which case we will\r\n                        require those affiliates to honor this Privacy Policy.\r\n                        Affiliates include Our parent company and any other\r\n                        subsidiaries, joint venture partners or other companies\r\n                        that We control or that are under common control with\r\n                        Us.\r\n                    </li>\r\n                    <li>\r\n                        <strong>With business partners:</strong> We may share\r\n                        Your information with Our business partners to offer You\r\n                        certain products, services or promotions.\r\n                    </li>\r\n                    <li>\r\n                        <strong>With other users:</strong> when You share\r\n                        personal information or otherwise interact in the public\r\n                        areas with other users, such information may be viewed\r\n                        by all users and may be publicly distributed outside.\r\n                    </li>\r\n                    <li>\r\n                        <strong>With Your consent</strong>: We may disclose Your\r\n                        personal information for any other purpose with Your\r\n                        consent.\r\n                    </li>\r\n                </ul>\r\n                <h2>Retention of Your Personal Data</h2>\r\n                <p>\r\n                    The Company will retain Your Personal Data only for as long\r\n                    as is necessary for the purposes set out in this Privacy\r\n                    Policy. We will retain and use Your Personal Data to the\r\n                    extent necessary to comply with our legal obligations (for\r\n                    example, if we are required to retain your data to comply\r\n                    with applicable laws), resolve disputes, and enforce our\r\n                    legal agreements and policies.\r\n                </p>\r\n                <p>\r\n                    The Company will also retain Usage Data for internal\r\n                    analysis purposes. Usage Data is generally retained for a\r\n                    shorter period of time, except when this data is used to\r\n                    strengthen the security or to improve the functionality of\r\n                    Our Service, or We are legally obligated to retain this data\r\n                    for longer time periods.\r\n                </p>\r\n                <h2>Transfer of Your Personal Data</h2>\r\n                <p>\r\n                    Your information, including Personal Data, is processed at\r\n                    the Company's operating offices and in any other places\r\n                    where the parties involved in the processing are located. It\r\n                    means that this information may be transferred to — and\r\n                    maintained on — computers located outside of Your state,\r\n                    province, country or other governmental jurisdiction where\r\n                    the data protection laws may differ than those from Your\r\n                    jurisdiction.\r\n                </p>\r\n                <p>\r\n                    Your consent to this Privacy Policy followed by Your\r\n                    submission of such information represents Your agreement to\r\n                    that transfer.\r\n                </p>\r\n                <p>\r\n                    The Company will take all steps reasonably necessary to\r\n                    ensure that Your data is treated securely and in accordance\r\n                    with this Privacy Policy and no transfer of Your Personal\r\n                    Data will take place to an organization or a country unless\r\n                    there are adequate controls in place including the security\r\n                    of Your data and other personal information.\r\n                </p>\r\n                <h2>Disclosure of Your Personal Data</h2>\r\n                <h3>Business Transactions</h3>\r\n                <p>\r\n                    If the Company is involved in a merger, acquisition or asset\r\n                    sale, Your Personal Data may be transferred. We will provide\r\n                    notice before Your Personal Data is transferred and becomes\r\n                    subject to a different Privacy Policy.\r\n                </p>\r\n                <h3>Law enforcement</h3>\r\n                <p>\r\n                    Under certain circumstances, the Company may be required to\r\n                    disclose Your Personal Data if required to do so by law or\r\n                    in response to valid requests by public authorities (e.g. a\r\n                    court or a government agency).\r\n                </p>\r\n                <h3>Other legal requirements</h3>\r\n                <p>\r\n                    The Company may disclose Your Personal Data in the good\r\n                    faith belief that such action is necessary to:\r\n                </p>\r\n                <ul>\r\n                    <li>Comply with a legal obligation</li>\r\n                    <li>\r\n                        Protect and defend the rights or property of the Company\r\n                    </li>\r\n                    <li>\r\n                        Prevent or investigate possible wrongdoing in connection\r\n                        with the Service\r\n                    </li>\r\n                    <li>\r\n                        Protect the personal safety of Users of the Service or\r\n                        the public\r\n                    </li>\r\n                    <li>Protect against legal liability</li>\r\n                </ul>\r\n                <h2>Security of Your Personal Data</h2>\r\n                <p>\r\n                    The security of Your Personal Data is important to Us, but\r\n                    remember that no method of transmission over the Internet,\r\n                    or method of electronic storage is 100% secure. While We\r\n                    strive to use commercially acceptable means to protect Your\r\n                    Personal Data, We cannot guarantee its absolute security.\r\n                </p>\r\n                <h1>Children's Privacy</h1>\r\n                <p>\r\n                    Our Service does not address anyone under the age of 18. We\r\n                    do not knowingly collect personally identifiable information\r\n                    from anyone under the age of 13. If You are a parent or\r\n                    guardian and You are aware that Your child has provided Us\r\n                    with Personal Data, please contact Us. If We become aware\r\n                    that We have collected Personal Data from anyone under the\r\n                    age of 13 without verification of parental consent, We take\r\n                    steps to remove that information from Our servers.\r\n                </p>\r\n                <p>\r\n                    If We need to rely on consent as a legal basis for\r\n                    processing Your information and Your country requires\r\n                    consent from a parent, We may require Your parent's consent\r\n                    before We collect and use that information.\r\n                </p>\r\n\r\n                <h1>Changes to this Privacy Policy</h1>\r\n                <p>\r\n                    We may update Our Privacy Policy from time to time. We will\r\n                    notify You of any changes by posting the new Privacy Policy\r\n                    on this page.\r\n                </p>\r\n                <p>\r\n                    We will let You know via email and/or a prominent notice on\r\n                    Our Service, prior to the change becoming effective and\r\n                    update the &quot;Last updated&quot; date at the top of this\r\n                    Privacy Policy.\r\n                </p>\r\n                <p>\r\n                    You are advised to review this Privacy Policy periodically\r\n                    for any changes. Changes to this Privacy Policy are\r\n                    effective when they are posted on this page.\r\n                </p>\r\n                <h1>Contact Us</h1>\r\n                <p>\r\n                    If you have any questions about this Privacy Policy, You can\r\n                    contact us:\r\n                </p>\r\n                <ul>\r\n                    <li>By email: makindeakinola22@gmail.com</li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n    Col,\r\n    Row,\r\n    Button as btn,\r\n    Modal,\r\n    Container,\r\n    ModalBody,\r\n} from 'reactstrap'\r\nimport { userLogin } from '../../services/authentication'\r\nimport { user_login } from '../../services/appstore/actions/actions'\r\nimport { LoginForm } from '../forms/index'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\nimport { Clear, Facebook, Instagram, Twitter } from '@material-ui/icons'\r\nimport Privacy from './privacy'\r\n\r\nexport const Text = styled.p`\r\n    font-size: 42px;\r\n    font-weight: 600;\r\n    color: #065340;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    letter-spacing: 0.02rem;\r\n`\r\nexport const Button = styled(btn)`\r\n    background-color: transparent;\r\n    border: 2px solid white;\r\n    width: 150px;\r\n    height: 50px;\r\n    color: white;\r\n`\r\n\r\nconst SignIn = (props) => {\r\n    const [state, setState] = useState({\r\n        error: '',\r\n        formLoading: false,\r\n    })\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const toggle = () => {\r\n        setOpen(!open)\r\n    }\r\n\r\n    const handleSubmit = async (value) => {\r\n        setState({\r\n            formLoading: true,\r\n            error: '',\r\n        })\r\n        try {\r\n            await userLogin(value, props.user_login)\r\n            setState({\r\n                formLoading: false,\r\n            })\r\n            props.history.push('/dashboard')\r\n        } catch (error) {\r\n            setState({\r\n                error: error || 'An error occured',\r\n                formLoading: false,\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Col\r\n            // style={{ height: '100vh'\r\n            //  }}\r\n            style={{\r\n                height: '100%',\r\n                position: 'fixed',\r\n                top: 0,\r\n                left: 0,\r\n                bottom: 0,\r\n                right: 0,\r\n                // backgroundColor: '#065340',\r\n            }}\r\n        >\r\n            <Row style={{ height: '100%' }}>\r\n                <Col\r\n                    lg={8}\r\n                    className=\"d-flex justify-content-center align-items-center\"\r\n                >\r\n                    <Col lg={6} xs={12} md={7}>\r\n                        <Text className=\"text-center mobile_text\">\r\n                            Sign in to Account\r\n                        </Text>\r\n                        <Col\r\n                            lg={4}\r\n                            sm={12}\r\n                            md={6}\r\n                            className=\"m-auto pt-3 pb-4 hide\"\r\n                        >\r\n                            <Row className=\"d-flex justify-content-between align-items-center\">\r\n                                <Col lg={2} sm={3}>\r\n                                    <Facebook\r\n                                        style={{ color: '#065340' }}\r\n                                        fontSize=\"large\"\r\n                                    />\r\n                                </Col>\r\n                                <Col lg={2} sm={3}>\r\n                                    <Twitter\r\n                                        style={{ color: '#065340' }}\r\n                                        fontSize=\"large\"\r\n                                    />\r\n                                </Col>\r\n                                <Col lg={2} sm={3}>\r\n                                    <Instagram\r\n                                        style={{ color: '#065340' }}\r\n                                        fontSize=\"large\"\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                        <Text\r\n                            style={{ fontSize: '14px' }}\r\n                            className=\"text-center\"\r\n                        >\r\n                            or use your email account\r\n                        </Text>\r\n                        <LoginForm\r\n                            handleSubmit={handleSubmit}\r\n                            formLoading={state.formLoading}\r\n                            error={state.error}\r\n                        />\r\n                        <Col\r\n                            style={{\r\n                                position: 'absolute',\r\n                                top: '130%',\r\n                                bottom: 0,\r\n                            }}\r\n                        >\r\n                            <Text\r\n                                style={{ fontSize: '14px', cursor: 'pointer' }}\r\n                                className=\"text-center\"\r\n                                onClick={() => toggle()}\r\n                            >\r\n                                policy . Terms & conditions\r\n                            </Text>\r\n                        </Col>\r\n                    </Col>\r\n                </Col>\r\n                <Col\r\n                    lg={4}\r\n                    style={{ backgroundColor: '#065340' }}\r\n                    className=\"hide d-flex justify-content-center align-items-center mobile_mt mobile_pb\"\r\n                >\r\n                    <Col lg={7} className=\"m-auto \">\r\n                        <Text\r\n                            style={{ color: 'white' }}\r\n                            className=\"text-center hide\"\r\n                        >\r\n                            Hello, Friend\r\n                        </Text>\r\n                        <Text\r\n                            style={{\r\n                                fontSize: '18px',\r\n                                color: 'white',\r\n                                opacity: 0.7,\r\n                                fontWeight: 500,\r\n                            }}\r\n                            className=\"text-center hide\"\r\n                        >\r\n                            Fill up personal information and start journey with\r\n                            us\r\n                        </Text>\r\n                        <div className=\"d-flex justify-content-center pt-4\">\r\n                            <Link\r\n                                style={{\r\n                                    color: 'white',\r\n                                    textDecoration: 'none',\r\n                                }}\r\n                                to=\"/register\"\r\n                            >\r\n                                <Button className=\"rounded-pill\">\r\n                                    Sign Up\r\n                                </Button>\r\n                            </Link>\r\n                        </div>\r\n                    </Col>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Modal size=\"lg\" isOpen={open} toggle={() => toggle()} centered>\r\n                <Container>\r\n                    <Col>\r\n                        <Col\r\n                            lg={6}\r\n                            className=\"ml-auto d-flex justify-content-end align-items-center\"\r\n                        >\r\n                            <button\r\n                                className=\"float-right btn \"\r\n                                onClick={() => toggle()}\r\n                            >\r\n                                <Clear />\r\n                            </button>\r\n                        </Col>\r\n                    </Col>\r\n                    <ModalBody></ModalBody>\r\n                    <Col>\r\n                        <Privacy />\r\n                    </Col>\r\n                </Container>\r\n            </Modal>\r\n            {/* <Col className=\"bg-dark\" style={{ height: '160px' }}></Col> */}\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default connect(null, { user_login })(SignIn)\r\n","import React from 'react'\r\nimport { Col, Row } from 'reactstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Text } from '../signin/signin'\r\n\r\nconst HomePage = () => {\r\n    return (\r\n        <Col\r\n            className=\"pt-3  psb-5\"\r\n            style={{\r\n                height: '100vh',\r\n                backgroundColor: '#065340',\r\n            }}\r\n        >\r\n            <Row className=\"d-flex justify-content-between align-items-center\">\r\n                <Col className=\"pl-4\" xs={6} lg={6} sm={6}>\r\n                    <p\r\n                        className=\"font-weight-bold\"\r\n                        style={{ color: 'whitesmoke', fontSize: '32px' }}\r\n                    >\r\n                        Afrobank\r\n                    </p>\r\n                </Col>\r\n                <Col\r\n                    lg={6}\r\n                    sm={6}\r\n                    xs={6}\r\n                    className=\"d-flex align-items-center justify-content-end  pr-4\"\r\n                >\r\n                    <Link to=\"/signin\">\r\n                        <Button\r\n                            className=\"rounded-pill\"\r\n                            style={{\r\n                                backgroundColor: 'white',\r\n                                color: '#065340',\r\n                                fontWeight: '550',\r\n                            }}\r\n                        >\r\n                            sign in\r\n                        </Button>\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n            <Col\r\n                className=\"d-flex justify-content-center align-items-center\"\r\n                style={{ height: '100%' }}\r\n            >\r\n                <Row className=\"d-flex justify-content-center align-items-center\">\r\n                    <Col lg={7}>\r\n                        <Text\r\n                            className=\"is-center text-center\"\r\n                            style={{\r\n                                color: 'white',\r\n                            }}\r\n                        >\r\n                            Afrobank is your life long partner\r\n                        </Text>\r\n                        <Text\r\n                            className=\"is-center text-center\"\r\n                            style={{\r\n                                color: 'white',\r\n                                fontSize: '24px',\r\n                                fontWeight: '500',\r\n                                opacity: 0.6,\r\n                            }}\r\n                        >\r\n                            401k taxpayer retirement capitalization consulting\r\n                            prices interest rate established gains exchange\r\n                            traded funds financial health. Credit shares\r\n                            fluctuate.\r\n                        </Text>\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <Link\r\n                                style={{ textDecoration: 'none' }}\r\n                                className=\"mt-4\"\r\n                                to=\"/register\"\r\n                            >\r\n                                <Button\r\n                                    className=\"rounded-pill  d-flex justify-content-center align-items-center\"\r\n                                    style={{\r\n                                        backgroundColor: 'white',\r\n                                        color: '#065340',\r\n                                        height: '55px',\r\n                                        fontSize: '20px',\r\n                                        fontWeight: '550',\r\n                                    }}\r\n                                >\r\n                                    get started\r\n                                </Button>\r\n                            </Link>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n            {/* <TransferModal /> */}\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default HomePage\r\n","import React from 'react'\r\nimport { Row, Col } from 'reactstrap'\r\nimport { SignUpForm } from '../forms'\r\nimport { registerUser } from '../../services/authentication'\r\nimport { Button, Text } from '../signin/signin'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Register extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            formLoading: false,\r\n            regError: '',\r\n        }\r\n    }\r\n\r\n    handleSubmit = async (values) => {\r\n        this.setState({ formLoading: true, regError: '' })\r\n        try {\r\n            await registerUser(values)\r\n            this.setState({ formLoading: false })\r\n            this.props.history.push('/signin')\r\n        } catch (error) {\r\n            console.log(error)\r\n            this.setState({\r\n                formLoading: false,\r\n                regError: error,\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Col\r\n                style={{\r\n                    height: '100vh',\r\n                    position: 'relative',\r\n                    top: 0,\r\n                    left: 0,\r\n                    bottom: 0,\r\n                    right: 0,\r\n                }}\r\n            >\r\n                <Row style={{ height: '100%' }}>\r\n                    <Col\r\n                        lg={8}\r\n                        className=\"d-flex justify-content-center align-items-center\"\r\n                    >\r\n                        <Col lg={6} xs={11} md={7}>\r\n                            <Text className=\"text-center\">\r\n                                Create an Account\r\n                            </Text>\r\n\r\n                            <SignUpForm\r\n                                handleSubmit={this.handleSubmit}\r\n                                formLoading={this.state.formLoading}\r\n                                regError={this.state.regError}\r\n                            />\r\n                        </Col>\r\n                    </Col>\r\n                    <Col\r\n                        lg={4}\r\n                        style={{ backgroundColor: '#065340' }}\r\n                        className=\"d-flex justify-content-center align-items-center mobile_mt mobile_pb\"\r\n                    >\r\n                        <Col lg={7} className=\"m-auto\">\r\n                            <Text\r\n                                style={{ color: 'white' }}\r\n                                className=\"text-center hide\"\r\n                            >\r\n                                Hello, Friend\r\n                            </Text>\r\n                            <Text\r\n                                style={{\r\n                                    fontSize: '18px',\r\n                                    color: 'white',\r\n                                    opacity: 0.7,\r\n                                    fontWeight: 500,\r\n                                }}\r\n                                className=\"text-center hide\"\r\n                            >\r\n                                Welcome back, we've missed you\r\n                            </Text>\r\n                            <div className=\"d-flex justify-content-center pt-4\">\r\n                                <Link\r\n                                    style={{\r\n                                        color: 'white',\r\n                                        textDecoration: 'none',\r\n                                    }}\r\n                                    to=\"/signin\"\r\n                                >\r\n                                    <Button className=\"rounded-pill\">\r\n                                        Sign In\r\n                                    </Button>\r\n                                </Link>\r\n                            </div>\r\n                        </Col>\r\n                    </Col>\r\n                </Row>\r\n\r\n                {/* <Col className=\"bg-dark\" style={{ height: '160px' }}></Col> */}\r\n            </Col>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Register\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport Styled from 'styled-components'\r\nimport {\r\n    Dashboard,\r\n    AccountBalance,\r\n    Settings,\r\n    Payment,\r\n    Person,\r\n    ExitToApp,\r\n} from '@material-ui/icons'\r\nimport styled from 'styled-components'\r\nimport { Col } from 'reactstrap'\r\n\r\nexport const Type = styled.span`\r\n    color: ${(props) => props.color};\r\n    font-size: ${(props) => props.size}px;\r\n`\r\nexport const activeClass = 'active'\r\nexport const Sidelink = Styled((props) => (\r\n    <NavLink {...props} activeClassName={activeClass} />\r\n))`\r\n  color: white;\r\n  font-wight: 500;\r\n  font-size: 15px;\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  padding-top: 15px;\r\n  padding-bottom: 15px;\r\n  padding-left: 10px;\r\n  border-radius: 10px;\r\n  transition: all ease 0.3s;\r\n  &:hover {\r\n    background: #4004af,\r\n    color: white;\r\n  }\r\n  &.${activeClass} {\r\n    background: #4004af;\r\n    color: white;\r\n  }\r\n`\r\nexport const BottomNavLink = Styled((props) => (\r\n    <NavLink {...props} activeClassName={activeClass} />\r\n))`\r\n  color: white;\r\n  font-wight: 500;\r\n  font-size: 15px;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 10px;\r\n  border-radius: 10px;\r\n  transition: all ease 0.3s;\r\n  &.${activeClass} {\r\n    background: #4004af;\r\n    color: white;\r\n  }\r\n`\r\n\r\nconst dashboardRoutes = [\r\n    {\r\n        path: '/dashboard',\r\n        name: 'Dashboard',\r\n        icon: <Dashboard />,\r\n    },\r\n    {\r\n        path: '/dashboard/analysis',\r\n        name: 'Send money',\r\n        icon: <Payment />,\r\n    },\r\n    {\r\n        path: '/dashboard/wallet',\r\n        name: 'Wallet',\r\n        icon: <AccountBalance />,\r\n    },\r\n    {\r\n        path: '/dashboard/profile',\r\n        name: 'Profile',\r\n        icon: <Person />,\r\n    },\r\n    {\r\n        path: '/dashboard/Settings',\r\n        name: 'Settings',\r\n        icon: <Settings />,\r\n    },\r\n]\r\nconst SideBar = () => {\r\n    return (\r\n        <Col className=\"p-0 m-0\" style={{ position: 'static', width: '100%' }}>\r\n            <Col className=\"pt-4\">\r\n                <Type size=\"25\" className=\"font-weight-bold\" color=\"white\">\r\n                    Afrobank\r\n                </Type>\r\n            </Col>\r\n            <Col className=\"hide\" style={{ marginTop: '55px' }}>\r\n                {dashboardRoutes.map((data, idx) => {\r\n                    return (\r\n                        <Sidelink\r\n                            key={idx}\r\n                            exact\r\n                            to={data.path}\r\n                            style={{ textDecoration: 'none' }}\r\n                        >\r\n                            <span className=\"icon-size\">{data.icon}</span>\r\n                            <span className=\"pl-3\">{data.name}</span>\r\n                        </Sidelink>\r\n                    )\r\n                })}\r\n                <div className=\"d-flex justify-content-end flex-column align-item-center\">\r\n                    <Sidelink\r\n                        exact\r\n                        to=\"/signout\"\r\n                        style={{ textDecoration: 'none' }}\r\n                    >\r\n                        <ExitToApp />\r\n                        <span className=\"pl-3\">log out</span>\r\n                    </Sidelink>\r\n                </div>\r\n            </Col>\r\n\r\n            <div className=\"bottom_nav bg-dark m-0 \">\r\n                {dashboardRoutes.map((data, idx) => {\r\n                    return (\r\n                        <div key={idx}>\r\n                            <BottomNavLink\r\n                                exact\r\n                                to={data.path}\r\n                                style={{ textDecoration: 'none' }}\r\n                            >\r\n                                {data.icon}\r\n                                <span className=\"pl-3 hide\">{data.name}</span>\r\n                            </BottomNavLink>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default SideBar\r\n","import {\r\n    LOGIN,\r\n    pinReset,\r\n    register,\r\n    transactionHistory,\r\n    toggleBalanceDisplay,\r\n} from '../actions'\r\n\r\nconst intState = {\r\n    signIn: {\r\n        isSignedIn: false,\r\n        payLoad: {},\r\n    },\r\n    userReg: {\r\n        isRegistered: false,\r\n        payLoad: {},\r\n    },\r\n    userPinReset: {\r\n        isPinReset: false,\r\n        payLoad: {},\r\n    },\r\n    balanceDisplay: false,\r\n    transactions: [],\r\n}\r\n\r\nconst reducer = (state = intState, action) => {\r\n    switch (action.type) {\r\n        case LOGIN:\r\n            return {\r\n                signIn: {\r\n                    ...state,\r\n                    isSignedIn: action.isSignedIn,\r\n                    payLoad: action.payload,\r\n                },\r\n            }\r\n        case register:\r\n            return {\r\n                userReg: {\r\n                    ...state,\r\n                    isRegistered: action.isRegistered,\r\n                    payLoad: action.payload,\r\n                },\r\n            }\r\n        case pinReset:\r\n            return {\r\n                userPinReset: {\r\n                    ...state,\r\n                    isPinReset: action.isPinReset,\r\n                    payLoad: action.payload,\r\n                },\r\n            }\r\n        case transactionHistory:\r\n            return {\r\n                ...state,\r\n                transactions: action.payload,\r\n            }\r\n        case toggleBalanceDisplay:\r\n            return {\r\n                ...state,\r\n                balanceDisplay: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport { reducer }\r\n","import { combineReducers } from 'redux'\r\nimport { reducer } from './reducer'\r\n\r\nexport default combineReducers({\r\n    user: reducer,\r\n})\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport combineReducers from './reducers'\r\n\r\nconst config = {\r\n    key: 'root',\r\n    storage,\r\n    whitelist: ['user'],\r\n}\r\n\r\nconst middleWare = [thunk]\r\nconst persistedReducer = persistReducer(config, combineReducers)\r\n\r\nconst appStore = () => {\r\n    const store = createStore(persistedReducer, applyMiddleware(...middleWare))\r\n    const persiststore = persistStore(store)\r\n    return { store, persiststore }\r\n}\r\n\r\nexport default appStore\r\n","import Axios from '../index'\r\nimport store from '../appstore'\r\nimport { extractApiError } from '../../utils/error'\r\n\r\nconst transfer = async (payload, sender, pin) => {\r\n    const { recipient, amount } = payload\r\n    const body = {\r\n        recipient: recipient.toString(),\r\n        amount,\r\n        sender: sender.toString(),\r\n        pin,\r\n    }\r\n\r\n    console.log(store().persiststore.getState())\r\n\r\n    try {\r\n        const response = await Axios.post('/transfer', body)\r\n        return response.data.message\r\n    } catch (error) {\r\n        throw extractApiError(error)\r\n    }\r\n}\r\n\r\nconst transactionHistory = async (accountNumber, updateTransactionHistory) => {\r\n    try {\r\n        const resp = await Axios.get(`/history/${accountNumber}`)\r\n        updateTransactionHistory(resp.data.message)\r\n    } catch (error) {\r\n        extractApiError(error)\r\n    }\r\n}\r\n\r\nconst getBalance = async (accountNumber) => {\r\n    try {\r\n        const resp = await Axios.get(`/balance/${accountNumber}`)\r\n        return resp.data.message\r\n    } catch (error) {\r\n        extractApiError(error)\r\n    }\r\n}\r\n\r\nexport { transactionHistory, transfer, getBalance }\r\n","const daysOfTheWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat']\r\n\r\nconst months = [\r\n    'Jan',\r\n    'Feb',\r\n    'Mar',\r\n    'Apr',\r\n    'May',\r\n    'Jun',\r\n    'Jul',\r\n    'Aug',\r\n    'Sep',\r\n    'Oct',\r\n    'Nov',\r\n    'Dec',\r\n]\r\n\r\nconst getCurrentDate = (date) => {\r\n    return new Date(date)\r\n}\r\n\r\nconst getFormatedTime = (date) => {\r\n    const currentDate = getCurrentDate(date)\r\n    const getHours = currentDate.getHours()\r\n    const getMinutes =\r\n        currentDate.getMinutes().toString().length < 2\r\n            ? `0${currentDate.getMinutes()}`\r\n            : currentDate.getMinutes()\r\n    const getTimeOfTheDay = getHours < 12 ? 'am' : 'pm'\r\n    const time = `${getHours}:${getMinutes} ${getTimeOfTheDay}`\r\n    return time\r\n}\r\n\r\nconst getTimeOfTheDay = () => {\r\n    var timeOfTheDay\r\n    const currentDay = new Date().getHours()\r\n    if (currentDay < 12) {\r\n        timeOfTheDay = 'Good morning'\r\n    } else if (currentDay <= 15) {\r\n        timeOfTheDay = 'Good afternoon'\r\n    } else {\r\n        timeOfTheDay = 'Good evening'\r\n    }\r\n    return timeOfTheDay\r\n}\r\nconst getFormatedDate = (date) => {\r\n    const currentDate = getCurrentDate(date)\r\n    const day = currentDate.getDay()\r\n    const getDate = currentDate.getDate()\r\n    const month = currentDate.getMonth()\r\n    const year = currentDate.getFullYear()\r\n\r\n    const formatedDay = `${daysOfTheWeek[day]} ${getDate} ${months[month]}, ${year}`\r\n    return formatedDay\r\n}\r\nexport { getFormatedDate, getFormatedTime, getTimeOfTheDay }\r\n","const formatMoney = (amount = 0) => {\r\n    const newAmount = typeof amount === 'string' ? +amount : amount\r\n    const money = newAmount.toFixed(2)\r\n    return `₦ ${money}`\r\n}\r\nconst sumAmount = (transactions) => {\r\n    return transactions.reduce((a, b) => +a + +b.amount || 0, 0)\r\n}\r\n\r\nconst calculateAllDebit = (transactions = []) => {\r\n    const allDebits = transactions.filter(\r\n        (data) => data.transaction_type === 'debit'\r\n    )\r\n    const totalDebits = sumAmount(allDebits)\r\n\r\n    return formatMoney(totalDebits)\r\n}\r\n\r\nexport { formatMoney, calculateAllDebit }\r\n","import React, { useEffect, useState } from 'react'\r\nimport { connect, useSelector } from 'react-redux'\r\nimport { transactionHistory, getBalance } from '../../services/transactions'\r\nimport { Container, Col, Row, Table } from 'reactstrap'\r\nimport {\r\n    updateTransactionHistory,\r\n    toggleDisplay,\r\n} from '../../services/appstore/actions/actions'\r\nimport {\r\n    getFormatedDate,\r\n    calculateAllDebit,\r\n    formatMoney,\r\n    getFormatedTime,\r\n    getTimeOfTheDay,\r\n} from '../../utils'\r\nimport {\r\n    Autorenew,\r\n    Search,\r\n    Visibility,\r\n    VisibilityOff,\r\n} from '@material-ui/icons'\r\nimport styled from 'styled-components'\r\nimport Loader from 'react-loader-spinner'\r\n\r\nconst AccountCard = styled.div`\r\n    height: 150px;\r\n    width: 100%;\r\n    border-radius: 10px;\r\n    background: #0d3153;\r\n    background-image: url(${(props) => props.img});\r\n    transition: all ease 0.3s;\r\n`\r\n\r\nexport const Dashbody = styled.div`\r\n    overflow: hidden;\r\n    background: #0f0f0fe5;\r\n`\r\nconst Inputdiv = styled.div`\r\n    width: 230px;\r\n    background: #0f0f0f73;\r\n    height: 44px;\r\n    padding-right: 10px;\r\n    padding-left: 10px;\r\n    border-radius: 5px;\r\n`\r\nconst Input = styled.input`\r\n    border: none;\r\n    outline: none;\r\n    height: 100%;\r\n    background: transparent;\r\n    color: white;\r\n`\r\nconst DashbodyCard = styled.div`\r\n    width: 100%;\r\n    background: #000000;\r\n    border-radius: 10px;\r\n    height: 100%;\r\n    max-height: 530px;\r\n    overflow-y: scroll;\r\n    ::-webkit-scrollbar {\r\n        display: none;\r\n    }\r\n    -ms-overflow-style: none;\r\n    scrollbar-width: none;\r\n`\r\n\r\nexport const Type = styled.span`\r\n    color: ${(props) => props.color};\r\n    font-size: ${(props) => props.size}px;\r\n`\r\n\r\nconst Text = styled.h5`\r\n    color: white;\r\n    font-weight: 550;\r\n`\r\n\r\nconst Dashboard = (props) => {\r\n    const [state, setState] = useState({\r\n        toggleTransferModal: false,\r\n        balance: 0,\r\n        displayBal: true,\r\n        balanceLoading: false,\r\n    })\r\n    const data = useSelector((state) => state.user)\r\n\r\n    const style = {\r\n        cursor: 'pointer',\r\n    }\r\n\r\n    const pageBalance = async () => {\r\n        const { accountNumber } = data.signIn.payLoad\r\n        setState({\r\n            balanceLoading: true,\r\n        })\r\n        try {\r\n            const balance = await getBalance(accountNumber)\r\n            await transactionHistory(\r\n                accountNumber,\r\n                props.updateTransactionHistory\r\n            )\r\n            setState({\r\n                balance: balance,\r\n                balanceLoading: false,\r\n            })\r\n        } catch (error) {\r\n            setState({\r\n                balanceLoading: false,\r\n            })\r\n            throw error\r\n        }\r\n    }\r\n\r\n    const toggleVisibility = () => {\r\n        setState({ ...state, displayBal: !state.displayBal })\r\n        props.toggleDisplay(state.displayBal)\r\n    }\r\n\r\n    const renderTransactions = () => {\r\n        const { transactions } = data\r\n        return transactions.slice(0, 4).map((transaction, i) => {\r\n            const {\r\n                transaction_id,\r\n                amount,\r\n                transaction_date,\r\n                transaction_type,\r\n            } = transaction\r\n\r\n            const formatDay = getFormatedDate(transaction_date)\r\n            const formatTime = getFormatedTime(transaction_date)\r\n            return (\r\n                <tr key={i}>\r\n                    <td>{transaction_id}</td>\r\n                    <td\r\n                        style={{\r\n                            color: `${\r\n                                transaction_type === 'credit' ? 'green' : 'red'\r\n                            }`,\r\n                            fontWeight: 600,\r\n                        }}\r\n                    >\r\n                        {formatMoney(amount)}\r\n                    </td>\r\n                    <td\r\n                        style={{\r\n                            color: `${\r\n                                transaction_type === 'credit' ? 'green' : 'red'\r\n                            }`,\r\n                            fontWeight: 600,\r\n                        }}\r\n                    >\r\n                        {transaction_type}\r\n                    </td>\r\n                    <td>{`${formatDay} ${formatTime}`}</td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const { accountNumber } = data.signIn.payLoad\r\n            setState({\r\n                balanceLoading: true,\r\n            })\r\n            try {\r\n                await transactionHistory(\r\n                    accountNumber,\r\n                    props.updateTransactionHistory\r\n                )\r\n                setState({\r\n                    balanceLoading: false,\r\n                })\r\n            } catch (error) {\r\n                throw error\r\n            }\r\n        }\r\n        fetchData()\r\n    }, [data.signIn.payLoad, props.updateTransactionHistory])\r\n\r\n    return (\r\n        <Col\r\n            className=\"p-0 m-0\"\r\n            style={{\r\n                height: '100vh',\r\n                position: 'relative',\r\n                top: 0,\r\n                left: 0,\r\n                bottom: 0,\r\n                right: 0,\r\n            }}\r\n        >\r\n            {/* <Modal isOpen centered>\r\n                <div\r\n                    className=\"d-flex justify-content-between align-items-center pl-2 pr-2\"\r\n                    style={{\r\n                        height: '60px',\r\n                        width: '100%',\r\n                        backgroundColor: 'red',\r\n                    }}\r\n                >\r\n                    <h1>a</h1>\r\n                    <h1>b</h1>\r\n                </div>\r\n                <ModalBody>\r\n                    <h1>Hello world</h1>\r\n                </ModalBody>\r\n            </Modal> */}\r\n            <Row>\r\n                <Col lg={12}>\r\n                    <Col>\r\n                        <Row className=\"d-flex justify-content-between pt-4 align-items-center\">\r\n                            <Col>\r\n                                <Type\r\n                                    size=\"25\"\r\n                                    className=\"font-weight-bold mobile_pl\"\r\n                                    color=\"white\"\r\n                                >\r\n                                    {`Hello ${\r\n                                        data.signIn.payLoad.firstName\r\n                                    }, ${getTimeOfTheDay()}.`}\r\n                                </Type>\r\n                            </Col>\r\n                            <Col className=\"hide  justify-content-end\">\r\n                                <Inputdiv className=\"d-flex justify-content-between align-items-center\">\r\n                                    <Search />\r\n                                    <Input placeholder=\"Find something\" />\r\n                                </Inputdiv>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <DashbodyCard className=\"pb-3 pt-3 mt-5\">\r\n                        <Container className=\"pr-4 pl-4\">\r\n                            <Row className=\"pt-3\">\r\n                                <Col lg={4}>\r\n                                    <AccountCard\r\n                                        style={{\r\n                                            background: '#4004af',\r\n                                            color: 'white',\r\n                                        }}\r\n                                    >\r\n                                        <Container>\r\n                                            <div className=\"d-flex justify-content-end pt-2 align-items-center\">\r\n                                                <Autorenew\r\n                                                    style={style}\r\n                                                    onClick={() =>\r\n                                                        pageBalance()\r\n                                                    }\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"d-flex justify-content-between\">\r\n                                                {props.balanceDisplay ? (\r\n                                                    <Visibility\r\n                                                        onClick={() =>\r\n                                                            toggleVisibility()\r\n                                                        }\r\n                                                        style={{\r\n                                                            position:\r\n                                                                'absolute',\r\n                                                            top: '70%',\r\n                                                        }}\r\n                                                    />\r\n                                                ) : (\r\n                                                    <VisibilityOff\r\n                                                        onClick={() =>\r\n                                                            toggleVisibility()\r\n                                                        }\r\n                                                        style={{\r\n                                                            position:\r\n                                                                'absolute',\r\n                                                            top: '70%',\r\n                                                        }}\r\n                                                    />\r\n                                                )}\r\n\r\n                                                <Type\r\n                                                    size=\"24\"\r\n                                                    style={{\r\n                                                        position: 'absolute',\r\n                                                        top: '65%',\r\n                                                        right: '10%',\r\n                                                        fontWeight: 600,\r\n                                                        color: `${\r\n                                                            state.balance < 100\r\n                                                                ? 'red'\r\n                                                                : 'white'\r\n                                                        }`,\r\n                                                    }}\r\n                                                >\r\n                                                    {state.balanceLoading ? (\r\n                                                        <Loader\r\n                                                            type=\"ThreeDots\"\r\n                                                            height={30}\r\n                                                            width={30}\r\n                                                            color=\"#ffff\"\r\n                                                        />\r\n                                                    ) : !props.balanceDisplay ? (\r\n                                                        formatMoney(\r\n                                                            data.signIn.payLoad\r\n                                                                .accountBalance\r\n                                                        )\r\n                                                    ) : (\r\n                                                        '****'\r\n                                                    )}\r\n                                                </Type>\r\n                                            </div>\r\n                                        </Container>\r\n                                    </AccountCard>\r\n                                </Col>\r\n                                <Col lg={4}>\r\n                                    <AccountCard\r\n                                        style={{\r\n                                            background: '#f707eb',\r\n                                            color: 'white',\r\n                                        }}\r\n                                        className=\"pt-2 mobile_mt \"\r\n                                    >\r\n                                        <Container>\r\n                                            <Type\r\n                                                size=\"15\"\r\n                                                className=\"mt-5 font-weight-bold\"\r\n                                            >\r\n                                                Account Details\r\n                                            </Type>\r\n                                            <br />\r\n                                            <Type\r\n                                                size=\"12\"\r\n                                                style={{\r\n                                                    position: 'absolute',\r\n                                                    top: '60%',\r\n                                                    fontWeight: 550,\r\n                                                }}\r\n                                            >\r\n                                                Name:{' '}\r\n                                                {`${data.signIn.payLoad.firstName} ${data.signIn.payLoad.lastName}`}\r\n                                            </Type>\r\n                                            <br />\r\n                                            <Type\r\n                                                size=\"15\"\r\n                                                style={{\r\n                                                    position: 'absolute',\r\n                                                    top: '75%',\r\n                                                    fontWeight: 550,\r\n                                                }}\r\n                                            >\r\n                                                Account Number:\r\n                                                {\r\n                                                    data.signIn.payLoad\r\n                                                        .accountNumber\r\n                                                }\r\n                                            </Type>\r\n                                        </Container>\r\n                                    </AccountCard>\r\n                                </Col>\r\n                                <Col lg={4}>\r\n                                    <AccountCard className=\"d-flex justify-content-center align-items-center mobile_mt\">\r\n                                        <Type color=\"white\">{`you've spent ${calculateAllDebit(\r\n                                            data.transactions\r\n                                        )} so far`}</Type>\r\n                                    </AccountCard>\r\n                                </Col>\r\n                            </Row>\r\n                            <div className=\"d-flex justify-content-between pt-4\">\r\n                                <Type size=\"18\" color=\"white\">\r\n                                    Transactions\r\n                                </Type>\r\n                                <Type color=\"green\">Show all</Type>\r\n                            </div>\r\n                            <div className=\"pt-3\">\r\n                                {!!data.transactions &&\r\n                                data.transactions.length > 0 ? (\r\n                                    <Table\r\n                                        style={{ overflowY: 'scroll' }}\r\n                                        striped\r\n                                        responsive\r\n                                        borderless\r\n                                    >\r\n                                        <thead style={{ color: 'whitesmoke' }}>\r\n                                            <tr>\r\n                                                <th>Transaction ID</th>\r\n                                                <th>Amount</th>\r\n                                                <th>Type</th>\r\n                                                <th>Date/Time</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody style={{ color: 'white' }}>\r\n                                            {renderTransactions()}\r\n                                        </tbody>\r\n                                    </Table>\r\n                                ) : (\r\n                                    <div className=\"d-flex justify-content-center align-items-center mt-5 mb-5\">\r\n                                        <Text className=\"is-center\">\r\n                                            You don't have any transactions\r\n                                        </Text>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </Container>\r\n                    </DashbodyCard>\r\n                </Col>\r\n            </Row>\r\n        </Col>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    balanceDisplay: state.user.balanceDisplay,\r\n})\r\nexport default connect(mapStateToProps, {\r\n    updateTransactionHistory,\r\n    toggleDisplay,\r\n})(Dashboard)\r\n","import React from 'react'\r\nimport { Row, Col } from 'reactstrap'\r\nimport styled from 'styled-components'\r\n\r\nexport const Type = styled.span`\r\n    color: ${(props) => props.color};\r\n    font-size: ${(props) => props.size}px;\r\n`\r\nconst Wallet = () => {\r\n    return (\r\n        <Col\r\n            style={{\r\n                height: '100vh',\r\n                position: 'relative',\r\n                top: 0,\r\n                left: 0,\r\n                bottom: 0,\r\n                right: 0,\r\n            }}\r\n        >\r\n            <Row>\r\n                <Col lg={12}>\r\n                    <div className=\"d-flex pt-4 align-items-center\">\r\n                        <Type\r\n                            size=\"25\"\r\n                            className=\"font-weight-bold\"\r\n                            color=\"white\"\r\n                        >\r\n                            Wallet\r\n                        </Type>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Col>\r\n    )\r\n}\r\nexport default Wallet\r\n","import Axios from '../index'\r\n\r\nconst fetchAllNotifications = async (accountNumber) => {\r\n    try {\r\n        const resp = await Axios.get(`/notifications/${accountNumber}`)\r\n        return resp.data.message\r\n    } catch (error) {\r\n        throw error\r\n    }\r\n}\r\n\r\nconst deleteSingleNotification = async (id) => {\r\n    try {\r\n        console.log(id)\r\n    } catch (error) {\r\n        throw error\r\n    }\r\n}\r\n\r\nexport { fetchAllNotifications, deleteSingleNotification }\r\n","import React, { useState } from 'react'\r\nimport { Clear } from '@material-ui/icons'\r\nimport { Col, Modal, ModalBody } from 'reactstrap'\r\nimport propTypes from 'prop-types'\r\nimport { Pin, Button } from '../globalcomponents/index'\r\nimport Loader from 'react-loader-spinner'\r\nimport { createPin as createUserPin } from '../services/authentication'\r\n\r\nconst PinModal = (props) => {\r\n    const [createPin, setCreatePin] = useState('')\r\n    const [confirmPin, setConfirmPin] = useState('')\r\n    const [isLoading, setIsloading] = useState(false)\r\n    const [pinError, setPinError] = useState('')\r\n    const { pin, accountNumber } = props.payLoad\r\n\r\n    const handlePinCreate = async () => {\r\n        if (confirmPin !== createPin) {\r\n            setPinError('Pin must match')\r\n        } else {\r\n            setIsloading(true)\r\n            try {\r\n                await createUserPin({\r\n                    accountNumber: accountNumber.toString(),\r\n                    pin: createPin.toString(),\r\n                })\r\n                setIsloading(false)\r\n                props.toggleVisibility()\r\n            } catch (error) {\r\n                console.log(error)\r\n                setPinError(error)\r\n                setIsloading(false)\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            {!!pin ? (\r\n                <Modal\r\n                    centered\r\n                    isOpen={props.isVisible}\r\n                    toggle={props.toggleVisibility}\r\n                >\r\n                    <div className=\"ml-2 mr-2 mt-2 d-flex justify-content-end align-items-center\">\r\n                        <Button\r\n                            bg=\"none\"\r\n                            onClick={props.toggleVisibility}\r\n                            icon={() => <Clear style={{ color: 'red' }} />}\r\n                        />\r\n                    </div>\r\n                    <ModalBody>\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <span\r\n                                className=\"text-center\"\r\n                                style={{ color: 'red' }}\r\n                            >\r\n                                {props.error}\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <Pin onChange={props.onChange} />\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-center pt-5 pb-3\">\r\n                            <Button\r\n                                onClick={props.onSubmit}\r\n                                className=\"rounded-pill\"\r\n                                bg=\"#0d3153\"\r\n                                color=\"white\"\r\n                                width={150}\r\n                                height={40}\r\n                                text={\r\n                                    props.isLoading ? (\r\n                                        <Loader\r\n                                            type=\"ThreeDots\"\r\n                                            height={30}\r\n                                            width={30}\r\n                                            color=\"white\"\r\n                                        />\r\n                                    ) : (\r\n                                        'Transfer'\r\n                                    )\r\n                                }\r\n                            />\r\n                        </div>\r\n                    </ModalBody>\r\n                </Modal>\r\n            ) : (\r\n                <Modal\r\n                    centered\r\n                    isOpen={props.isVisible}\r\n                    toggle={props.toggleVisibility}\r\n                >\r\n                    <div className=\"ml-2 mr-2 mt-2 d-flex justify-content-end align-items-center\">\r\n                        <Button\r\n                            bg=\"none\"\r\n                            onClick={props.toggleVisibility}\r\n                            icon={() => <Clear style={{ color: 'red' }} />}\r\n                        />\r\n                    </div>\r\n                    <ModalBody>\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <span\r\n                                className=\"text-center\"\r\n                                style={{ color: 'red' }}\r\n                            >\r\n                                {props.error}\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <span\r\n                                className=\"text-center\"\r\n                                style={{ color: 'red' }}\r\n                            >\r\n                                {pinError}\r\n                            </span>\r\n                        </div>\r\n                        <Col lg={10} className=\"m-auto\">\r\n                            <Pin onChange={(e) => setCreatePin(e)} />\r\n                            <div className=\"mt-4 mb-2\">\r\n                                <Pin onChange={(e) => setConfirmPin(e)} />\r\n                            </div>\r\n                        </Col>\r\n\r\n                        <div className=\"d-flex justify-content-center pt-5 pb-3\">\r\n                            <Button\r\n                                onClick={handlePinCreate}\r\n                                className=\"rounded-pill\"\r\n                                bg=\"#0d3153\"\r\n                                color=\"white\"\r\n                                width={150}\r\n                                height={40}\r\n                                text={\r\n                                    isLoading ? (\r\n                                        <Loader\r\n                                            type=\"ThreeDots\"\r\n                                            height={30}\r\n                                            width={30}\r\n                                            color=\"white\"\r\n                                        />\r\n                                    ) : (\r\n                                        'create pin'\r\n                                    )\r\n                                }\r\n                            />\r\n                        </div>\r\n                    </ModalBody>\r\n                </Modal>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nPinModal.propTypes = {\r\n    isVisible: propTypes.bool.isRequired,\r\n    toggleVisibility: propTypes.func.isRequired,\r\n    onSubmit: propTypes.func,\r\n}\r\n\r\nPinModal.defaultProps = {\r\n    onSubmit: () => {},\r\n    isVisible: false,\r\n    toggleVisibility: () => {},\r\n}\r\n\r\nexport default PinModal\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Row, Col, Card } from 'reactstrap'\r\nimport styled from 'styled-components'\r\nimport { transfer } from '../../services/transactions/index'\r\nimport { TransferForm } from '../forms/index'\r\nimport { PinModal } from '../../modals'\r\n\r\nexport const Type = styled.span`\r\n    color: ${(props) => props.color};\r\n    font-size: ${(props) => props.size}px;\r\n`\r\nconst AccountCard = styled(Card)`\r\n    height: 100%;\r\n    min-height: 300px;\r\n    width: 100%;\r\n    margin-top: 100px;\r\n    margin-bottom: 50px;\r\n    border-radius: 10px;\r\n    transition: all ease 0.3s;\r\n`\r\n\r\nconst DashbodyCard = styled.div`\r\n    width: 100%;\r\n    background: #000000;\r\n    border-radius: 10px;\r\n    height: 100%;\r\n    min-height: 560px;\r\n    overflow-y: scroll;\r\n    ::-webkit-scrollbar {\r\n        display: none;\r\n    }\r\n    -ms-overflow-style: none;\r\n    scrollbar-width: none;\r\n`\r\nconst SendMoney = (props) => {\r\n    const [formLoading, setFormLoading] = useState(false)\r\n    const [error, setError] = useState('')\r\n    const [pin, setPin] = useState('')\r\n    const [pinModal, setPinModal] = useState(false)\r\n\r\n    let formikForm = useRef()\r\n\r\n    const handleSubmit = async () => {\r\n        const { accountNumber } = props.payLoad\r\n\r\n        setFormLoading(true)\r\n        setError('')\r\n        try {\r\n            await transfer({ ...formikForm.current.values }, accountNumber, pin)\r\n            setFormLoading(false)\r\n            setPinModal(false)\r\n        } catch (error) {\r\n            setError(error)\r\n            setFormLoading(false)\r\n        }\r\n    }\r\n\r\n    const toggleVisibility = () => {\r\n        setPinModal(!pinModal)\r\n    }\r\n\r\n    useEffect(() => {}, [formikForm])\r\n\r\n    return (\r\n        <Col\r\n            style={{\r\n                height: '100vh',\r\n                position: 'relative',\r\n                top: 0,\r\n                left: 0,\r\n                bottom: 0,\r\n                right: 0,\r\n            }}\r\n        >\r\n            <PinModal\r\n                centered\r\n                isVisible={pinModal}\r\n                error={error}\r\n                isLoading={formLoading}\r\n                toggleVisibility={() => {\r\n                    toggleVisibility()\r\n                    setError('')\r\n                }}\r\n                payLoad={props.payLoad}\r\n                onChange={(e) => setPin(e)}\r\n                onSubmit={() => handleSubmit()}\r\n            />\r\n            <Row>\r\n                <Col lg={12}>\r\n                    <div className=\"d-flex pt-4 align-items-center\">\r\n                        <Type\r\n                            size=\"25\"\r\n                            className=\"font-weight-bold mobile_pl\"\r\n                            color=\"white\"\r\n                        >\r\n                            Send money\r\n                        </Type>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <DashbodyCard className=\"mt-5\">\r\n                <Col\r\n                    xl={6}\r\n                    className=\"d-flex justify-content-center align-items-center m-auto\"\r\n                >\r\n                    <AccountCard className=\"pr-3 pl-3 pt-3\">\r\n                        <TransferForm\r\n                            innerRef={formikForm}\r\n                            formSubmit={toggleVisibility}\r\n                            error={error}\r\n                            balance={props.payLoad.accountBalance}\r\n                        />\r\n                    </AccountCard>\r\n                </Col>\r\n            </DashbodyCard>\r\n        </Col>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    payLoad: state.user.signIn.payLoad,\r\n    balanceDisplay: state.user.balanceDisplay,\r\n})\r\nexport default connect(mapStateToProps, {})(SendMoney)\r\n","import React from 'react'\r\nimport { Row, Col } from 'reactstrap'\r\nimport styled from 'styled-components'\r\n\r\nexport const Type = styled.span`\r\n    color: ${(props) => props.color};\r\n    font-size: ${(props) => props.size}px;\r\n`\r\nconst AccountCard = styled.div`\r\n    height: 150px;\r\n    width: 100%;\r\n    border-radius: 10px;\r\n\r\n    background: #0d3153;\r\n    transition: all ease 0.3s;\r\n`\r\n\r\nconst DashbodyCard = styled.div`\r\n    width: 100%;\r\n    background: #000000;\r\n    border-radius: 10px;\r\n    height: 100%;\r\n    max-height: 530px;\r\n    overflow-y: scroll;\r\n    ::-webkit-scrollbar {\r\n        display: none;\r\n    }\r\n    -ms-overflow-style: none;\r\n    scrollbar-width: none;\r\n`\r\nconst Profile = () => {\r\n    return (\r\n        // <div style={{ height: '100%', maxheight: '530px' }}>\r\n        <Col\r\n            style={{\r\n                height: '100vh',\r\n                position: 'relative',\r\n                top: 0,\r\n                left: 0,\r\n                bottom: 0,\r\n                right: 0,\r\n            }}\r\n        >\r\n            <Row>\r\n                <Col lg={12}>\r\n                    <div className=\"d-flex pt-4 align-items-center\">\r\n                        <Type\r\n                            size=\"25\"\r\n                            className=\"font-weight-bold\"\r\n                            color=\"white\"\r\n                        >\r\n                            Profile\r\n                        </Type>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <DashbodyCard>\r\n                <Row>\r\n                    <Col xl={4}>\r\n                        <AccountCard>\r\n                            <p>hello</p>\r\n                        </AccountCard>\r\n                    </Col>\r\n                    <Col xl={4}>\r\n                        <AccountCard />\r\n                    </Col>\r\n                    <Col xl={4}>\r\n                        <AccountCard />\r\n                    </Col>\r\n                </Row>\r\n            </DashbodyCard>\r\n        </Col>\r\n        // </div>\r\n    )\r\n}\r\nexport default Profile\r\n","import React from 'react'\r\nimport { Row, Col } from 'reactstrap'\r\nimport styled from 'styled-components'\r\n\r\nexport const Type = styled.span`\r\n    color: ${(props) => props.color};\r\n    font-size: ${(props) => props.size}px;\r\n`\r\nconst AccountCard = styled.div`\r\n    height: 150px;\r\n    width: 100%;\r\n    border-radius: 10px;\r\n\r\n    background: #0d3153;\r\n    transition: all ease 0.3s;\r\n`\r\n\r\nconst DashbodyCard = styled.div`\r\n    width: 100%;\r\n    background: #000000;\r\n    border-radius: 10px;\r\n    height: 100%;\r\n    max-height: 530px;\r\n    overflow-y: scroll;\r\n    ::-webkit-scrollbar {\r\n        display: none;\r\n    }\r\n    -ms-overflow-style: none;\r\n    scrollbar-width: none;\r\n`\r\nconst Settings = () => {\r\n    return (\r\n        <Col\r\n            style={{\r\n                height: '100vh',\r\n                position: 'relative',\r\n                top: 0,\r\n                left: 0,\r\n                bottom: 0,\r\n                right: 0,\r\n            }}\r\n        >\r\n            <Row>\r\n                <Col lg={12}>\r\n                    <div className=\"d-flex pt-4 align-items-center\">\r\n                        <Type\r\n                            size=\"25\"\r\n                            className=\"font-weight-bold\"\r\n                            color=\"white\"\r\n                        >\r\n                            Settings\r\n                        </Type>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <DashbodyCard>\r\n                <Row>\r\n                    <Col xl={4}>\r\n                        <AccountCard>\r\n                            <p>hello</p>\r\n                        </AccountCard>\r\n                    </Col>\r\n                    <Col xl={4}>\r\n                        <AccountCard />\r\n                    </Col>\r\n                    <Col xl={4}>\r\n                        <AccountCard />\r\n                    </Col>\r\n                </Row>\r\n            </DashbodyCard>\r\n        </Col>\r\n        // </div>\r\n    )\r\n}\r\nexport default Settings\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport SideBar from './sidebar'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport {\r\n    Row,\r\n    Col,\r\n    Container,\r\n    Dropdown,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n    DropdownToggle,\r\n} from 'reactstrap'\r\nimport Dashboard, { Dashbody } from './dashboard'\r\nimport { NotificationsNone } from '@material-ui/icons'\r\nimport Wallet from './wallet'\r\nimport { deleteSingleNotification } from '../../services/notifications'\r\n\r\nimport SendMoney from './sendmoney'\r\nimport Profile from './profile'\r\nimport Settings from './settings'\r\n\r\nconst NotificationDiv = styled.div`\r\n    height: 44px;\r\n    width: 44px;\r\n    background: #0f0f0f73;\r\n    border-radius: 5px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    cursor: pointer;\r\n`\r\n\r\nconst Badge = styled.div`\r\n    height: 22px;\r\n    width: 22px;\r\n    background: red;\r\n    top: 0;\r\n    left: 30;\r\n    right: 0;\r\n    position: absolute;\r\n`\r\nconst Menu = styled(DropdownMenu)`\r\n    background: #000000;\r\n    width: 330px;\r\n    max-height: 200px;\r\n    overflow-y: scroll;\r\n    ::-webkit-scrollbar {\r\n        display: none;\r\n    }\r\n    -ms-overflow-style: none;\r\n    scrollbar-width: none;\r\n    overflow-x: hidden;\r\n    &:hover {\r\n        background: #000000;\r\n    }\r\n`\r\nconst Item = styled(DropdownItem)`\r\n    color: white;\r\n    width: 100%;\r\n    font-size: 14px;\r\n    &:hover {\r\n        background: #0f0f0fc7;\r\n        color: white;\r\n    }\r\n`\r\n\r\nconst Main = () => {\r\n    const [showNotification, setNotification] = useState(false)\r\n    const [userNotification] = useState({\r\n        notifications: [],\r\n    })\r\n\r\n    const toggleNotification = () => {\r\n        setNotification((prevState) => !prevState)\r\n    }\r\n\r\n    const deleteNotification = async (id) => {\r\n        await deleteSingleNotification(id)\r\n    }\r\n\r\n    return (\r\n        <Dashbody className=\"pb-4\">\r\n            <Col className=\"p-0 m-0\">\r\n                <Row>\r\n                    <Col xl={2}>\r\n                        <SideBar />\r\n                    </Col>\r\n\r\n                    <Switch>\r\n                        <Route exact path=\"/dashboard\" component={Dashboard} />\r\n                        <Route\r\n                            exact\r\n                            path=\"/dashboard/wallet\"\r\n                            component={Wallet}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/dashboard/analysis\"\r\n                            component={SendMoney}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/dashboard/profile\"\r\n                            component={Profile}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/dashboard/Settings\"\r\n                            component={Settings}\r\n                        />\r\n                    </Switch>\r\n                    <Col className=\"hide\" xl={1}>\r\n                        <Container>\r\n                            <div className=\"d-flex justify-content-between align-items-center pl-2 pr-3 pt-4\">\r\n                                <Dropdown\r\n                                    isOpen={showNotification}\r\n                                    toggle={toggleNotification}\r\n                                    className=\"p-0\"\r\n                                >\r\n                                    <DropdownToggle\r\n                                        style={{\r\n                                            background: 'none',\r\n                                            border: 'none',\r\n                                            outline: 'none',\r\n                                        }}\r\n                                        className=\"p-0 m-0\"\r\n                                    >\r\n                                        <NotificationDiv>\r\n                                            <Badge className=\"rounded-circle d-flex justify-content-center align-items-center\">\r\n                                                {\r\n                                                    userNotification\r\n                                                        .notifications.length\r\n                                                }\r\n                                            </Badge>\r\n                                            <NotificationsNone\r\n                                                fontSize=\"small\"\r\n                                                style={{ color: 'white' }}\r\n                                            />\r\n                                        </NotificationDiv>\r\n                                    </DropdownToggle>\r\n                                    <Menu right>\r\n                                        {!userNotification.notifications ? (\r\n                                            <Item\r\n                                                className=\"d-flex justify-content-center align-items-center\"\r\n                                                style={{ height: '40px' }}\r\n                                            >\r\n                                                You don't have any notification\r\n                                            </Item>\r\n                                        ) : (\r\n                                            userNotification.notifications.map(\r\n                                                (data, idx) => (\r\n                                                    <Item\r\n                                                        style={{\r\n                                                            borderBottom:\r\n                                                                '1px solid white',\r\n                                                            height: '50px',\r\n                                                        }}\r\n                                                        key={idx}\r\n                                                        onClick={() =>\r\n                                                            deleteNotification(\r\n                                                                data._id\r\n                                                            )\r\n                                                        }\r\n                                                    >\r\n                                                        {data.notification_text}\r\n                                                    </Item>\r\n                                                )\r\n                                            )\r\n                                        )}\r\n                                    </Menu>\r\n                                </Dropdown>\r\n                            </div>\r\n                        </Container>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n        </Dashbody>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import React, { useEffect } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../services/authentication'\r\nimport { user_login } from '../../services/appstore/actions/actions'\r\n\r\nconst SignOut = (props) => {\r\n    useEffect(() => {\r\n        const { user_login } = props\r\n        console.log(props)\r\n        try {\r\n            signOut(user_login)\r\n        } catch (error) {\r\n            throw error\r\n        }\r\n    }, [props])\r\n\r\n    return (\r\n        <div>\r\n            <Redirect to=\"/signin\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, { user_login })(SignOut)\r\n","import React from 'react'\r\nimport { Col } from 'reactstrap'\r\nimport { ForgotPasswordForm } from '../forms/index'\r\nimport { Text } from '../signin/signin'\r\n\r\nconst ForgotPassword = () => {\r\n    return (\r\n        <Col style={{ height: '100vh' }}>\r\n            <Col\r\n                style={{ height: '100%' }}\r\n                className=\"d-flex justify-content-center align-items-center\"\r\n            >\r\n                <Col lg={4} xs={12}>\r\n                    <Text className=\"text-center\">Forgot password</Text>\r\n                    <Text style={{ fontSize: '14px' }} className=\"text-center\">\r\n                        we heard you Forgot your password, not to worry you can\r\n                        create another one {''}\r\n                        <span\r\n                            style={{ fontSize: '16px' }}\r\n                            role=\"img\"\r\n                            aria-label=\"smiley\"\r\n                        >\r\n                            😔\r\n                        </span>\r\n                    </Text>\r\n                    <Text\r\n                        style={{ fontSize: '14px' }}\r\n                        className=\"text-center mb-3\"\r\n                    >\r\n                        please ensure your email is valid\r\n                    </Text>\r\n                    <ForgotPasswordForm />\r\n                </Col>\r\n            </Col>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default ForgotPassword\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\r\n    const isSignedIn = useSelector((state) => state.user.signIn.isSignedIn)\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) =>\r\n                isSignedIn ? (\r\n                    <Component {...props} />\r\n                ) : (\r\n                    <Redirect to=\"/signin\" />\r\n                )\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default ProtectedRoute\r\n","import React from 'react'\r\nimport {\r\n    Dashboard,\r\n    Homepage,\r\n    Register,\r\n    SignOut,\r\n    Signin,\r\n    ForgotPassword,\r\n} from './allpages'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\r\nimport ProtectedroutePages from './protectedroute.pages'\r\n\r\nconst routes = [\r\n    {\r\n        path: '/register',\r\n        component: Register,\r\n        public: true,\r\n    },\r\n    {\r\n        path: '/signin',\r\n        component: Signin,\r\n        public: true,\r\n    },\r\n    {\r\n        path: '/dashboard',\r\n        component: Dashboard,\r\n        public: false,\r\n    },\r\n    {\r\n        path: '/signout',\r\n        component: SignOut,\r\n        public: true,\r\n    },\r\n    {\r\n        path: '/forgotpassword',\r\n        component: ForgotPassword,\r\n        public: true,\r\n    },\r\n]\r\n\r\nconst Main = () => {\r\n    return (\r\n        <TransitionGroup>\r\n            <CSSTransition timeout={3000}>\r\n                <BrowserRouter basename=\"/Afrobank\">\r\n                    <Switch>\r\n                        {routes.map((data, i) =>\r\n                            data.public ? (\r\n                                <Route\r\n                                    key={i}\r\n                                    path={data.path}\r\n                                    component={data.component}\r\n                                />\r\n                            ) : (\r\n                                <ProtectedroutePages\r\n                                    key={i}\r\n                                    path={data.path}\r\n                                    component={data.component}\r\n                                />\r\n                            )\r\n                        )}\r\n                        <Route path=\"/\" component={Homepage} />\r\n                    </Switch>\r\n                </BrowserRouter>\r\n            </CSSTransition>\r\n        </TransitionGroup>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import React from 'react'\r\nimport Main from './pages'\r\nimport { Provider } from 'react-redux'\r\nimport appStore from './services/appstore'\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './index.css'\r\n\r\nfunction App() {\r\n    return (\r\n        <Provider store={appStore().store}>\r\n            <PersistGate loading={null} persistor={appStore().persiststore}>\r\n                <Main />\r\n            </PersistGate>\r\n        </Provider>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <App />\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}