{"version":3,"sources":["components/homepage/index.js","components/forms/validation/index.js","globalcomponents/pin.js","globalcomponents/button.js","globalcomponents/input.js","components/forms/index.js","services/index.js","utils/error.js","services/authentication/index.js","services/appstore/actions/actions.js","services/appstore/actions/index.js","components/signin/signin.js","components/register/index.js","components/dashboard/sidebar.js","services/transactions/index.js","utils/date.js","utils/money.js","components/dashboard/dashboard.js","components/dashboard/wallet.js","services/notifications/index.js","modals/pinModal.js","components/dashboard/sendmoney.js","components/dashboard/profile.js","components/dashboard/settings.js","components/dashboard/index.js","components/sigout/signOut.js","pages/protectedroute.pages.js","pages/index.js","services/appstore/reducers/reducer.js","services/appstore/reducers/index.js","services/appstore/index.js","App.jsx","serviceWorker.js","index.jsx"],"names":["Nav","styled","div","HomePage","style","height","Container","Col","Row","className","xl","to","value","loginSchema","yup","shape","email","required","password","transferSchema","recipient","amount","signUpSchema","firstName","surName","lastName","matches","gender","phoneNumber","Pin","props","secret","type","inputStyle","fontWeight","color","border","marginLeft","borderBottom","margin","width","onChange","length","CustomBtn","button","bg","Button","IconComponent","icon","text","StyleField","Input","CustomInputs","Label","label","children","ErrorText","p","Error","makeStyles","marginBottom","outline","classes","TextField","variant","LoginForm","initialValues","validationSchema","validateOnBlur","validateOnChange","onSubmit","e","handleSubmit","errors","handleChange","values","Form","error","name","autoComplete","fontSize","formLoading","TransferForm","formSubmit","isValidBalance","balance","Box","component","sx","maxWidth","disabled","SignUpForm","regError","axios","create","baseURL","process","extractApiError","response","data","message","registerUser","payload","a","Axios","post","userLogin","payLoad","user_login","resp","isSignedIn","dispatch","Text","btn","connect","useState","state","setState","history","push","lg","xs","Facebook","Twitter","Instagram","position","top","bottom","backgroundColor","opacity","textDecoration","Register","overflow","this","React","Component","Type","span","size","Sidelink","Styled","activeClassName","dashboardRoutes","path","Payment","AccountBalance","Person","SideBar","marginTop","map","idx","key","exact","ExitToApp","transfer","sender","pin","body","toString","transactionHistory","accountNumber","updateTransactionHistory","get","getBalance","daysOfTheWeek","months","getCurrentDate","date","Date","formatMoney","money","toFixed","sumAmount","transactions","reduce","b","AccountCard","img","Dashbody","Inputdiv","input","DashbodyCard","balanceDisplay","user","toggleDisplay","display","toggleTransferModal","displayBal","balanceLoading","useSelector","pageBalance","signIn","toggleVisibility","useEffect","fetchData","currentDay","getHours","getTimeOfTheDay","Search","placeholder","background","Autorenew","cursor","onClick","Visibility","VisibilityOff","right","allDebits","filter","transaction_type","totalDebits","calculateAllDebit","Table","overflowY","striped","responsive","borderless","slice","transaction","i","transaction_id","transaction_date","formatDay","currentDate","day","getDay","getDate","month","getMonth","year","getFullYear","getFormatedDate","formatTime","getMinutes","getFormatedTime","Wallet","fetchAllNotifications","deleteSingleNotification","id","console","log","PinModal","Modal","isOpen","isVisible","toggle","Clear","ModalBody","ArrowForward","defaultProps","Card","setFormLoading","setError","setBalance","setPin","pinModal","setPinModal","fetchBalance","maxheight","Profile","Settings","NotificationDiv","Badge","Menu","DropdownMenu","Item","DropdownItem","Main","showNotification","setNotification","notifications","userNotification","setUsernotification","deleteNotification","getNotifications","Dashboard","SendMoney","Dropdown","prevState","DropdownToggle","NotificationsNone","_id","notification_text","localStorage","clear","signOut","ProtectedRoute","rest","render","routes","public","Signin","SignOut","TransitionGroup","CSSTransition","basename","Homepage","intState","userReg","isRegistered","userPinReset","isPinReset","combineReducers","action","config","storage","whitelist","middleWare","thunk","persistedReducer","persistReducer","appStore","store","createStore","applyMiddleware","persiststore","persistStore","ReactGA","initialize","App","pageview","window","location","pathname","search","loading","persistor","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","document","getElementById","URL","href","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.28696200.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Col, Container, Row } from 'reactstrap'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\nimport QRCode from 'react-qr-code'\r\n\r\nconst Nav = styled.div`\r\n    height: 50px;\r\n`\r\nconst HomePage = () => {\r\n    return (\r\n        <div style={{ height: 100 }}>\r\n            <Container>\r\n                <Col>\r\n                    <Row>\r\n                        <Nav className=\"d-flex justify-content-between align-items-center\">\r\n                            <Col xl={6}></Col>\r\n                            <Col\r\n                                xl={6}\r\n                                className=\"d-flex justify-content-between\"\r\n                            >\r\n                                <Link to=\"/signin\">sign in</Link>\r\n                                <Link to=\"/register\">register</Link>\r\n                            </Col>\r\n                        </Nav>\r\n                    </Row>\r\n                </Col>\r\n                <Col>\r\n                    <QRCode value=\"Akinola\" />\r\n                </Col>\r\n            </Container>\r\n            {/* <TransferModal /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage\r\n","import * as yup from 'yup'\r\n\r\nconst loginSchema = yup.object().shape({\r\n    email: yup.string().email().required('email is required'),\r\n    password: yup.string().required('password is required'),\r\n})\r\n\r\nconst transferSchema = yup.object().shape({\r\n    recipient: yup.number().required('recipient account number is required'),\r\n    amount: yup.number().required(),\r\n})\r\n\r\nconst signUpSchema = yup.object().shape({\r\n    firstName: yup.string().required(),\r\n    surName: yup.string().required(),\r\n    lastName: yup.string().required(),\r\n    email: yup.string().required().email(),\r\n    password: yup\r\n        .string()\r\n        .required('*password is required')\r\n        .matches(\r\n            /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})/,\r\n            'min length 8 Characters, One Uppercase, One Lowercase, One Number and One Special Character'\r\n        ),\r\n    gender: yup.string().required('*gender is required'),\r\n    phoneNumber: yup.string().required(),\r\n})\r\n\r\nexport { loginSchema, transferSchema, signUpSchema }\r\n","import React from 'react'\r\nimport PinInput from 'react-pin-input'\r\nimport propTypes from 'prop-types'\r\n\r\nconst Pin = (props) => {\r\n    return (\r\n        <PinInput\r\n            secret\r\n            type=\"numeric\"\r\n            inputStyle={{\r\n                fontWeight: 'bold',\r\n                color: 'black',\r\n                height: '40px',\r\n                border: 'none',\r\n                marginLeft: '25px',\r\n                borderBottom: '1px solid black',\r\n                margin: 'auto',\r\n                width: '60px',\r\n            }}\r\n            onChange={props.onChange}\r\n            length={4}\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n\r\nPin.propTypes = {\r\n    onChange: propTypes.func.isRequired,\r\n}\r\n\r\nexport default Pin\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nconst CustomBtn = styled.button`\r\n    border: none;\r\n    outline: none;\r\n    ${(props) => !!props.bg && `background: ${props.bg};`}\r\n    ${(props) => !!props.width && `width: ${props.width}px;`}\r\n    ${(props) => !!props.height && `height: ${props.height}px;`}\r\n    ${(props) => !!props.color && `color: ${props.color};`}\r\n`\r\n\r\nconst Button = (props) => {\r\n    const IconComponent = typeof props.icon === 'function' && props.icon\r\n    return (\r\n        <CustomBtn\r\n            className=\"d-flex justify-content-around align-items-center\"\r\n            {...props}\r\n        >\r\n            {!!props.text && props.text}\r\n            {!!props.icon && <IconComponent />}\r\n        </CustomBtn>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport { Input, Label } from 'reactstrap'\r\nimport styled from 'styled-components'\r\n\r\nconst StyleField = styled(Input)`\r\n    height: 54px;\r\n    transition: all ease 0.3s;\r\n`\r\n\r\nconst CustomInputs = (props) => {\r\n    return (\r\n        <>\r\n            <Label>{props.label}</Label>\r\n            {props.type === 'select' ? (\r\n                <StyleField {...props}>{props.children}</StyleField>\r\n            ) : (\r\n                <StyleField {...props} />\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CustomInputs\r\n","import { Formik } from 'formik'\r\nimport React from 'react'\r\nimport { TextField, Box, makeStyles } from '@material-ui/core'\r\nimport { loginSchema, transferSchema, signUpSchema } from './validation'\r\nimport styled from 'styled-components'\r\nimport Loader from 'react-loader-spinner'\r\nimport propTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form } from 'reactstrap'\r\nimport { Button as Btn, CustomInputs } from '../../globalcomponents'\r\n\r\nconst ErrorText = styled.p`\r\n    color: red;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n`\r\nconst Error = styled.p`\r\n    color: red;\r\n    font-weight: 600;\r\n    text-align: start;\r\n    font-size: 12px;\r\n`\r\n\r\nconst style = makeStyles(() => ({\r\n    Input: {\r\n        height: 40,\r\n        width: '100%',\r\n        marginBottom: 40,\r\n        outline: 'none',\r\n    },\r\n}))\r\n\r\nconst Input = (props) => {\r\n    const classes = style()\r\n    return <TextField className={classes.Input} variant=\"outlined\" {...props} />\r\n}\r\n\r\nconst Button = (props) => {\r\n    return <Btn bg=\"#065340\" color=\"white\" width={250} height={50} {...props} />\r\n}\r\nconst LoginForm = (props) => {\r\n    const initialValues = {\r\n        email: '',\r\n        password: '',\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={loginSchema}\r\n            validateOnBlur={false}\r\n            validateOnChange={true}\r\n            onSubmit={(e) => props.handleSubmit(e)}\r\n        >\r\n            {({ errors, handleChange, values, handleSubmit }) => {\r\n                return (\r\n                    <Form onSubmit={handleSubmit} style={{ width: '100%' }}>\r\n                        {!!props.error && (\r\n                            <p style={{ color: 'red' }}>{props.error}</p>\r\n                        )}\r\n                        <div>\r\n                            <CustomInputs\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                onChange={handleChange}\r\n                                value={values.email}\r\n                                label=\"Email\"\r\n                                autoComplete=\"false\"\r\n                                style={{\r\n                                    border: `2px solid ${\r\n                                        !!errors.email || !!props.error\r\n                                            ? 'red'\r\n                                            : 'green'\r\n                                    }`,\r\n                                }}\r\n                            />\r\n                            {!!errors.email && (\r\n                                <span style={{ color: 'red' }}>\r\n                                    {errors.email}\r\n                                </span>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"pt-3\">\r\n                            <CustomInputs\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                onChange={handleChange}\r\n                                label=\"Password\"\r\n                                value={values.password}\r\n                                style={{\r\n                                    border: `2px solid ${\r\n                                        !!errors.password || !!props.error\r\n                                            ? 'red'\r\n                                            : 'green'\r\n                                    }`,\r\n                                }}\r\n                                autoComplete=\"false\"\r\n                            />\r\n                            {!!errors.password && (\r\n                                <p style={{ color: 'red' }}>\r\n                                    {errors.password}\r\n                                </p>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-end align-items-center pt-3\">\r\n                            <Link\r\n                                style={{\r\n                                    color: 'grey',\r\n                                    fontWeight: 600,\r\n                                    fontSize: '18px',\r\n                                }}\r\n                                to=\"/signin\"\r\n                            >\r\n                                forgot password\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"d-flex flex-column justify-content-center align-items-center pt-4\">\r\n                            <Button\r\n                                className=\"mt-2 rounded-pill\"\r\n                                type=\"submit\"\r\n                                text={\r\n                                    props.formLoading ? (\r\n                                        <Loader\r\n                                            type=\"ThreeDots\"\r\n                                            height={30}\r\n                                            width={30}\r\n                                            color=\"white\"\r\n                                        />\r\n                                    ) : (\r\n                                        'Sign In'\r\n                                    )\r\n                                }\r\n                            />\r\n                        </div>\r\n                    </Form>\r\n                )\r\n            }}\r\n        </Formik>\r\n    )\r\n}\r\n\r\nconst TransferForm = (props) => {\r\n    const initialValues = {\r\n        recipient: '',\r\n        amount: '',\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            validateOnBlur={false}\r\n            validateOnChange={false}\r\n            initialValues={initialValues}\r\n            validationSchema={transferSchema}\r\n            onSubmit={props.formSubmit}\r\n        >\r\n            {({ errors, handleChange, handleSubmit, values }) => {\r\n                const isValidBalance = +values.amount > +props.balance\r\n                return (\r\n                    <Box\r\n                        component=\"form\"\r\n                        autoComplete=\"off\"\r\n                        sx={{\r\n                            width: 700,\r\n                            maxWidth: '100%',\r\n                        }}\r\n                        onSubmit={handleSubmit}\r\n                    >\r\n                        {!!props.error && <ErrorText>{props.error}</ErrorText>}\r\n                        <Input\r\n                            type=\"number\"\r\n                            name=\"recipient\"\r\n                            label=\"recipient\"\r\n                            onChange={handleChange}\r\n                        />{' '}\r\n                        {!!errors.recipient && (\r\n                            <Error>{errors.recipient}</Error>\r\n                        )}\r\n                        <Input\r\n                            type=\"number\"\r\n                            name=\"amount\"\r\n                            label=\"amount\"\r\n                            onChange={handleChange}\r\n                        />\r\n                        {!!errors.amount && <Error>{errors.amount}</Error>}\r\n                        <div className=\"d-flex justify-content-end align-items-center\">\r\n                            {isValidBalance && (\r\n                                <ErrorText>insufficient balance</ErrorText>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-center align-items-center\">\r\n                            <Button\r\n                                disabled={isValidBalance}\r\n                                type=\"submit\"\r\n                                color=\"white\"\r\n                                className=\"mt-3 mb-2 rounded-pill\"\r\n                            >\r\n                                {props.formLoading ? (\r\n                                    <Loader\r\n                                        type=\"ThreeDots\"\r\n                                        height={30}\r\n                                        width={30}\r\n                                        color=\"#00BFFF\"\r\n                                    />\r\n                                ) : (\r\n                                    'send'\r\n                                )}\r\n                            </Button>\r\n                        </div>\r\n                    </Box>\r\n                )\r\n            }}\r\n        </Formik>\r\n    )\r\n}\r\n\r\nconst SignUpForm = (props) => {\r\n    const initialValues = {\r\n        firstName: '',\r\n        surName: '',\r\n        lastName: '',\r\n        email: '',\r\n        gender: '',\r\n        password: '',\r\n        phoneNumber: '',\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            validationSchema={signUpSchema}\r\n            initialValues={initialValues}\r\n            validateOnBlur={false}\r\n            validateOnChange={false}\r\n            onSubmit={props.handleSubmit}\r\n        >\r\n            {({ errors, handleChange, handleSubmit, values }) => {\r\n                return (\r\n                    <Form onSubmit={handleSubmit} style={{ width: '100%' }}>\r\n                        {!!props.regError && (\r\n                            <ErrorText>{props.regError}</ErrorText>\r\n                        )}\r\n                        <div className=\"d-flex justify-content-between mb-2\">\r\n                            <div>\r\n                                <CustomInputs\r\n                                    label=\"First name\"\r\n                                    value={values.firstName}\r\n                                    type=\"text\"\r\n                                    name=\"firstName\"\r\n                                    onChange={handleChange}\r\n                                    style={{ width: '100%' }}\r\n                                />\r\n                                {!!errors.firstName && (\r\n                                    <ErrorText>{errors.firstName}</ErrorText>\r\n                                )}\r\n                            </div>\r\n                            <div>\r\n                                <CustomInputs\r\n                                    value={values.surName}\r\n                                    label=\"Surname\"\r\n                                    type=\"text\"\r\n                                    name=\"surName\"\r\n                                    onChange={handleChange}\r\n                                />\r\n                                {!!errors.surName && (\r\n                                    <ErrorText>{errors.surName}</ErrorText>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <CustomInputs\r\n                            value={values.lastName}\r\n                            label=\"Last name\"\r\n                            type=\"text\"\r\n                            name=\"lastName\"\r\n                            onChange={handleChange}\r\n                            className=\"mb-2\"\r\n                        />\r\n                        {!!errors.lastName && (\r\n                            <ErrorText>{errors.lastName}</ErrorText>\r\n                        )}\r\n\r\n                        <CustomInputs\r\n                            onChange={handleChange}\r\n                            value={values.email}\r\n                            className=\"mb-2\"\r\n                            label=\"Email\"\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                        />\r\n                        {!!errors.email && (\r\n                            <ErrorText>{errors.email}</ErrorText>\r\n                        )}\r\n                        <CustomInputs\r\n                            value={values.password}\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            onChange={handleChange}\r\n                            className=\"mb-2\"\r\n                        />\r\n                        {!!errors.password && (\r\n                            <ErrorText>{errors.password}</ErrorText>\r\n                        )}\r\n                        <CustomInputs\r\n                            type=\"text\"\r\n                            label=\"Phone number\"\r\n                            value={values.phoneNumber}\r\n                            onChange={handleChange}\r\n                            name=\"phoneNumber\"\r\n                            className=\"mb-2\"\r\n                        />\r\n                        {!!errors.phoneNumber && (\r\n                            <ErrorText>{errors.phoneNumber}</ErrorText>\r\n                        )}\r\n\r\n                        <CustomInputs\r\n                            label=\"Gender\"\r\n                            style={{\r\n                                width: '80%',\r\n                            }}\r\n                            type=\"select\"\r\n                            name=\"gender\"\r\n                            value={values.gender}\r\n                            onChange={handleChange}\r\n                            className=\"mb-2\"\r\n                        >\r\n                            <option value=\"\">select gender</option>\r\n                            <option value=\"male\">male</option>\r\n                            <option value=\"female\">female</option>\r\n                        </CustomInputs>\r\n                        {!!errors.gender && (\r\n                            <ErrorText>{errors.gender}</ErrorText>\r\n                        )}\r\n\r\n                        <div className=\"d-flex justify-content-center align-items-center mt-3\">\r\n                            <Button\r\n                                type=\"submit\"\r\n                                className=\"mt-2 rounded-pill\"\r\n                                text={\r\n                                    props.formLoading ? (\r\n                                        <Loader\r\n                                            type=\"ThreeDots\"\r\n                                            height={30}\r\n                                            width={30}\r\n                                            color=\"#00BFFF\"\r\n                                        />\r\n                                    ) : (\r\n                                        'create account'\r\n                                    )\r\n                                }\r\n                            />\r\n                        </div>\r\n                    </Form>\r\n                )\r\n            }}\r\n        </Formik>\r\n    )\r\n}\r\n\r\nLoginForm.propTypes = {\r\n    handleSubmit: propTypes.func.isRequired,\r\n    error: propTypes.string,\r\n    formLoading: propTypes.bool.isRequired,\r\n}\r\nTransferForm.propTypes = {\r\n    formSubmit: propTypes.func.isRequired,\r\n    error: propTypes.string.isRequired,\r\n    formLoading: propTypes.bool.isRequired,\r\n    balance: propTypes.any.isRequired,\r\n}\r\nexport { LoginForm, TransferForm, SignUpForm }\r\n","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: process.env.REACT_APP_BASE_URL,\r\n});\r\n","const extractApiError = (error) => {\r\n    throw error.response.data.message\r\n}\r\n\r\nexport { extractApiError }\r\n","import Axios from '../index'\r\nimport { extractApiError } from '../../utils/error'\r\n\r\nconst registerUser = async (payload) => {\r\n    try {\r\n        await Axios.post('/register', payload)\r\n    } catch (error) {\r\n        extractApiError(error)\r\n    }\r\n}\r\n\r\nconst userLogin = async (payLoad, user_login) => {\r\n    try {\r\n        const resp = await Axios.post('/login', payLoad)\r\n\r\n        user_login(resp.data.message, true)\r\n        return resp\r\n    } catch (error) {\r\n        extractApiError(error)\r\n    }\r\n}\r\n\r\nconst resetPin = async (pin) => {\r\n    const body = { pin }\r\n    try {\r\n        const resp = await Axios.post('/pinreset', body)\r\n        console.log(resp)\r\n    } catch (error) {\r\n        throw error\r\n    }\r\n}\r\n\r\nconst signOut = (userLogin) => {\r\n    try {\r\n        userLogin('', false)\r\n        localStorage.clear()\r\n    } catch (error) {\r\n        throw error\r\n    }\r\n}\r\nexport { userLogin, resetPin, registerUser, signOut }\r\n","import {\r\n    LOGIN,\r\n    pinReset,\r\n    register,\r\n    transactionHistory,\r\n    toggleBalanceDisplay,\r\n} from './index'\r\n\r\nconst user_login = (data, isSignedIn) => (dispatch) => {\r\n    dispatch({\r\n        type: LOGIN,\r\n        payload: data,\r\n        isSignedIn,\r\n    })\r\n}\r\n\r\nconst userRegister = (data, isRegistered) => (dispatch) => {\r\n    dispatch({\r\n        type: register,\r\n        payload: data,\r\n        isRegistered,\r\n    })\r\n}\r\n\r\nconst userPinReset = (data, isPinReset) => (dispatch) => {\r\n    dispatch({\r\n        type: pinReset,\r\n        payload: data,\r\n        isPinReset,\r\n    })\r\n}\r\n\r\nconst updateTransactionHistory = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: transactionHistory,\r\n        payload: data,\r\n    })\r\n}\r\n\r\nconst toggleDisplay = (display) => (dispatch) => {\r\n    dispatch({\r\n        type: toggleBalanceDisplay,\r\n        payload: display,\r\n    })\r\n}\r\n\r\nexport {\r\n    user_login,\r\n    userPinReset,\r\n    userRegister,\r\n    updateTransactionHistory,\r\n    toggleDisplay,\r\n}\r\n","const LOGIN = 'LOGIN'\r\nconst register = 'register'\r\nconst pinReset = 'pinReset'\r\nconst transfer = 'transfer'\r\nconst transactionHistory = 'transactionHistory'\r\nconst toggleBalanceDisplay = 'toggleBalanceDisplay'\r\n\r\nexport {\r\n    LOGIN,\r\n    register,\r\n    pinReset,\r\n    transfer,\r\n    transactionHistory,\r\n    toggleBalanceDisplay,\r\n}\r\n","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Col, Row, Button as btn } from 'reactstrap'\r\nimport { userLogin } from '../../services/authentication'\r\nimport { user_login } from '../../services/appstore/actions/actions'\r\nimport { LoginForm } from '../forms/index'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\nimport { Facebook, Instagram, Twitter } from '@material-ui/icons'\r\n\r\nexport const Text = styled.p`\r\n    font-size: 42px;\r\n    font-weight: 600;\r\n    color: #065340;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    letter-spacing: 0.02rem;\r\n`\r\nexport const Button = styled(btn)`\r\n    background-color: transparent;\r\n    border: 2px solid white;\r\n    width: 150px;\r\n    height: 50px;\r\n    color: white;\r\n`\r\n\r\nconst SignIn = (props) => {\r\n    const [state, setState] = useState({\r\n        error: '',\r\n        formLoading: false,\r\n    })\r\n\r\n    const handleSubmit = async (value) => {\r\n        setState({\r\n            formLoading: true,\r\n            error: '',\r\n        })\r\n        try {\r\n            await userLogin(value, props.user_login)\r\n            setState({\r\n                formLoading: false,\r\n            })\r\n            props.history.push('/dashboard')\r\n        } catch (error) {\r\n            setState({\r\n                error: error || 'An error occured',\r\n                formLoading: false,\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Col style={{ height: '100vh' }}>\r\n            <Row style={{ height: '100%' }}>\r\n                <Col\r\n                    lg={8}\r\n                    className=\"d-flex justify-content-center align-items-center\"\r\n                >\r\n                    <Col lg={6} xs={11}>\r\n                        <Text className=\"text-center\">Sign in to Account</Text>\r\n                        <Col lg={4} className=\"m-auto pt-3 pb-4\">\r\n                            <Row>\r\n                                <Col>\r\n                                    <Facebook\r\n                                        style={{ color: '#065340' }}\r\n                                        fontSize=\"large\"\r\n                                    />\r\n                                </Col>\r\n                                <Col>\r\n                                    <Twitter\r\n                                        style={{ color: '#065340' }}\r\n                                        fontSize=\"large\"\r\n                                    />\r\n                                </Col>\r\n                                <Col>\r\n                                    <Instagram\r\n                                        style={{ color: '#065340' }}\r\n                                        fontSize=\"large\"\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                        <Text\r\n                            style={{ fontSize: '14px' }}\r\n                            className=\"text-center\"\r\n                        >\r\n                            or use your email account\r\n                        </Text>\r\n                        <LoginForm\r\n                            handleSubmit={handleSubmit}\r\n                            formLoading={state.formLoading}\r\n                            error={state.error}\r\n                        />\r\n                        <Col\r\n                            style={{\r\n                                position: 'absolute',\r\n                                top: '130%',\r\n                                bottom: 0,\r\n                            }}\r\n                        >\r\n                            <Text\r\n                                style={{ fontSize: '14px' }}\r\n                                className=\"text-center\"\r\n                            >\r\n                                policy . Terms & conditions\r\n                            </Text>\r\n                        </Col>\r\n                    </Col>\r\n                </Col>\r\n                <Col\r\n                    lg={4}\r\n                    style={{ backgroundColor: '#065340' }}\r\n                    className=\"d-flex justify-content-center align-items-center \"\r\n                >\r\n                    <Col lg={7} className=\"m-auto\">\r\n                        <Text\r\n                            style={{ color: 'white' }}\r\n                            className=\"text-center\"\r\n                        >\r\n                            Hello, Friend\r\n                        </Text>\r\n                        <Text\r\n                            style={{\r\n                                fontSize: '18px',\r\n                                color: 'white',\r\n                                opacity: 0.7,\r\n                                fontWeight: 500,\r\n                            }}\r\n                            className=\"text-center\"\r\n                        >\r\n                            Fill up personal information and start journey with\r\n                            us\r\n                        </Text>\r\n                        <div className=\"d-flex justify-content-center pt-4\">\r\n                            <Link\r\n                                style={{\r\n                                    color: 'white',\r\n                                    textDecoration: 'none',\r\n                                }}\r\n                                to=\"/register\"\r\n                            >\r\n                                <Button className=\"rounded-pill\">\r\n                                    Sign Up\r\n                                </Button>\r\n                            </Link>\r\n                        </div>\r\n                    </Col>\r\n                </Col>\r\n            </Row>\r\n\r\n            {/* <Col className=\"bg-dark\" style={{ height: '160px' }}></Col> */}\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default connect(null, { user_login })(SignIn)\r\n","import React from 'react'\r\nimport { Row, Col } from 'reactstrap'\r\nimport { SignUpForm } from '../forms'\r\nimport { registerUser } from '../../services/authentication'\r\nimport { Button, Text } from '../signin/signin'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Register extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            formLoading: false,\r\n            regError: '',\r\n        }\r\n    }\r\n\r\n    handleSubmit = async (values) => {\r\n        this.setState({ formLoading: true, regError: '' })\r\n        try {\r\n            await registerUser(values)\r\n            this.setState({ formLoading: false })\r\n            this.props.history.push('/signin')\r\n        } catch (error) {\r\n            this.setState({\r\n                formLoading: false,\r\n                regError: error,\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Col style={{ height: '100vh', overflow: 'hidden' }}>\r\n                <Row style={{ height: '100%' }}>\r\n                    <Col\r\n                        lg={8}\r\n                        className=\"d-flex justify-content-center align-items-center\"\r\n                    >\r\n                        <Col lg={6} xs={11}>\r\n                            <Text className=\"text-center\">\r\n                                Create an Account\r\n                            </Text>\r\n\r\n                            <SignUpForm\r\n                                handleSubmit={this.handleSubmit}\r\n                                formLoading={this.state.formLoading}\r\n                                error={this.state.regError}\r\n                            />\r\n                        </Col>\r\n                    </Col>\r\n                    <Col\r\n                        lg={4}\r\n                        style={{ backgroundColor: '#065340' }}\r\n                        className=\"d-flex justify-content-center align-items-center \"\r\n                    >\r\n                        <Col lg={7} className=\"m-auto\">\r\n                            <Text\r\n                                style={{ color: 'white' }}\r\n                                className=\"text-center\"\r\n                            >\r\n                                Hello, Friend\r\n                            </Text>\r\n                            <Text\r\n                                style={{\r\n                                    fontSize: '18px',\r\n                                    color: 'white',\r\n                                    opacity: 0.7,\r\n                                    fontWeight: 500,\r\n                                }}\r\n                                className=\"text-center\"\r\n                            >\r\n                                Welcome back, we've missed you\r\n                            </Text>\r\n                            <div className=\"d-flex justify-content-center pt-4\">\r\n                                <Link\r\n                                    style={{\r\n                                        color: 'white',\r\n                                        textDecoration: 'none',\r\n                                    }}\r\n                                    to=\"/signin\"\r\n                                >\r\n                                    <Button className=\"rounded-pill\">\r\n                                        Sign In\r\n                                    </Button>\r\n                                </Link>\r\n                            </div>\r\n                        </Col>\r\n                    </Col>\r\n                </Row>\r\n\r\n                {/* <Col className=\"bg-dark\" style={{ height: '160px' }}></Col> */}\r\n            </Col>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Register\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport Styled from 'styled-components'\r\nimport {\r\n    Dashboard,\r\n    AccountBalance,\r\n    Settings,\r\n    Payment,\r\n    Person,\r\n    ExitToApp,\r\n} from '@material-ui/icons'\r\nimport styled from 'styled-components'\r\n\r\nexport const Type = styled.span`\r\n    color: ${(props) => props.color};\r\n    font-size: ${(props) => props.size}px;\r\n`\r\nexport const activeClass = 'active'\r\nexport const Sidelink = Styled((props) => (\r\n    <NavLink {...props} activeClassName={activeClass} />\r\n))`\r\n  color: white;\r\n  font-wight: 500;\r\n  font-size: 15px;\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  padding-top: 15px;\r\n  padding-bottom: 15px;\r\n  padding-left: 10px;\r\n  border-radius: 10px;\r\n  transition: all ease 0.3s;\r\n  &:hover {\r\n    background: #4004af,\r\n    color: white;\r\n  }\r\n  &.${activeClass} {\r\n    background: #4004af;\r\n    color: white;\r\n  }\r\n`\r\n\r\nconst dashboardRoutes = [\r\n    {\r\n        path: '/dashboard',\r\n        name: 'Dashboard',\r\n        icon: <Dashboard />,\r\n    },\r\n    {\r\n        path: '/dashboard/analysis',\r\n        name: 'Send money',\r\n        icon: <Payment />,\r\n    },\r\n    {\r\n        path: '/dashboard/wallet',\r\n        name: 'Wallet',\r\n        icon: <AccountBalance />,\r\n    },\r\n    {\r\n        path: '/dashboard/profile',\r\n        name: 'Profile',\r\n        icon: <Person />,\r\n    },\r\n    {\r\n        path: '/dashboard/Settings',\r\n        name: 'Settings',\r\n        icon: <Settings />,\r\n    },\r\n]\r\nconst SideBar = () => {\r\n    return (\r\n        <div style={{ position: 'static' }}>\r\n            <div className=\"pt-4\">\r\n                <Type size=\"25\" className=\"font-weight-bold\" color=\"white\">\r\n                    Afrobank\r\n                </Type>\r\n            </div>\r\n            <div style={{ marginTop: '55px' }}>\r\n                {dashboardRoutes.map((data, idx) => {\r\n                    return (\r\n                        <Sidelink\r\n                            key={idx}\r\n                            exact\r\n                            to={data.path}\r\n                            style={{ textDecoration: 'none' }}\r\n                        >\r\n                            {data.icon}\r\n                            <span className=\"pl-3\">{data.name}</span>\r\n                        </Sidelink>\r\n                    )\r\n                })}\r\n                <div style={{ position: 'absolute', bottom: 25 }}>\r\n                    <Sidelink\r\n                        exact\r\n                        to=\"/signout\"\r\n                        style={{ textDecoration: 'none' }}\r\n                    >\r\n                        <ExitToApp />\r\n                        <span className=\"pl-3\">log out</span>\r\n                    </Sidelink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideBar\r\n","import Axios from '../index'\r\nimport { extractApiError } from '../../utils/error'\r\n\r\nconst transfer = async (payload, sender, pin) => {\r\n    const { recipient, amount } = payload\r\n    const body = {\r\n        recipient: recipient.toString(),\r\n        amount,\r\n        sender: sender.toString(),\r\n    }\r\n    try {\r\n        const response = await Axios.post('/transfer', body)\r\n        return response.data.message\r\n    } catch (error) {\r\n        extractApiError(error)\r\n    }\r\n}\r\n\r\nconst transactionHistory = async (accountNumber, updateTransactionHistory) => {\r\n    try {\r\n        const resp = await Axios.get(`/history/${accountNumber}`)\r\n        updateTransactionHistory(resp.data.message)\r\n    } catch (error) {\r\n        extractApiError(error)\r\n    }\r\n}\r\n\r\nconst getBalance = async (accountNumber) => {\r\n    try {\r\n        const resp = await Axios.get(`/balance/${accountNumber}`)\r\n        return resp.data.message\r\n    } catch (error) {\r\n        extractApiError(error)\r\n    }\r\n}\r\n\r\nexport { transactionHistory, transfer, getBalance }\r\n","const daysOfTheWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat']\r\n\r\nconst months = [\r\n    'Jan',\r\n    'Feb',\r\n    'Mar',\r\n    'Apr',\r\n    'May',\r\n    'Jun',\r\n    'Jul',\r\n    'Aug',\r\n    'Sep',\r\n    'Oct',\r\n    'Nov',\r\n    'Dec',\r\n]\r\n\r\nconst getCurrentDate = (date) => {\r\n    return new Date(date)\r\n}\r\n\r\nconst getFormatedTime = (date) => {\r\n    const currentDate = getCurrentDate(date)\r\n    const getHours = currentDate.getHours()\r\n    const getMinutes =\r\n        currentDate.getMinutes().toString().length < 2\r\n            ? `0${currentDate.getMinutes()}`\r\n            : currentDate.getMinutes()\r\n    const getTimeOfTheDay = getHours < 12 ? 'am' : 'pm'\r\n    const time = `${getHours}:${getMinutes} ${getTimeOfTheDay}`\r\n    return time\r\n}\r\n\r\nconst getTimeOfTheDay = () => {\r\n    var timeOfTheDay\r\n    const currentDay = new Date().getHours()\r\n    if (currentDay < 12) {\r\n        timeOfTheDay = 'Good morning'\r\n    } else if (currentDay <= 15) {\r\n        timeOfTheDay = 'Good afternoon'\r\n    } else {\r\n        timeOfTheDay = 'Good evening'\r\n    }\r\n    return timeOfTheDay\r\n}\r\nconst getFormatedDate = (date) => {\r\n    const currentDate = getCurrentDate(date)\r\n    const day = currentDate.getDay()\r\n    const getDate = currentDate.getDate()\r\n    const month = currentDate.getMonth()\r\n    const year = currentDate.getFullYear()\r\n\r\n    const formatedDay = `${daysOfTheWeek[day]} ${getDate} ${months[month]}, ${year}`\r\n    return formatedDay\r\n}\r\nexport { getFormatedDate, getFormatedTime, getTimeOfTheDay }\r\n","const formatMoney = (amount) => {\r\n    const money = amount.toFixed(2)\r\n    return `₦ ${money}`\r\n}\r\nconst sumAmount = (transactions) => {\r\n    return transactions.reduce((a, b) => +a + +b.amount || 0, 0)\r\n}\r\n\r\nconst calculateAllDebit = (transactions = []) => {\r\n    const allDebits = transactions.filter(\r\n        (data) => data.transaction_type === 'debit'\r\n    )\r\n    const totalDebits = sumAmount(allDebits)\r\n\r\n    return formatMoney(totalDebits)\r\n}\r\n\r\nexport { formatMoney, calculateAllDebit }\r\n","import React, { useEffect, useState } from 'react'\r\nimport { connect, useSelector } from 'react-redux'\r\nimport { transactionHistory, getBalance } from '../../services/transactions'\r\nimport { Container, Col, Row, Table } from 'reactstrap'\r\nimport {\r\n    updateTransactionHistory,\r\n    toggleDisplay,\r\n} from '../../services/appstore/actions/actions'\r\nimport {\r\n    getFormatedDate,\r\n    calculateAllDebit,\r\n    formatMoney,\r\n    getFormatedTime,\r\n    getTimeOfTheDay,\r\n} from '../../utils'\r\nimport {\r\n    Autorenew,\r\n    Search,\r\n    Visibility,\r\n    VisibilityOff,\r\n} from '@material-ui/icons'\r\nimport styled from 'styled-components'\r\nimport Loader from 'react-loader-spinner'\r\n\r\nconst AccountCard = styled.div`\r\n    height: 150px;\r\n    width: 100%;\r\n    border-radius: 10px;\r\n    background: #0d3153;\r\n    background-image: url(${(props) => props.img});\r\n    transition: all ease 0.3s;\r\n`\r\n\r\nexport const Dashbody = styled.div`\r\n    height: 105vh;\r\n    background: #0f0f0fe5;\r\n`\r\nconst Inputdiv = styled.div`\r\n    width: 230px;\r\n    background: #0f0f0f73;\r\n    height: 44px;\r\n    padding-right: 10px;\r\n    padding-left: 10px;\r\n    border-radius: 5px;\r\n`\r\nconst Input = styled.input`\r\n    border: none;\r\n    outline: none;\r\n    height: 100%;\r\n    background: transparent;\r\n    color: white;\r\n`\r\nconst DashbodyCard = styled.div`\r\n    width: 100%;\r\n    background: #000000;\r\n    border-radius: 10px;\r\n    height: 100%;\r\n    max-height: 530px;\r\n    overflow-y: scroll;\r\n    ::-webkit-scrollbar {\r\n        display: none;\r\n    }\r\n    -ms-overflow-style: none;\r\n    scrollbar-width: none;\r\n`\r\n\r\nexport const Type = styled.span`\r\n    color: ${(props) => props.color};\r\n    font-size: ${(props) => props.size}px;\r\n`\r\n\r\nconst Dashboard = (props) => {\r\n    const [state, setState] = useState({\r\n        toggleTransferModal: false,\r\n        balance: 0,\r\n        displayBal: true,\r\n        balanceLoading: false,\r\n    })\r\n    const data = useSelector((state) => state.user)\r\n\r\n    const style = {\r\n        cursor: 'pointer',\r\n    }\r\n\r\n    const pageBalance = async () => {\r\n        const { accountNumber } = data.signIn.payLoad\r\n        setState({\r\n            balanceLoading: true,\r\n        })\r\n        try {\r\n            const balance = await getBalance(accountNumber)\r\n            await transactionHistory(\r\n                accountNumber,\r\n                props.updateTransactionHistory\r\n            )\r\n            setState({\r\n                balance: balance,\r\n                balanceLoading: false,\r\n            })\r\n        } catch (error) {\r\n            setState({\r\n                balanceLoading: false,\r\n            })\r\n            throw error\r\n        }\r\n    }\r\n\r\n    const toggleVisibility = () => {\r\n        setState({ ...state, displayBal: !state.displayBal })\r\n        props.toggleDisplay(state.displayBal)\r\n    }\r\n\r\n    const renderTransactions = () => {\r\n        const { transactions } = data\r\n        return transactions.slice(0, 4).map((transaction, i) => {\r\n            const {\r\n                transaction_id,\r\n                amount,\r\n                transaction_date,\r\n                transaction_type,\r\n            } = transaction\r\n\r\n            const formatDay = getFormatedDate(transaction_date)\r\n            const formatTime = getFormatedTime(transaction_date)\r\n            return (\r\n                <tr key={i}>\r\n                    <td>{transaction_id}</td>\r\n                    <td\r\n                        style={{\r\n                            color: `${\r\n                                transaction_type === 'credit' ? 'green' : 'red'\r\n                            }`,\r\n                            fontWeight: 600,\r\n                        }}\r\n                    >\r\n                        {formatMoney(amount)}\r\n                    </td>\r\n                    <td\r\n                        style={{\r\n                            color: `${\r\n                                transaction_type === 'credit' ? 'green' : 'red'\r\n                            }`,\r\n                            fontWeight: 600,\r\n                        }}\r\n                    >\r\n                        {transaction_type}\r\n                    </td>\r\n                    <td>{`${formatDay} ${formatTime}`}</td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const { accountNumber } = data.signIn.payLoad\r\n            setState({\r\n                balanceLoading: true,\r\n            })\r\n            try {\r\n                await transactionHistory(\r\n                    accountNumber,\r\n                    props.updateTransactionHistory\r\n                )\r\n                const balance = await getBalance(accountNumber)\r\n                setState({\r\n                    balance: balance,\r\n                    balanceLoading: false,\r\n                })\r\n            } catch (error) {\r\n                throw error\r\n            }\r\n        }\r\n        fetchData()\r\n    }, [data.signIn.payLoad, props.updateTransactionHistory])\r\n\r\n    return (\r\n        <Col>\r\n            <Row>\r\n                <Col lg={12}>\r\n                    <div className=\"d-flex justify-content-between pt-4 align-items-center\">\r\n                        <Type\r\n                            size=\"25\"\r\n                            className=\"font-weight-bold\"\r\n                            color=\"white\"\r\n                        >\r\n                            {`Hello ${\r\n                                data.signIn.payLoad.firstName\r\n                            }, ${getTimeOfTheDay()}.`}\r\n                        </Type>\r\n                        <Inputdiv className=\"d-flex justify-content-between align-items-center\">\r\n                            <Search />\r\n                            <Input placeholder=\"Find something\" />\r\n                        </Inputdiv>\r\n                    </div>\r\n                    <DashbodyCard className=\"pb-3 pt-3 mt-5\">\r\n                        <Container className=\"pr-4 pl-4\">\r\n                            <Row className=\"pt-3\">\r\n                                <Col lg={4}>\r\n                                    <AccountCard\r\n                                        style={{\r\n                                            background: '#4004af',\r\n                                            color: 'white',\r\n                                        }}\r\n                                    >\r\n                                        <Container>\r\n                                            <div className=\"d-flex justify-content-end pt-2 align-items-center\">\r\n                                                <Autorenew\r\n                                                    style={style}\r\n                                                    onClick={() =>\r\n                                                        pageBalance()\r\n                                                    }\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"d-flex justify-content-between\">\r\n                                                {props.balanceDisplay ? (\r\n                                                    <Visibility\r\n                                                        onClick={() =>\r\n                                                            toggleVisibility()\r\n                                                        }\r\n                                                        style={{\r\n                                                            position:\r\n                                                                'absolute',\r\n                                                            top: '70%',\r\n                                                        }}\r\n                                                    />\r\n                                                ) : (\r\n                                                    <VisibilityOff\r\n                                                        onClick={() =>\r\n                                                            toggleVisibility()\r\n                                                        }\r\n                                                        style={{\r\n                                                            position:\r\n                                                                'absolute',\r\n                                                            top: '70%',\r\n                                                        }}\r\n                                                    />\r\n                                                )}\r\n\r\n                                                <Type\r\n                                                    size=\"24\"\r\n                                                    style={{\r\n                                                        position: 'absolute',\r\n                                                        top: '65%',\r\n                                                        right: '10%',\r\n                                                        fontWeight: 600,\r\n                                                        color: `${\r\n                                                            state.balance < 100\r\n                                                                ? 'red'\r\n                                                                : 'white'\r\n                                                        }`,\r\n                                                    }}\r\n                                                >\r\n                                                    {state.balanceLoading ? (\r\n                                                        <Loader\r\n                                                            type=\"ThreeDots\"\r\n                                                            height={30}\r\n                                                            width={30}\r\n                                                            color=\"#ffff\"\r\n                                                        />\r\n                                                    ) : !props.balanceDisplay ? (\r\n                                                        formatMoney(\r\n                                                            state.balance\r\n                                                        )\r\n                                                    ) : (\r\n                                                        '****'\r\n                                                    )}\r\n                                                </Type>\r\n                                            </div>\r\n                                        </Container>\r\n                                    </AccountCard>\r\n                                </Col>\r\n                                <Col lg={4}>\r\n                                    <AccountCard\r\n                                        style={{\r\n                                            background: '#f707eb',\r\n                                            color: 'white',\r\n                                        }}\r\n                                        className=\"pt-2\"\r\n                                    >\r\n                                        <Container>\r\n                                            <Type\r\n                                                size=\"15\"\r\n                                                className=\"mt-5 font-weight-bold\"\r\n                                            >\r\n                                                Account Details\r\n                                            </Type>\r\n                                            <br />\r\n                                            <Type\r\n                                                size=\"12\"\r\n                                                style={{\r\n                                                    position: 'absolute',\r\n                                                    top: '60%',\r\n                                                    fontWeight: 550,\r\n                                                }}\r\n                                            >\r\n                                                Name:{' '}\r\n                                                {`${data.signIn.payLoad.firstName} ${data.signIn.payLoad.lastName}`}\r\n                                            </Type>\r\n                                            <br />\r\n                                            <Type\r\n                                                size=\"15\"\r\n                                                style={{\r\n                                                    position: 'absolute',\r\n                                                    top: '75%',\r\n                                                    fontWeight: 550,\r\n                                                }}\r\n                                            >\r\n                                                Account Number:\r\n                                                {\r\n                                                    data.signIn.payLoad\r\n                                                        .accountNumber\r\n                                                }\r\n                                            </Type>\r\n                                        </Container>\r\n                                    </AccountCard>\r\n                                </Col>\r\n                                <Col lg={4}>\r\n                                    <AccountCard className=\"d-flex justify-content-center align-items-center\">\r\n                                        <Type color=\"white\">{`you've spent ${calculateAllDebit(\r\n                                            data.transactions\r\n                                        )} so far`}</Type>\r\n                                    </AccountCard>\r\n                                </Col>\r\n                            </Row>\r\n                            <div className=\"d-flex justify-content-between pt-4\">\r\n                                <Type size=\"18\" color=\"white\">\r\n                                    Transactions\r\n                                </Type>\r\n                                <Type color=\"green\">Show all</Type>\r\n                            </div>\r\n                            <div className=\"pt-3\">\r\n                                <Table\r\n                                    style={{ overflowY: 'scroll' }}\r\n                                    striped\r\n                                    responsive\r\n                                    borderless\r\n                                >\r\n                                    <thead style={{ color: 'whitesmoke' }}>\r\n                                        <tr>\r\n                                            <th>Transaction ID</th>\r\n                                            <th>Amount</th>\r\n                                            <th>Type</th>\r\n                                            <th>Date/Time</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody style={{ color: 'white' }}>\r\n                                        {!!data.transactions &&\r\n                                            renderTransactions()}\r\n                                    </tbody>\r\n                                </Table>\r\n                            </div>\r\n                        </Container>\r\n                    </DashbodyCard>\r\n                </Col>\r\n            </Row>\r\n        </Col>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    balanceDisplay: state.user.balanceDisplay,\r\n})\r\nexport default connect(mapStateToProps, {\r\n    updateTransactionHistory,\r\n    toggleDisplay,\r\n})(Dashboard)\r\n","import React from 'react'\r\nimport { Row, Col } from 'reactstrap'\r\nimport styled from 'styled-components'\r\n\r\nexport const Type = styled.span`\r\n    color: ${(props) => props.color};\r\n    font-size: ${(props) => props.size}px;\r\n`\r\nconst Wallet = () => {\r\n    return (\r\n        <Col>\r\n            <Row>\r\n                <Col lg={12}>\r\n                    <div className=\"d-flex pt-4 align-items-center\">\r\n                        <Type\r\n                            size=\"25\"\r\n                            className=\"font-weight-bold\"\r\n                            color=\"white\"\r\n                        >\r\n                            Wallet\r\n                        </Type>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Col>\r\n    )\r\n}\r\nexport default Wallet\r\n","import Axios from '../index'\r\n\r\nconst fetchAllNotifications = async (accountNumber) => {\r\n    try {\r\n        const resp = await Axios.get(`/notifications/${accountNumber}`)\r\n        return resp.data.message\r\n    } catch (error) {\r\n        throw error\r\n    }\r\n}\r\n\r\nconst deleteSingleNotification = async (id) => {\r\n    try {\r\n        console.log(id)\r\n    } catch (error) {\r\n        throw error\r\n    }\r\n}\r\n\r\nexport { fetchAllNotifications, deleteSingleNotification }\r\n","import React from 'react'\r\nimport { Clear, ArrowForward } from '@material-ui/icons'\r\nimport { Modal, ModalBody } from 'reactstrap'\r\nimport propTypes from 'prop-types'\r\nimport { Pin, Button } from '../globalcomponents/index'\r\n\r\nconst PinModal = (props) => {\r\n    return (\r\n        <div>\r\n            <Modal isOpen={props.isVisible} toggle={props.toggleVisibility}>\r\n                <div className=\"ml-2 mr-2 mt-2 d-flex justify-content-end align-items-center\">\r\n                    <Button\r\n                        bg=\"none\"\r\n                        onClick={props.toggleVisibility}\r\n                        icon={() => <Clear style={{ color: 'red' }} />}\r\n                    />\r\n                </div>\r\n                <ModalBody>\r\n                    <div className=\"d-flex justify-content-center\">\r\n                        <Pin onChange={props.onChange} />\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-center pt-5 pb-3\">\r\n                        <Button\r\n                            onClick={props.onSubmit}\r\n                            className=\"rounded-pill\"\r\n                            bg=\"#0d3153\"\r\n                            color=\"white\"\r\n                            width={150}\r\n                            height={40}\r\n                            icon={() => <ArrowForward fontSize=\"small\" />}\r\n                        />\r\n                    </div>\r\n                </ModalBody>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nPinModal.propTypes = {\r\n    isVisible: propTypes.bool.isRequired,\r\n    toggleVisibility: propTypes.func.isRequired,\r\n    onSubmit: propTypes.func,\r\n}\r\n\r\nPinModal.defaultProps = {\r\n    onSubmit: () => {},\r\n    isVisible: false,\r\n    toggleVisibility: () => {},\r\n}\r\n\r\nexport default PinModal\r\n","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Row, Col, Card } from 'reactstrap'\r\nimport styled from 'styled-components'\r\nimport { getBalance, transfer } from '../../services/transactions/index'\r\nimport { TransferForm } from '../forms/index'\r\nimport { PinModal } from '../../modals'\r\n\r\nexport const Type = styled.span`\r\n    color: ${(props) => props.color};\r\n    font-size: ${(props) => props.size}px;\r\n`\r\nconst AccountCard = styled(Card)`\r\n    height: 100%;\r\n    min-height: 300px;\r\n    width: 100%;\r\n    margin-top: 100px;\r\n    margin-bottom: 50px;\r\n    border-radius: 10px;\r\n    transition: all ease 0.3s;\r\n`\r\n\r\nconst DashbodyCard = styled.div`\r\n    width: 100%;\r\n    background: #000000;\r\n    border-radius: 10px;\r\n    height: 100%;\r\n    min-height: 560px;\r\n    overflow-y: scroll;\r\n    ::-webkit-scrollbar {\r\n        display: none;\r\n    }\r\n    -ms-overflow-style: none;\r\n    scrollbar-width: none;\r\n`\r\nconst SendMoney = (props) => {\r\n    const [formLoading, setFormLoading] = useState(false)\r\n    const [error, setError] = useState('')\r\n    const [balance, setBalance] = useState(0)\r\n    const [pin, setPin] = useState('')\r\n    const [pinModal, setPinModal] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const { accountNumber } = props.payLoad\r\n        async function fetchBalance() {\r\n            setBalance(await getBalance(accountNumber))\r\n        }\r\n        fetchBalance()\r\n    }, [props.payLoad])\r\n\r\n    const handleSubmit = async (values) => {\r\n        const { accountNumber } = props.payLoad\r\n        setFormLoading(true)\r\n        setError('')\r\n        try {\r\n            await transfer(values, accountNumber, pin)\r\n            setFormLoading(false)\r\n        } catch (error) {\r\n            setError(error)\r\n            setFormLoading(false)\r\n        }\r\n    }\r\n\r\n    const toggleVisibility = () => {\r\n        setPinModal(!pinModal)\r\n    }\r\n\r\n    return (\r\n        <Col style={{ height: '100%', maxheight: '530px' }}>\r\n            <PinModal\r\n                isVisible={pinModal}\r\n                toggleVisibility={() => toggleVisibility()}\r\n                onChange={(e) => setPin(e)}\r\n                onSubmit={() => console.log(pin)}\r\n            />\r\n            <Row>\r\n                <Col lg={12}>\r\n                    <div className=\"d-flex pt-4 align-items-center\">\r\n                        <Type\r\n                            size=\"25\"\r\n                            className=\"font-weight-bold\"\r\n                            color=\"white\"\r\n                        >\r\n                            Send money\r\n                        </Type>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <DashbodyCard className=\"mt-5\">\r\n                <Col\r\n                    xl={6}\r\n                    className=\"d-flex justify-content-center align-items-center m-auto\"\r\n                >\r\n                    <AccountCard className=\"pr-3 pl-3 pt-3\">\r\n                        <TransferForm\r\n                            formSubmit={handleSubmit}\r\n                            formLoading={formLoading}\r\n                            error={error}\r\n                            balance={balance}\r\n                        />\r\n                    </AccountCard>\r\n                </Col>\r\n            </DashbodyCard>\r\n        </Col>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    payLoad: state.user.signIn.payLoad,\r\n    balanceDisplay: state.user.balanceDisplay,\r\n})\r\nexport default connect(mapStateToProps, {})(SendMoney)\r\n","import React from 'react'\r\nimport { Row, Col } from 'reactstrap'\r\nimport styled from 'styled-components'\r\n\r\nexport const Type = styled.span`\r\n    color: ${(props) => props.color};\r\n    font-size: ${(props) => props.size}px;\r\n`\r\nconst AccountCard = styled.div`\r\n    height: 150px;\r\n    width: 100%;\r\n    border-radius: 10px;\r\n\r\n    background: #0d3153;\r\n    transition: all ease 0.3s;\r\n`\r\n\r\nconst DashbodyCard = styled.div`\r\n    width: 100%;\r\n    background: #000000;\r\n    border-radius: 10px;\r\n    height: 100%;\r\n    max-height: 530px;\r\n    overflow-y: scroll;\r\n    ::-webkit-scrollbar {\r\n        display: none;\r\n    }\r\n    -ms-overflow-style: none;\r\n    scrollbar-width: none;\r\n`\r\nconst Profile = () => {\r\n    return (\r\n        // <div style={{ height: '100%', maxheight: '530px' }}>\r\n        <Col style={{ height: '100%', maxheight: '530px' }}>\r\n            <Row>\r\n                <Col lg={12}>\r\n                    <div className=\"d-flex pt-4 align-items-center\">\r\n                        <Type\r\n                            size=\"25\"\r\n                            className=\"font-weight-bold\"\r\n                            color=\"white\"\r\n                        >\r\n                            Profile\r\n                        </Type>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <DashbodyCard>\r\n                <Row>\r\n                    <Col xl={4}>\r\n                        <AccountCard>\r\n                            <p>hello</p>\r\n                        </AccountCard>\r\n                    </Col>\r\n                    <Col xl={4}>\r\n                        <AccountCard />\r\n                    </Col>\r\n                    <Col xl={4}>\r\n                        <AccountCard />\r\n                    </Col>\r\n                </Row>\r\n            </DashbodyCard>\r\n        </Col>\r\n        // </div>\r\n    )\r\n}\r\nexport default Profile\r\n","import React from 'react'\r\nimport { Row, Col } from 'reactstrap'\r\nimport styled from 'styled-components'\r\n\r\nexport const Type = styled.span`\r\n    color: ${(props) => props.color};\r\n    font-size: ${(props) => props.size}px;\r\n`\r\nconst AccountCard = styled.div`\r\n    height: 150px;\r\n    width: 100%;\r\n    border-radius: 10px;\r\n\r\n    background: #0d3153;\r\n    transition: all ease 0.3s;\r\n`\r\n\r\nconst DashbodyCard = styled.div`\r\n    width: 100%;\r\n    background: #000000;\r\n    border-radius: 10px;\r\n    height: 100%;\r\n    max-height: 530px;\r\n    overflow-y: scroll;\r\n    ::-webkit-scrollbar {\r\n        display: none;\r\n    }\r\n    -ms-overflow-style: none;\r\n    scrollbar-width: none;\r\n`\r\nconst Settings = () => {\r\n    return (\r\n        // <div style={{ height: '100%', maxheight: '530px' }}>\r\n        <Col style={{ height: '100%', maxheight: '530px' }}>\r\n            <Row>\r\n                <Col lg={12}>\r\n                    <div className=\"d-flex pt-4 align-items-center\">\r\n                        <Type\r\n                            size=\"25\"\r\n                            className=\"font-weight-bold\"\r\n                            color=\"white\"\r\n                        >\r\n                            Settings\r\n                        </Type>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <DashbodyCard>\r\n                <Row>\r\n                    <Col xl={4}>\r\n                        <AccountCard>\r\n                            <p>hello</p>\r\n                        </AccountCard>\r\n                    </Col>\r\n                    <Col xl={4}>\r\n                        <AccountCard />\r\n                    </Col>\r\n                    <Col xl={4}>\r\n                        <AccountCard />\r\n                    </Col>\r\n                </Row>\r\n            </DashbodyCard>\r\n        </Col>\r\n        // </div>\r\n    )\r\n}\r\nexport default Settings\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport styled from 'styled-components'\r\nimport SideBar from './sidebar'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport {\r\n    Row,\r\n    Col,\r\n    Container,\r\n    Dropdown,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n    DropdownToggle,\r\n} from 'reactstrap'\r\nimport Dashboard, { Dashbody } from './dashboard'\r\nimport { NotificationsNone } from '@material-ui/icons'\r\nimport Wallet from './wallet'\r\nimport {\r\n    fetchAllNotifications,\r\n    deleteSingleNotification,\r\n} from '../../services/notifications'\r\n\r\nimport SendMoney from './sendmoney'\r\nimport Profile from './profile'\r\nimport Settings from './settings'\r\n\r\nconst NotificationDiv = styled.div`\r\n    height: 44px;\r\n    width: 44px;\r\n    background: #0f0f0f73;\r\n    border-radius: 5px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    cursor: pointer;\r\n`\r\n\r\nconst Badge = styled.div`\r\n    height: 22px;\r\n    width: 22px;\r\n    background: red;\r\n    top: 0;\r\n    left: 30;\r\n    right: 0;\r\n    position: absolute;\r\n`\r\nconst Menu = styled(DropdownMenu)`\r\n    background: #000000;\r\n    width: 330px;\r\n    max-height: 200px;\r\n    overflow-y: scroll;\r\n    ::-webkit-scrollbar {\r\n        display: none;\r\n    }\r\n    -ms-overflow-style: none;\r\n    scrollbar-width: none;\r\n    overflow-x: hidden;\r\n    &:hover {\r\n        background: #000000;\r\n    }\r\n`\r\nconst Item = styled(DropdownItem)`\r\n    color: white;\r\n    width: 100%;\r\n    font-size: 14px;\r\n    &:hover {\r\n        background: #0f0f0fc7;\r\n        color: white;\r\n    }\r\n`\r\n\r\nconst Main = () => {\r\n    const [showNotification, setNotification] = useState(false)\r\n    const [userNotification, setUsernotification] = useState({\r\n        notifications: [],\r\n    })\r\n    const data = useSelector((state) => state.user.signIn.payLoad)\r\n\r\n    const toggleNotification = () => {\r\n        setNotification((prevState) => !prevState)\r\n    }\r\n\r\n    const deleteNotification = async (id) => {\r\n        await deleteSingleNotification(id)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const { accountNumber } = data\r\n        const getNotifications = async () => {\r\n            setUsernotification({\r\n                notifications: await fetchAllNotifications(accountNumber),\r\n            })\r\n        }\r\n        getNotifications()\r\n    })\r\n\r\n    return (\r\n        <Dashbody className=\"pb-4\">\r\n            <Col>\r\n                <Row>\r\n                    <Col xl={2}>\r\n                        <SideBar />\r\n                    </Col>\r\n\r\n                    <Switch>\r\n                        <Route exact path=\"/dashboard\" component={Dashboard} />\r\n                        <Route\r\n                            exact\r\n                            path=\"/dashboard/wallet\"\r\n                            component={Wallet}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/dashboard/analysis\"\r\n                            component={SendMoney}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/dashboard/profile\"\r\n                            component={Profile}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/dashboard/Settings\"\r\n                            component={Settings}\r\n                        />\r\n                    </Switch>\r\n                    <Col xl={1}>\r\n                        <Container>\r\n                            <div className=\"d-flex justify-content-between align-items-center pl-2 pr-3 pt-4\">\r\n                                <Dropdown\r\n                                    isOpen={showNotification}\r\n                                    toggle={toggleNotification}\r\n                                    className=\"p-0\"\r\n                                >\r\n                                    <DropdownToggle\r\n                                        style={{\r\n                                            background: 'none',\r\n                                            border: 'none',\r\n                                            outline: 'none',\r\n                                        }}\r\n                                        className=\"p-0 m-0\"\r\n                                    >\r\n                                        <NotificationDiv>\r\n                                            <Badge className=\"rounded-circle d-flex justify-content-center align-items-center\">\r\n                                                {\r\n                                                    userNotification\r\n                                                        .notifications.length\r\n                                                }\r\n                                            </Badge>\r\n                                            <NotificationsNone\r\n                                                fontSize=\"small\"\r\n                                                style={{ color: 'white' }}\r\n                                            />\r\n                                        </NotificationDiv>\r\n                                    </DropdownToggle>\r\n                                    <Menu right>\r\n                                        {!userNotification.notifications ? (\r\n                                            <Item\r\n                                                className=\"d-flex justify-content-center align-items-center\"\r\n                                                style={{ height: '40px' }}\r\n                                            >\r\n                                                You don't have any notification\r\n                                            </Item>\r\n                                        ) : (\r\n                                            userNotification.notifications.map(\r\n                                                (data, idx) => (\r\n                                                    <Item\r\n                                                        style={{\r\n                                                            borderBottom:\r\n                                                                '1px solid white',\r\n                                                            height: '50px',\r\n                                                        }}\r\n                                                        key={idx}\r\n                                                        onClick={() =>\r\n                                                            deleteNotification(\r\n                                                                data._id\r\n                                                            )\r\n                                                        }\r\n                                                    >\r\n                                                        {data.notification_text}\r\n                                                    </Item>\r\n                                                )\r\n                                            )\r\n                                        )}\r\n                                    </Menu>\r\n                                </Dropdown>\r\n                            </div>\r\n                        </Container>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n        </Dashbody>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import React, { useEffect } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../services/authentication'\r\nimport { user_login } from '../../services/appstore/actions/actions'\r\n\r\nconst SignOut = (props) => {\r\n    useEffect(() => {\r\n        const { user_login } = props\r\n        console.log(props)\r\n        try {\r\n            signOut(user_login)\r\n        } catch (error) {\r\n            throw error\r\n        }\r\n    }, [props])\r\n\r\n    return (\r\n        <div>\r\n            <Redirect to=\"/signin\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, { user_login })(SignOut)\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\r\n    const isSignedIn = useSelector((state) => state.user.signIn.isSignedIn)\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) =>\r\n                isSignedIn ? (\r\n                    <Component {...props} />\r\n                ) : (\r\n                    <Redirect to=\"/signin\" />\r\n                )\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default ProtectedRoute\r\n","import React from 'react'\r\nimport { Dashboard, Homepage, Register, SignOut, Signin } from './allpages'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\r\nimport ProtectedroutePages from './protectedroute.pages'\r\n\r\nconst routes = [\r\n    {\r\n        path: '/register',\r\n        component: Register,\r\n        public: true,\r\n    },\r\n    {\r\n        path: '/signin',\r\n        component: Signin,\r\n        public: true,\r\n    },\r\n    {\r\n        path: '/dashboard',\r\n        component: Dashboard,\r\n        public: false,\r\n    },\r\n    {\r\n        path: '/signout',\r\n        component: SignOut,\r\n        public: true,\r\n    },\r\n]\r\n\r\nconst Main = () => {\r\n    return (\r\n        <TransitionGroup>\r\n            <CSSTransition>\r\n                <BrowserRouter basename=\"/Afrobank\">\r\n                    <Switch>\r\n                        {routes.map((data, i) =>\r\n                            data.public ? (\r\n                                <Route\r\n                                    key={i}\r\n                                    path={data.path}\r\n                                    component={data.component}\r\n                                />\r\n                            ) : (\r\n                                <ProtectedroutePages\r\n                                    key={i}\r\n                                    path={data.path}\r\n                                    component={data.component}\r\n                                />\r\n                            )\r\n                        )}\r\n                        <Route path=\"/\" component={Homepage} />\r\n                    </Switch>\r\n                </BrowserRouter>\r\n            </CSSTransition>\r\n        </TransitionGroup>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import {\r\n    LOGIN,\r\n    pinReset,\r\n    register,\r\n    transactionHistory,\r\n    toggleBalanceDisplay,\r\n} from '../actions'\r\n\r\nconst intState = {\r\n    signIn: {\r\n        isSignedIn: false,\r\n        payLoad: {},\r\n    },\r\n    userReg: {\r\n        isRegistered: false,\r\n        payLoad: {},\r\n    },\r\n    userPinReset: {\r\n        isPinReset: false,\r\n        payLoad: {},\r\n    },\r\n    balanceDisplay: false,\r\n    transactions: [],\r\n}\r\n\r\nconst reducer = (state = intState, action) => {\r\n    switch (action.type) {\r\n        case LOGIN:\r\n            return {\r\n                signIn: {\r\n                    ...state,\r\n                    isSignedIn: action.isSignedIn,\r\n                    payLoad: action.payload,\r\n                },\r\n            }\r\n        case register:\r\n            return {\r\n                userReg: {\r\n                    ...state,\r\n                    isRegistered: action.isRegistered,\r\n                    payLoad: action.payload,\r\n                },\r\n            }\r\n        case pinReset:\r\n            return {\r\n                userPinReset: {\r\n                    ...state,\r\n                    isPinReset: action.isPinReset,\r\n                    payLoad: action.payload,\r\n                },\r\n            }\r\n        case transactionHistory:\r\n            return {\r\n                ...state,\r\n                transactions: action.payload,\r\n            }\r\n        case toggleBalanceDisplay:\r\n            return {\r\n                ...state,\r\n                balanceDisplay: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport { reducer }\r\n","import { combineReducers } from 'redux'\r\nimport { reducer } from './reducer'\r\n\r\nexport default combineReducers({\r\n    user: reducer,\r\n})\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport combineReducers from './reducers'\r\n\r\nconst config = {\r\n    key: 'root',\r\n    storage,\r\n    whitelist: ['user'],\r\n}\r\n\r\nconst middleWare = [thunk]\r\nconst persistedReducer = persistReducer(config, combineReducers)\r\n\r\nconst appStore = () => {\r\n    const store = createStore(persistedReducer, applyMiddleware(...middleWare))\r\n    const persiststore = persistStore(store)\r\n    return { store, persiststore }\r\n}\r\n\r\nexport default appStore\r\n","import React, {useEffect} from \"react\";\r\nimport Main from \"./pages\";\r\nimport { Provider } from \"react-redux\"\r\nimport appStore from \"./services/appstore\"\r\nimport {PersistGate } from \"redux-persist/integration/react\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./index.css\"\r\nimport ReactGA from 'react-ga'\r\n\r\nReactGA.initialize(process.env.REACT_APP_GA_ID)\r\nconsole.log(process.env.REACT_APP_GA_ID)\r\n\r\nfunction App() {\r\n   useEffect(() => {\r\n        ReactGA.pageview(window.location.pathname + window.location.search)\r\n    })\r\n  return (\r\n    <Provider store={appStore().store}>\r\n      <PersistGate loading={null} persistor={appStore().persiststore}>\r\n      <Main />\r\n      </PersistGate>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <App />\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}